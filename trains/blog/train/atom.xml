<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title type="html">Blog: Model Train-related Notes</title>
<updated>2025-09-02T22:34:11.773415-07:00</updated>
<link rel="alternate" type="text/html" hreflang="en" href="https://www.alfray.com/trains/blog/train/"/>
<link rel="self" type="application/atom+xml" hreflang="en" href="https://www.alfray.com/trains/blog/train/atom.xml"/>
<id>https://www.alfray.com/trains/blog/train/atom.xml</id>
<generator uri="https://github.com/ralfoide/rig4" version="0.1-Exp-05cc7b2">Rig4j</generator>
<entry>
<author><name>Ralf</name></author>
<title type="html">Wazz Web Dashboard Update</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2025-08-23_wazz_web_dashboard_update.html"/>
<id>https://www.alfray.com/trains/blog/train/2025-08-23_wazz_web_dashboard_update.html</id>
<category term="train" label="Train"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/wazz/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Wazz&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221; is my own web-based dashboard to get an instant overview of the automation at the Randall Museum Model Railroad. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2025-07-07_new_wazz_web_dashboard.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Last month, I started revamping the web site&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;with a more modern implementation, and after about a month of work, I&#8217;ve just finished this major rework on the status dashboard with the following architecture:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:196.08px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_940d6c4be6094d2d9b07997b3831fb09ac0e2659ed6ad72d94a95f6ea8a39198d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This now results in a web page giving a dashboard like this: &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:1.33px solid #b7b7b7;display:inline-block;height:321.50px;margin:0.00px -0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:575.81px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_4b35daa447ac582316576154103a0fb48d7a5d76d9e4cbd341a11902254fff0ci.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This page gives me an overview of which computers are on, wherever the automated lines are active (the &#8220;toggles&#8221;), and which train ran last, and whether it completed its run properly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The major visible part is this new &#8220;performance&#8221; tab that lets me see how the trains behave on their respective route:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:1.33px solid #b7b7b7;display:inline-block;height:424.50px;margin:0.00px -0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:575.39px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_8e32d6fce9c3cd7728dc819c8f1bf3240f8609a75e517ac64fdff216fe70035bi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For each block, the automation keeps track of the time the train should spend in that block -- there&#8217;s a minimum time, a maximum, and the performance tab shows a color based on the &#8220;ideal&#8221; time spent in each block:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:1.33px solid #b7b7b7;display:inline-block;height:131.04px;margin:-0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:383.90px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_d9b461825c0936afc81b022c0ad829d23e216c0faf809146075ae292e281da1ai.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That allows the automation to detect anomalies as soon as possible. If a train spends too long in a block, that means either the engine has a problem or maybe it derailed and it&#8217;s not moving. The minimum timing also detects anomalies -- since the trains move at a very specific speed, they can&#8217;t magically cross a block too fast. Since we rely on electrical detection of the train in a block, that&#8217;s generally the sign there&#8217;s a problem with a sensor or a train that derailed and shorts the track for example, among other possible causes. In any case, the automation program will automatically stop the current train and attempt to do a &#8220;recovery&#8221; where it runs &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;another&lt;/span&gt;&lt;span&gt;&amp;nbsp;program to bring the train back to the station. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It used to be that I needed to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2024-10-14_conductor_2_freight_starts_w_ce787171.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;carefully go through the automation logs&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to figure issues after the fact. I still expect to do that in specific situations. However, the dashboard &#8220;performance&#8221; page above should help with the most common cases by directly highlighting where a train has performed out of its expected timing range.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That said, the web page dashboard is only the tip of the iceberg, and updating the dashboard web site was the easiest part. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The real magic starts by an update to the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/tree/main/jmri/conductor&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor Automation Script Engine&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. The script language gets a new &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/blob/main/jmri/conductor/engine2k/src/main/kotlin/com/alfray/conductor/v2/script/dsl/IConductor.kt#L99&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;&#8220;dazz event&#8221; command&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;that lets the script register any kind of event to be reported to the dashboard. This is used, for example, to keep track of the automation toggles on the main control panel, and the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/blob/main/jmri/conductor/engine2k/src/main/resources/v2/script/script_v35.01_bl191%2Bml9538%2B1072%2Btl6885.conductor.kts&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;latest script_v35&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;uses it as such:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:1.33px solid #b7b7b7;display:inline-block;height:139.00px;margin:-0.00px -0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:692.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_012fd7bf69498100a79a3fee0ada9e74ef87d243daae6831ccd97213fd038adci.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This allows the automation script to dictate which events get reported and collected, instead of just hardcoding them in the Conductor program. Right now I only collect when computers turn on and off, and when the automation is started or stopped -- which happens automatically when the museum staff turns the exhibit on and off, but can also be the result of the Saturday Operators manually turning the system on and off.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The other part of the Conductor script engine is the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/blob/main/jmri/conductor/engine2k/src/main/kotlin/com/alfray/conductor/v2/script/impl/SequenceRoute.kt&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SequenceRoute class&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. This is the core route management that drives a train through a defined route, and it has been updated to emit route statistics when a train starts and when a train ends its route:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:1.33px solid #b7b7b7;display:inline-block;height:272.00px;margin:0.00px -0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:579.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_f7e55c69d47a990d5b2a5472f57e5f393d1ff1c45d4bc03a000e319c3434fbd1i.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That one is a bit more interesting because we have 3 cases:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A route starts, e.g. in our case a train is leaving the station. We want to collect an event indicating a train started running. We have its start time only.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A route ends normally, meaning the train travelled through its entire route as expected -- in our case, the train has returned to its station. In this case, we want to &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;update&lt;/span&gt;&lt;span&gt;&amp;nbsp;the same event to indicate the train route has ended; we now have an end time, and we also collect the time spent by the train on every single block that it travelled.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A route ends with an error, meaning there was an issue and the train never finished its route. We also want to &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;update&lt;/span&gt;&lt;span&gt;&amp;nbsp;the event, this time collecting an error indication, as well as the list of all the blocks traveled by the train.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The only other kind of route handled by Conductor are &#8220;idle routes&#8221;, which denote a train sitting idle e.g. at a station waiting to leave. These don&#8217;t have any events associated with them for now.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Finally, the other interesting part of the work was the piece &#8220;in the middle&#8221;: we have &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;emitting events, and we have a web site that needs to collect event statistics from some place&#8230; That&#8217;s where &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/tree/main/web/DazzServ&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;DazzServ&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;comes in, a small server running on the local network and accumulating all these statistics and events, to serve them later to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/tree/main/web/wazz&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Wazz&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/tree/main/web/DazzServ&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Dazz implementation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, I considered a few options. Maybe some cool hype stuff in Rust, or a server framework like Ktor and Netty? After considering a few options for the Dazz implementation, I threw all these choices away and opted for something fairly classic: it&#8217;s a simple &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://jetty.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Jetty&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;REST server written in Kotlin, and using &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://gradle.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Gradle&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dagger.dev/dev-guide/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Dagger&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and JUnit4. The server has a minimalist REST API and JSON payloads. It&#8217;s a 100% no-hype implementation, it works well, I&#8217;ve used all of these before so I know the APIs well, and it&#8217;s rock solid. Low learning curve, and, most importantly, very easy to maintain later. I run it locally on one of the layout&#8217;s Linux computers with a simple &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://wiki.debian.org/systemd/Services&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Debian systemd service&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;</content>
<updated>2025-08-23T00:00:20-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">New Wazz Web Dashboard</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2025-07-07_new_wazz_web_dashboard.html"/>
<id>https://www.alfray.com/trains/blog/train/2025-07-07_new_wazz_web_dashboard.html</id>
<category term="rtac" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/wazz/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Wazz&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221; is my own web-based dashboard to get an instant overview of the automation at the Randall Museum Model Railroad. It used to be a crummy javascript single-page web page that I had hacked quickly over the years. I decided to entirely rebuild it using &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://react.dev/learn/typescript&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;React, TypeScript&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, and &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://vite.dev/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Vite&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The source is available on the here: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/tree/main/web/wazz&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/model-railroad/conductor/tree/main/web/wazz&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;And the web app is deployed here: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/wazz/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.alfray.com/trains/randall/wazz/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:304.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_ae694087e99e928a98fcd97a2e9b2ba610628be873805445955c0ceb220b5847i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I used JetBrains&#8217; WebStorm as the IDE; that was a nice step up from my usual VSCode setup. Not much to discuss on the implementation side -- it&#8217;s really your typical no-thrills React-TypeScript web app.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor automation software&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;exports a JSON status, which this reads, and displays. There&#8217;s an automatic refresh every 10 minutes. Note that this isn&#8217;t hosted in any cloud -- it totally relies on the automation computer at Randall having wifi access to the internet. The uptime for that connection is around 95%. Since it&#8217;s mostly a remote view dashboard, I don&#8217;t need a perfect uptime, nor do I expect it to have a high traffic load.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;m essentially the sole user of that dashboard. Which also explains why the display may look cryptic -- it displays exactly what I want the way I want it, with no effort to be legible by people unfamiliar with the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;software.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2025-07-07T00:00:45-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Distant Signal: The HUB75 Protocol for LED Matrix Displays</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2025-04-07_distant_signal_the_hub75_pro_6347ebc3.html"/>
<id>https://www.alfray.com/trains/blog/train/2025-04-07_distant_signal_the_hub75_pro_6347ebc3.html</id>
<category term="arduino" label="Arduino"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;This is the display I use for &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/distant-signal&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Distant Signal&lt;/a&gt;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.adafruit.com/product/2278&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.adafruit.com/product/2278&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;$40, 64x32 with 4 mm pitch.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.aliexpress.us/item/3256808335479840.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.aliexpress.us/item/3256808335479840.html&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, $18, 64x32 with 4 mm pitch.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s the AliExpress one in use:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:349.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_35fa0cf0851544c9c6af1ca46d8711a2249d7f5f89031158185433f915e89feci.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Using the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.adafruit.com/product/2278&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;AdaFruit version&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, here&#8217;s what the back of the panel looks like, annotated:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:332.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:690.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_c47ba6195a160e05e2c3abbda43336160088e269a84a992fdc81f09a025ab9e3d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-style:italic&quot;&gt;Source: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-size:9pt;font-style:italic;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.adafruit.com/product/2278&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;AdaFruit&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Notice the little vertical chips that are highlighted in Red, Green, Blue above. There are 4 x 3 x 2 of them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The HUB75 connector is an industry ad-hoc connector. As far as I can tell, there is no solid specification anywhere to be found. Instead, it seems to have evolved over the years, and used more or less in a compatible way.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So here&#8217;s how this panel works:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The panel has no memory frame buffer per se.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The panel is composed of RGB LEDs that can be individually turned on or off. There is no variation on brightness -- each pixel&#8217;s RGB component is either on or off.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The little chips highlighted in the RGB sections above are ICN2037BP -- these are &#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://olympianled.com/wp-content/uploads/2021/05/ICN2037_datasheet_EN_2017_V2.0.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;16-channel constant current sink output LED drivers&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221; (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://olympianled.com/wp-content/uploads/2021/05/ICN2037_datasheet_EN_2017_V2.0.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;datasheet PDF&lt;/a&gt;&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What this means is that each chip can hold 16 bits of data. 4 chips per line allows it to hold up to one line of 64 bits, and we need 3 of them per line to hold enough data to drive 64 RGB LEDs in one line.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s keep in mind that this is a 64x32 LED panel. That&#8217;s a very important detail.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The connector is a bit puzzling at first:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:247.56px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:624.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_474572fbd095598a7605e670d3e251715d89677db98828b81e093aa0f29c7e74d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-style:italic&quot;&gt;HUB75 vs HUB75-E connector: Sources: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-size:9pt;font-style:italic;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.lushaylabs.com/led-panel-hub75/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;lushaylabs&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-style:italic&quot;&gt;&amp;nbsp;and &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-size:9pt;font-style:italic;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://justanotherelectronicsblog.com/?p=636&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;justanotherelectronicsblog&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-style:italic&quot;&gt;I like how there are 2 ways to number the pins&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The HUB75 connector basically drives the electronics directly:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There are pins to provide color data for 2 lines of colors, RGB0 and RGB1, at the same time.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There&#8217;s an &#8220;address bus&#8221; consisting of 4 pins -- that&#8217;s 4 bits, which is enough to select one out of 16 lines.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So here&#8217;s how one displays one frame of image on a 64x32 panel:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Turn the entire panel off using the /OE (output enable) pin.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Select the one line out of 16 to update, from 0 to 15, using the 4 address pins.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The panel has 32 lines yet we can only select one out of 16, how does that work?&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;That&#8217;s why there are RGB0 and RGB1 pins: we fill 2 lines at the same time.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The panel is essentially split in two halves vertically. &lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Selecting the address 0 sends data to line 0 and line 16. Using address 1 sends data to line 1 and 17, etc., all the way up to line 15 and 31.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Send 64 bits for 2 lines on the RGB0 and RGB1 pins.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Note that each RGB component is either turned on or turned off for each pixel. There is no brightness selection here.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The CLK (clock) pin is used to clock in the 64 bits composing the line.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Once that is done, use the LATCH pin to copy the data into a second set of buffers that directly drive the LEDs. This is done internally in the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://olympianled.com/wp-content/uploads/2021/05/ICN2037_datasheet_EN_2017_V2.0.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ICN2037&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Finally release the /OE (output enable) pin to allow the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://olympianled.com/wp-content/uploads/2021/05/ICN2037_datasheet_EN_2017_V2.0.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ICN2037&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;drivers to light up the select lines of LEDs.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Rinse and repeat with the next line.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Once the 16 &#8220;dual lines&#8221; have been processed, rinse and repeat for the next frame.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The take from that is that this panel only updates two lines of pixels at a time, but it&#8217;s a bit more than that: it only &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;displays&lt;/span&gt;&lt;span&gt;&amp;nbsp;2 lines of pixels at a time. Whilst 2 lines of pixels are turned on, everything else on the panel is turned off. Then the driver just needs to update all the lines one by one, fast enough to take effect of the natural &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Persistence_of_vision&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;persistence of vision&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to avoid flickering.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So now, back to that HUB75 connector: the number of address pins is inherently linked to the number of lines on the panel.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A 16-line panel uses 3 address pins: &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;A, B, C &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span&gt;&#8594; 3 bits = 8 combinations, x 2 &amp;nbsp;= 16 lines.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A 32-line panel uses 4 address pins: &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;A, B, C, D &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span&gt;&#8594; 4 bits = 16 combinations, x 2 &amp;nbsp;= 32 lines.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A 64-line panel uses 5 address pins: &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;A, B, C, D, E &lt;/span&gt;&lt;span&gt;&#8594; 5 bits = 32 combinations, x 2 &amp;nbsp;= 64 lines.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;AdaFruit has a very convenient &#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.adafruit.com/adafruit-protomatter-rgb-matrix-library/overview&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Protomatter&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221; library to drive these panels, and the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.circuitpython.org/en/latest/shared-bindings/rgbmatrix/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Matrix class&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is initialized accordingly as such:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:218.04px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:383.90px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_bf79ebac81fe73f374f0bd11a391f5cec24be535da0ae34a1c3c3c91e220d530i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now, when I did that on the AliExpress panel, it sort of worked but the display was only showing up on half the panel. The second half was always black. How come? Was it broken?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.aliexpress.us/item/3256808335479840.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;AliExpress listing shows the back of the panel&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and it looks exactly like the one from AdaFruit.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;But that&#8217;s now what I received. What I got is slightly different, and at first I totally missed the difference:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:401.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_edf6a9e45975042a9e9c20bf41e87128686941e6d915d4a0d985f9c74f5b2992i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;What&#8217;s on that board:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;1x 74HC04D Hex Inverter (6 Channel)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;2x DP245C &#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://kuku.eu.org/?projects/hub75e/index&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;likely some 74HC245 clone&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221; which is an 8-bit non-inverting transceiver (it has an 8-bit port A and B and transfers A to B or B to A depending on a direction bit).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;3x ChipOne ICN2012 &#8220;8-Channel Power Switch for LED Display&#8221;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;4x3 ChipOne &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://olympianled.com/wp-content/uploads/2021/05/ICN2037_datasheet_EN_2017_V2.0.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ICN2037BP&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;&#8220;16-channel constant current sink output LED driver&#8221;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The main differences are:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There&#8217;s only half the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://olympianled.com/wp-content/uploads/2021/05/ICN2037_datasheet_EN_2017_V2.0.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ICN2037BP&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;line buffers.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The connector is a &#8220;HUB75-E&#8221; and has 5 address pins, like a 64x64 panel would have.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There is only one &#8220;line&#8221; of memory buffers: enough to buffer 64 bits for 3 colors, just one line, not two lines.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I posit that the RGB0 pins are used and the RGB1 pins are not used on the connector.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Instead, the line address selection is done using the 5-bit address bus: one line out of 32. This doesn&#8217;t do the &#8220;dual lines at the same time&#8221; trick from the other panel.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The other difference, which I noticed much later after I did all my research on how that &#8220;HUB75&#8221; works is actually written right on the panel, except it&#8217;s hard to see. Here are the part numbers on both panels:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The AdaFruit is a P4-2121-64*32-16S-HL1.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The AliExpress I received is a P4-64X32-32S(2020)-V1.0&lt;br&gt;(the vendor&#8217;s stock image has a different part number, too fuzzy to read)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Part of that is hidden behind the plastic support. What we can deduce from these part numbers:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;P4: The panels have a 4-mm pitch.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;2121: That&#8217;s the size of the LEDs (2.1mm x 2.1mm)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;64x32: That&#8217;s the number of LEDs.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;16S vs 32S: Address selection is done using 4 pins (16 lines) or 5 pins (32 lines).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However, as I noted earlier, that&#8217;s not what is shown in the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.aliexpress.us/item/3256808335479840.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;AliExpress listing&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. It&#8217;s apparently a common issue with ordering from there -- vendors will basically send whatever they have that looks more or less like the listing they are selling, with little regard for accuracy. The vendor who sent that probably thought &#8220;64x32 panel with 4 mm pitch, same thing, ship it! If the customer is not satisfied, they will rant, and then we can address it via resolution.&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I thought about returning it, but honestly, I&#8217;m fine. I realize the panel is not broken per se.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Does it conform to the HUB75 specification? Well, technically no -- it does say it&#8217;s a &#8220;HUB75-E&#8221; on it, so very honestly I could argue I did not receive a HUB75, as the listing claims to sell.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;My rationale is that I go with the least effort. I could return it, but that&#8217;s effort. I could rebuild the Matrix C code for AdaFruit&#8217;s CircuitPython to support a panel with a &#8220;32S&#8221; specification. That&#8217;s a ton of effort.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;And the least effort here is that I can trivially deal with this panel in AdaFruit using the CircuitPython driver without making one iota of modifications to the CircuitPython library:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:235.50px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:385.48px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_ce409acb33515a73ff7687258c214e0db6685d09ba59dd7230405a727a0c2546i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Yep that&#8217;s right: I just tell the library that I have a 64 lines panel. Then it expects such a panel to have 5 address pins to select one line out of 32. The only thing is that it means the underlying driver is storing frame buffers which are twice too large, but the MatrixPortal-S3 has way more memory than I need. It also needs to send that second RGB1 line of data, but it does so &#8220;at the same time&#8221; as the first one, so I don&#8217;t think there&#8217;s a noticeable performance penalty. OTOH it does mean the refresh rate of the panel is essentially half of the 16S version.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;A note on power consumption&lt;/span&gt;&lt;span&gt;: the AdaFruit docs as well as all the panel docs I found indicate that a 5V 4Amp power supply is needed to fully power the LED matrix panel. I&#8217;ve measured mine in &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;my application&lt;/span&gt;&lt;span&gt;&amp;nbsp;and found that it typically uses anywhere between 1A and 2A max. The MatrixPortal-S3 powers the panel and it works just fine when powered by a regular USB C brick of 5V 2A spec. My guess is that the consumption is directly related to the number of LEDs simultaneously lit per line -- e.g. a panel that has all the RGB pixels fully lit on at the max refresh rate will inevitably consume more. Even that way, we need to remember that only &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;one&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;two&lt;/span&gt;&lt;span&gt;&amp;nbsp;lines are really turned on at a given time (1 line for a 32S, 2 lines for a 16S), per panel, multiplied by the number of panels if they are chained.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Update 1&lt;/span&gt;&lt;span&gt;: I recently found out that AdaFruit has a way to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.adafruit.com/adafruit-matrixportal-m4/pinouts#address-e-line-jumper-3072815&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;select the pin number of the Addr E on the HUB75 connector of the MatrixPortal S3&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Apparently it can be either &#8220;pin 8 or 16&#8221;. My display matches the HUB75 connector schematic on the right above, with the Addr E on &#8220;pin 8&#8221;. Since it&#8217;s obviously being driven fine by the MatrixPortal S3, I did not change the jumper on the S3 itself.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Update 2&lt;/span&gt;&lt;span&gt;: Since the initial prototype worked well, I ordered a couple more panels from AliExpress to expand the system to a couple other turnouts. This time though, I got panels which are labeled as &#8220;16S&#8221;. That&#8217;s what the original AliExpress listing was &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;supposed&lt;/span&gt;&lt;span&gt;&amp;nbsp;to have sent, yet they didn&#8217;t -- a common issue when ordering from AliExpress, vendors will often send something that&#8217;s &#8220;more or less like the listing&#8221; and they expect end-users to complain if that&#8217;s a problem. The &#8220;16S&#8221; panel works directly with the AdaFruit Matrix class without the need to fake-double the number of lines.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2025-04-07T00:00:07-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Distant Signal: Matrix Display for Turnout T330, Continued</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2025-03-30_distant_signal_matrix_displa_0df54754.html"/>
<id>https://www.alfray.com/trains/blog/train/2025-03-30_distant_signal_matrix_displa_0df54754.html</id>
<category term="arduino" label="Arduino"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A bit more progress on the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/distant-signal&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Distant Signal&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;project: the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2025-03-26_matrix_display_for_turnout_t330.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;initial configuration script&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;consisted of purely graphics primitives, and the automation would select which of the predetermined states to display.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That&#8217;s good, but when I&#8217;m going to have several of these displays for several turnouts, I realize there&#8217;s a lot of repetition because each state represents the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;entire&lt;/span&gt;&lt;span&gt;&amp;nbsp;screen -- thus each state needs to repeat the title, or the block numbers, for example. Instead, the new direction is to have &#8220;layers&#8221; to avoid repetition:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A title layer defines the display&#8230; title. That&#8217;s all.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A &#8220;states&#8221; layer defines multiple track states for the given turnout (typically 2).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A &#8220;blocks&#8221; layer defines the block numbers to draw next to the track, and that means we can now have active vs inactive blocks and thus render them accordingly.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;With that approach, we can change the display to look like this:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:402.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_a1c5b44182109ded196892e53814eaae322ee6b054b467a52d0b392ea078b353i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;[Edit: And future me even added a view of this panel with a further style update, seen here in-situ:]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:349.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_35fa0cf0851544c9c6af1ca46d8711a2249d7f5f89031158185433f915e89feci.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The large &#8220;T330&#8221; is the title of that panel. The track shows a turnout is either a normal or a divergent/reverse pattern. Finally there are 3 block numbers.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This isn&#8217;t drastically different from the display prototype I had a few days ago, except now the block numbers can be highlighted to represent occupied blocks.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Once a display is initialized with its configuration script, it receives the turnout state to draw, &amp;nbsp;as well as the state of the blocks to show them as occupied or empty.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Thus I changed the configuration script from purely a &#8220;list of drawing primitives&#8221; to something that has a lot more semantics to it. The custom-made text syntax didn&#8217;t scale very well. Instead I decided to opt for a JSON-based &#8220;syntax&#8221;, and here&#8217;s an example that defines the panel seen above:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:909.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_c2c329720bf6c115299bf0d21357767a250dc972612797bf24aa3c2b80079954i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is definitely more verbose, and one can question the use of JSON dictionaries as a way to encode &#8220;instructions&#8221;, yet overall it&#8217;s less cryptic than the previous version as the JSON dictionaries keys form a sort of self-documentation. I shall point out that I&#8217;m honestly not a huge fan of JSON -- I personally prefer &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://yaml.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;YAML&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;for configuration files. However I need to keep in mind this runs on an embedded system after all, and CircuitPython has a native json parsing library that gets the job done -- &#8220;keep it simple&#8221; is all about tradeoffs.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2025-03-30T00:00:35-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Distant Signal: Matrix Display for Turnout T330</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2025-03-26_distant_signal_matrix_displa_08700264.html"/>
<id>https://www.alfray.com/trains/blog/train/2025-03-26_distant_signal_matrix_displa_08700264.html</id>
<category term="arduino" label="Arduino"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s a new project, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/distant-signal&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Distant Signal&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/distant-signal&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/model-railroad/distant-signal&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The goal of this project is to display the state of a remote model-railroad turnout on a LED Matrix Display. That&#8217;s obviously the &#8220;phase 2&#8221; of the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2025-03-20_indicator_for_turnout_t330.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;single-LED ESP32 display I toyed with last week&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The hardware for this project is an &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.adafruit.com/product/5778&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;AdaFruit MatrixPortal ESP32-S3&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;driving an &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.adafruit.com/product/2278&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;AdaFruit 64x32 RGB LED Matrix&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;- or more exactly some clone/equivalent of such.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Overall, the project works exactly the same as the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2025-03-20_indicator_for_turnout_t330.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;single-LED version&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;did:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:194.89px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_313cc83d89e448e7a4d4c9c64d76e27b96f0b8f1f0afbb20fd0c83c5f94d0527d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s the first iteration of the display:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:408.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_a97b46ea9076865c58811aa8b56cdf3a44a9ebf3a4c3f59a6685fc38679324d4i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This version uses a basic text-based configuration script to define the content of the screen:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:361.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_c66fa6145f0ce89f32c986097acb6ed5273e3d568597bd98c52dd95dc8c9c9e7i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That&#8217;s the configuration script that the Conductor automation program would send to the display to initialize it. The configuration script defines several &#8220;states&#8221;, for example &#8220;T330 normal&#8221; vs &#8220;T330 reverse&#8221;. Each state is describes the entire content of a screen using a set of graphic primitives -- line, rect, text, and polygon. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Then MQTT would be used to select which state to display -- in this case turnout states, as the automation dictates which state should be displayed based on turnout sensor feedback. From the ESP32 point of view, the behavior is totally agnostic -- all it does is display a full screen of &#8220;something&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2025-03-26T00:00:34-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Indicator for Turnout T330</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2025-03-20_indicator_for_turnout_t330.html"/>
<id>https://www.alfray.com/trains/blog/train/2025-03-20_indicator_for_turnout_t330.html</id>
<category term="arduino" label="Arduino"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s a new a experiment: we now have a new visual indicator of the position of the Sonora turnout T330, designed to be visible by the Saturday operators when standing at the Stockton Yard:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:469.79px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_3fa2e233e5c3ffc585168fee9c57e5c5ea4ca1ea4e7314043e042be6405549f8d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Sonora has the two mainline tracks that merge together at turnout T330, and there&#8217;s a signal bridge with signals that clearly indicate the position of the turnout. The problem is that the signal bridge is not visible from across the layout, where the operators are typically standing.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:342.59px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:624.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_cf53c7f85304da11ad968321df649438f5918f6b3e4274aa6a5ab903e1b84b8fd.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Thus this new experimental signal is located on the pillar -- it&#8217;s facing the operators, and it&#8217;s high behind the window, hopefully high enough to be visible even when the public is present in front of the layout.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I kept the new signal as simple as possible: green indicates the turnout is aligned straight for the &#8220;inner&#8221; track (block B320) and red indicates it is thrown for the &#8220;outer track&#8221; (block B321). Behind the signal, I placed a short explanation to hopefully make it clear what the color represents:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-left:auto;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;vertical-align:middle;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:240.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:396.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_79c196b7dca280b7ae02da40991a05ea9b6277925a3ce5c5dc6dd6b2bf253bbdi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;vertical-align:middle;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:241.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:396.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_163ba01bbabb938139972baf366c147804433809fb50f4d23b56071485fd427ai.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Originally I was going to design this using a pure &#8220;analog&#8221; solution by plugging two LEDs (green and red) to the output of the auxiliary contacts of the turnout switch machine, like the existing signal bridge does. That turned out to be a bit more complicated than I wanted as it would likely interfere with the existing signal bridge.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;And then I realized I could actually &quot;simplify&quot; and reuse stuff I already have -- I came up with a clever trick, namely in this case the signal LED is the onboard LED of an ESP32 using the exact same software as &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/randall/2024-12-16_ambiance.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Ambiance, my animated LED strip display along the fascia of the layout&lt;/a&gt;&lt;/span&gt;&lt;span&gt;!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;And the second part of the trick is that it&#8217;s really the automation script that drives the color of the LED:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:206.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_020841ff91ce469a3a21220b4bde96b94e49219eec4084eaa7dec1c551819d77d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That&#8217;s a lot easier than hooking up to the auxiliary contacts of the turnout switch machine, mainly because it&#8217;s reusing all the components I &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;already&lt;/span&gt;&lt;span&gt;&amp;nbsp;have in place on the layout for the automation, so there was actually not a lot of work to do when doing it this way!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I started by modifying the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/ambiance&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Ambiance software&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to be easier to customize its setup: in the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/ambiance/blob/main/setup/settings.toml&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;CircuitPython settings.toml file&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, I can now configure the length of the LED strip, its data control pin on the ESP32, and the name of the MQTT topic to control it. In this case, I simply have a LED strip of&#8230; 1 LED. That&#8217;s the trick! Once I do that, it&#8217;s basically the same thing as the animated LED strip display. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/ambiance&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Ambiance&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is really event-oriented, thus here I just create events that &#8220;animate&#8221; the &#8220;one LED&#8221; with what is essentially a static color that just stays the same until changed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Once I&#8217;ve done that, I can simply &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/blob/HEAD/jmri/conductor/engine2k/src/main/resources/v2/script/script_v33.03_bl010%2Bml9538%2B1072%2Btl6885.conductor.kts#L161&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;program the automation script in Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to monitor the state of the turnout T330, and publish a color change to the &#8220;1 LED strip&#8221; via MQTT:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;background-color:rgb(0, 0, 0);text-align:left&quot;&gt;&lt;span style=&quot;color:rgb(0, 255, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-style:italic;font-weight:700&quot;&gt;// The T330 LED is GREEN when the junction B320 --&amp;gt; B330 via T330 Normal is ready.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 255, 255);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt&quot;&gt;on &lt;/span&gt;&lt;span style=&quot;color:rgb(255, 249, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;{ &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 255, 255);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt&quot;&gt;T330&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 249, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 255, 255);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt&quot;&gt;normal &lt;/span&gt;&lt;span style=&quot;color:rgb(255, 249, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;} &lt;/span&gt;&lt;span style=&quot;color:rgb(255, 255, 255);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt&quot;&gt;then &lt;/span&gt;&lt;span style=&quot;color:rgb(255, 249, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;{&lt;br&gt; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:rgb(255, 255, 255);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt&quot;&gt;mqtt&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 249, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 255, 255);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt&quot;&gt;publish&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 249, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 0, 255);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;&quot;turnout/t330/script/event&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 249, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color:rgb(255, 0, 255);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;&quot;Brightness 0.75; Fill #00FF00 1; Trigger&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 249, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;)&lt;br&gt;}&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 255, 255);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt&quot;&gt;on &lt;/span&gt;&lt;span style=&quot;color:rgb(255, 249, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;{ !&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 255, 255);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt&quot;&gt;T330&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 249, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 255, 255);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt&quot;&gt;normal &lt;/span&gt;&lt;span style=&quot;color:rgb(255, 249, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;} &lt;/span&gt;&lt;span style=&quot;color:rgb(255, 255, 255);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt&quot;&gt;then &lt;/span&gt;&lt;span style=&quot;color:rgb(255, 249, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;{&lt;br&gt; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:rgb(255, 255, 255);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt&quot;&gt;mqtt&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 249, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 255, 255);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt&quot;&gt;publish&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 249, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 0, 255);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;&quot;turnout/t330/script/event&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 249, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color:rgb(255, 0, 255);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;&quot;Brightness 0.75; Fill #FF0000 1; Trigger&quot;&lt;/span&gt;&lt;span style=&quot;color:rgb(255, 249, 0);font-family:&amp;quot;Courier New&amp;quot;;font-size:10.5pt;font-weight:700&quot;&gt;)&lt;br&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s that simple!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The neat side effect of doing it that way is that the signal light responds to turnout changes done both by the automation but also when operators manually use the NCE controller to throw T330. Both actions will change the state in JMRI, which will change the state in Conductor, which will change the state in MQTT, which will change the state on the ESP32 &#55357;&#56859;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2025-03-20T00:00:23-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Email Notifications when the Automation Breaks</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2025-01-16_conductor_2_email_notificati_0ac70a31.html"/>
<id>https://www.alfray.com/trains/blog/train/2025-01-16_conductor_2_email_notificati_0ac70a31.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Back in December I was &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2024-12-25_conductor_2_activated_block_handling.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;fighting with the spurious block activation of block B360&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. This would break the automation, and I would have no real report about it. Of course I already have a custom web dashboard that shows me the status of the automation and &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-07-01_conductor_2_w_google_analytics_4.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;after-the-fact analytics&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;-- what kind of automation would that be without such dashboards? Still I figured having a &#8220;realtime&#8221; notification on failure would be better than periodically checking my custom dashboard.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I could add some email-sending capabilities to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, but that&#8217;s something I&#8217;d rather not do as it&#8217;s a bit of its own rabbit hole. The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.debian.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Debian Linux&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;computer running Conductor 2 has no email capabilities, and I intend to keep it that way -- I treat it as what it is, namely an unsecured box in a public museum with fairly loose access, thus it&#8217;s basically a DMZ. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Instead what I want is for the emails to be generated by some server that I control. All I need is to get the data to that server. I could piggyback the errors on the JSON used by the RTAC status server. That would almost be &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;too&lt;/span&gt;&lt;span&gt;&amp;nbsp;logical. Or I could publish it on the MQTT broker and then proxy it over to the email server. Well, if I&#8217;m going that route, what about &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://wiki.debian.org/Rsyslog&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;RSyslog&lt;/a&gt;&lt;/span&gt;&lt;span&gt;?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So that&#8217;s what I did, and I get this kind of beautiful emails:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(239, 239, 239);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;color:rgb(102, 102, 102);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;From: pi@alfray.com&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;color:rgb(102, 102, 102);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;To: self@alfray.com&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;color:rgb(102, 102, 102);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;Subject: &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;New Automation Error&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;color:rgb(102, 102, 102);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;Date: Wed, 08 Jan 2025 11:00:11 -0800&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;color:rgb(102, 102, 102);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;Jan &amp;nbsp;8 11:00:01 consist fireman: &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;CONSIST ERROR: &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;10:57:38.342 R Sequence Branchline #3 Shuttle (0204) : ERROR Sequence Branchline #3 Shuttle (0204) current block &amp;lt;BLYouBet [NS760]&amp;gt; still occupied after 120.5 seconds. &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;10:59:38.892 R Sequence Branchline #4 Recovery (0204) : ERROR Sequence Branchline #4 Recovery (0204) current block &amp;lt;BLYouBet [NS760]&amp;gt; still occupied after 120.0 seconds. &lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s how I implemented this:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On the automation computer, I have a cron job parsing the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;logs every 5 minutes. These already have &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;exactly&lt;/span&gt;&lt;span&gt;&amp;nbsp;the information I want to see, as shown above -- they look wonderfully cryptic to the uninitiated yet relay all the information I need. Usually I&#8217;d notice something wrong on the dashboard, and then check the logs over SSH. Thus having exactly that log delivered by email is ideal.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Obviously, the best way to collect the error log is a quick little Bash script:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 234, 211);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;LOGGER=/usr/bin/logger&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;# Get the last log&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;YMD=$(date +%Y-%m-%d)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;L=$( ls -1 --sort=time conductor-log-$YMD*.txt 2&amp;gt;/dev/null | head -n 1 )&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;# Find all errors&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;grep -h &quot;: ERROR &quot; &quot;$L&quot; &amp;nbsp;&amp;gt; &quot;current.txt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;# Compare with the last &quot;all errors&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;LOG=$( diff --new-line-format=&quot;@ %l @&quot; --new-file --ignore-blank-lines --text &quot;last.txt&quot; &quot;current.txt&quot; | grep @ )&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;if [[ -z &quot;$LOG&quot; ]]; then exit 0; fi # No new error(s) today&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;$LOGGER &quot;@@ CONSIST ERROR: @${LOG}@&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;# Update &quot;last&quot; errors on success&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;cp &quot;current.txt&quot; &quot;last.txt&quot;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This finds the most recent log file, filters using the error pattern, and compares it with the last saved error pattern file. If they differ, send the diff via the system logger. (Editor&#8217;s note: in my real bash script I use variables for &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;every&lt;/span&gt;&lt;span&gt;&amp;nbsp;file name; I&#8217;ve just expanded and simplified them above for clarity.) Note the very specific usage of the &#8220;@&#8221; character in the diff output and the logger call -- I use that to trim the new-lines out of the log output and then will convert the &#8220;@@&#8221; pairs back to &#8220;\n&#8221; on the receiver side.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Then I just call that in a crontab every 5 minutes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I already have the local rsyslog configured to send some of the logs I care to one of my servers -- modern &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.debian.org/releases/bookworm/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Debian Bookworm&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;doesn&#8217;t have rsyslog installed by default IIRC, so we need to install it first and configure it:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;$ sudo apt install rsyslog&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;$ view /etc/rsyslog.conf&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&#8230;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;*.info;mail.none;authpriv.none &amp;nbsp;@@dmz.alfray.com:1234&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On the server side, all I need is to parse the logs collected by the receiving rsyslog. Thus we need the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://wiki.debian.org/Rsyslog&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Debian RSyslog&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;package again, and this time configured to store stuff in some specific log file:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(252, 229, 205);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;$ sudo apt install rsyslog&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;$ view /etc/rsyslog.conf&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&#8230;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;$template RemoteHost,&quot;/tmp/logs/remote_%HOSTNAME%.log&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;if $hostname == &apos;consist&apos; then -?RemoteHost&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;amp; stop&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;You&#8217;ve got to admire that &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.rsyslog.com/doc/configuration/index.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;superb rsyslog syntax&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8230; I&#8217;ve written my fair share of custom config files and custom associated parsers over the years, so really I don&#8217;t mind (*) -- what matters is that it&#8217;s very flexible and documentation for it is well written. (* except that I&#8217;ve come to realize over the years, like everybody else, that there&#8217;s some value in sticking everything in JSON or YAML so I don&#8217;t really code &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/ralfoide/mini-yaml-parser&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;custom parsers anymore&#8230; sort of&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now I&#8217;m ready to have this send me an email when the last error has changed -- we can parse that server-side log and generate an email by calling &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;sendmail&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I thought about writing a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://wiki.debian.org/systemd/Services&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;systemd service daemon&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;at first. Should it be in Rust, NodeJS, Java, Kotlin, or Go? Let&#8217;s &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;even mention Perl. Nah, Bash and a simple crontab job will get us there as usual:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(201, 218, 248);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;sleep 10s&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;# Check if log is new&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;LOG=$(grep &quot;@@ CONSIST ERROR:&quot; &quot;remote_rsys.log&quot; | tail -n 1)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;if [[ -z &quot;$LOG&quot; ]]; then exit 0; fi&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;PREV=$(cat &quot;diff.txt&quot; 2&amp;gt;/dev/null || echo &quot;&quot;)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;if [[ &quot;$LOG&quot; == &quot;$PREV&quot; ]]; then exit 0; fi &amp;nbsp;# no new stuff&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;echo &quot;$LOG&quot; &amp;gt; &quot;diff.txt&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;# re-create the newlines from @@&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;EXPANDED=$(sed &apos;s/@@/\n/g&apos; &quot;diff.txt&quot;)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;# Main new log&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;cat &amp;gt; &quot;msg.txt&quot; &amp;lt;&amp;lt;EOF&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;From: $FROM_ADDRESS&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;To: $TO_ADDRESS&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;Subject: New Automation Error&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;$EXPANDED&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;EOF&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;/usr/sbin/sendmail -f &quot;$FROM_ADDRESS&quot; &quot;$TO_ADDRESS&quot; &amp;lt; &quot;msg.txt&quot;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I also stick that script invoked from a crontab every 5 minutes with the exception that the receiver side is offset to run 10 seconds after the sending side. That way I have at most a 5-minute delay before being notified of an automation error.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;</content>
<updated>2025-01-16T00:00:21-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Activated Block Handling</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2024-12-25_conductor_2_activated_block_handling.html"/>
<id>https://www.alfray.com/trains/blog/train/2024-12-25_conductor_2_activated_block_handling.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;These &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/commit/6f773e498a944fc4d840977e8383a00e79e324b5&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;two&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/commit/133cf7a2bd6ddaa1a68edd02f2d7f9923895ac17&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;commits&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;address the recent issue of &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2024-10-14_conductor_2_freight_starts_w_ce787171.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;spurious block activation breaking the automation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Recently a new sensor-related issue arose with block B360. Last time, it was because some track was &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2024-10-12_conductor_2_sensor_issues_on_483b2f5d.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;occupied somewhere else&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the layout. This time, the issue is different: the automated passenger train is going to Summit (the top of the mountain), where it stops and returns back down. It goes through these blocks:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Roboto Mono&amp;quot;;font-weight:700&quot;&gt;B370&lt;/span&gt;&lt;span&gt;&amp;nbsp;(Summit) &#8594; &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Roboto Mono&amp;quot;;font-weight:700&quot;&gt;B360&lt;/span&gt;&lt;span&gt;&amp;nbsp;&#8594; &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Roboto Mono&amp;quot;;font-weight:700&quot;&gt;B340&lt;/span&gt;&lt;span&gt;&amp;nbsp;&#8594; &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Roboto Mono&amp;quot;;font-weight:700&quot;&gt;B330&lt;/span&gt;&lt;span&gt;&amp;nbsp;&#8594; &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Roboto Mono&amp;quot;;font-weight:700&quot;&gt;B321&lt;/span&gt;&lt;span&gt;&amp;nbsp;&#8594; &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Roboto Mono&amp;quot;;font-weight:700&quot;&gt;B311&lt;/span&gt;&lt;span&gt;&amp;nbsp;(Station)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:1.33px solid #999999;display:inline-block;height:188.00px;margin:-0.00px -0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_6a346d5d29deaaadc78aef01a9e0dff2b223776e40c9669bc6eb964092769e27i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The new problem with block B360: after the train has left block B360 and entered block B340, block B360 should register as &#8220;empty&#8221;. After all, the train isn&#8217;t on the block anymore. But from time to time -- very rarely -- the block will keep staying on, sometimes as long as a minute and half! Now two adjacent blocks can be active at the same time -- that happens when a train crosses a block boundary. But once the train reaches block B330, it is an error for block B360 to still be active. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When that happens, the automation enters the error mode, stops the train, and tries to do a recovery. Interestingly as soon as the train stops, that &#8220;frees&#8221; block B360 too. Thus the recovery mechanism notices that only block B330 is active, deduces the train must be there, and brings it back home. From a viewer point of view, that all happens almost instantly so it&#8217;s hard to notice visually that something went wrong. But from a software perspective, it was all wrong for sure.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &#8220;fix&#8221; is an idea I had a while ago: right now the automation checks &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;all&lt;/span&gt;&lt;span&gt;&amp;nbsp;the blocks on the route. If any block suddenly happens to activate &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;anywhere&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the route, that&#8217;s a sign something unexpected happens, and we better stop the automation. However, in this case, we don&#8217;t need to care about block B360 because it is &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;behind&lt;/span&gt;&lt;span&gt;&amp;nbsp;the train. The change I made is to only look at the blocks &#8220;in front&#8221; of the train. If any of these suddenly become unexpectedly occupied, we better stop right away. If anything happens to blocks that we will not reach, then it&#8217;s fine and we can ignore them during &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span&gt;&amp;nbsp;run -- if they are still active the next time the automation tries to start, then that will be a problem and the route won&#8217;t get activated, but it doesn&#8217;t need to stop the current train.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So that&#8217;s what the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/commit/6f773e498a944fc4d840977e8383a00e79e324b5&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;first commit&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;does -- it computes only the forward-reachable nodes in the route&#8217;s node graph. It&#8217;s just your basic directed graph traversal algorithm, nothing fancy. The change is minimal, and the bulk of the commit is just a bunch of validation unit tests. The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/commit/133cf7a2bd6ddaa1a68edd02f2d7f9923895ac17&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;second commit&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is even smaller, and just checks the forward-reachable blocks instead of all the route blocks. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Once tested &#8220;in real life&#8221;, this behaved as expected. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The last piece of the puzzle isn&#8217;t software -- it&#8217;s to try to understand why that block B360 suddenly behaves like this -- why does it register as occupied (meaning the sensor detects current going through the power lead) when the train is two blocks away?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I just ordered and received two new &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.iascaled.com/store/CKT-BD1&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;IAScaled CKT-BD1&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;sensors. One will be used to replace the current NCE BD20 to see if it changes the behavior.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The other realization is that a lot of mountain track is just weird -- you might have noticed there&#8217;s no &#8220;B350&#8221; in the block list above. There is a section of track between 340 and 350, but despite my early attempts the track power lead for 350 never activated. Instead, the trains are detected on 340. I know that blocks B340 and B350 have been soldered together a while ago, because I &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/randall/2019-08-26_randall_repairs_block_b350.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;previously fixed such a broken joint&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. I suspect originally B350 had its own power lead and maybe it broke or something like that and a quick repair was done by bridging it with the nearby B340 block. Now that I have more hands-on background on this layout, maybe it&#8217;s time I revisit this, yet it&#8217;s still a low-priority item as it works &#8220;good enough.&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2024-12-25T00:00:30-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: New MQTT Support</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2024-12-16_conductor_2_new_mqtt_support.html"/>
<id>https://www.alfray.com/trains/blog/train/2024-12-16_conductor_2_new_mqtt_support.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There&#8217;s been a few changes in &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/commits/main/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2 in the recent weeks&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The first major change has been to add &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://mqtt.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;MQTT&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;support. The custom script language now exposes an &#8220;mqtt&#8221; object. Once configured, one can publish &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://mosquitto.org/man/mqtt-7.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;MQTT topics/messages&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. This is used to control the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/ambiance&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Ambiance LED string display&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Here&#8217;s an example of usage in the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/blob/main/jmri/conductor/engine2k/src/main/resources/v2/script/script_v30.02_bl204%2Bml8312%2B1225%2Btl6885.conductor.kts&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;latest script&lt;/a&gt;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(207, 226, 243);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;mqtt.configure(&quot;~/bin/JMRI/rtac_mqtt_conf.json&quot;)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;mqtt.publish(&quot;ambiance/script/init&quot;, &quot;Brightness 0.5 ; Fill #000000 1 ; SlowFill 0.1 #FF1000 40 #FF4000 10&quot;)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;mqtt.publish(&quot;ambiance/script/event&quot;, &quot;Slide -0.05 100&quot;)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;var _ambiance_counter = 0&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;fun Ambiance_Trigger() {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; mqtt.publish(&quot;ambiance/event/trigger&quot;, _ambiance_counter.toString())&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; _ambiance_counter++&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;fun Ambiance_Off() {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; mqtt.publish(&quot;ambiance/script/init&quot;, &quot;Brightness 0.5 ; SlowFill 0.25 #000000 1&quot;)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The first line configures the MQTT publisher with the broker&#8217;s IP and port. This one currently only supports basic auth user/password as that&#8217;s all I needed for now -- I simply run the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-style:italic;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://mosquitto.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Mosquitto&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://mosquitto.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;&amp;nbsp;MQTT broker&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;on localhost yet I still setup &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;some&lt;/span&gt;&lt;span&gt;&amp;nbsp;kind of basic auth. It could be extended later to support SSL authentication as needed, of course. It&#8217;s open source -- quality patches are welcome &#55357;&#56898;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span&gt;Once configured, usage is a simple &#8220;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;publish(topic, message)&lt;/span&gt;&lt;span&gt;&#8221; call. Fairly obvious. Creating function wrappers is just a cleaner way to inject these later during route execution without polluting the train execution with auxiliary details, for example:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 234, 211);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;val Passenger_Route = ML_Route.sequence {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; name = &quot;Passenger&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; throttle = PA&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; onActivate {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PA.light(On)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PA.bell(Off)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PA.sound(On)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; val B503b_start = node(B503b) {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; onEnter {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PA.bell(On)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PA_beacon(On)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; after (AM_Data.Delay_Horn) then {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PA.horn()&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PA.forward(AM_Data.Leaving_Speed)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;background-color:rgb(255, 255, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;Ambiance_Trigger()&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;...&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The only surprise I had was using the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/hivemq/hivemq-mqtt-client&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;HiveMQ-MQTT-Client Java library&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. I originally used the latest 1.3.4 version with the MQTT 5 support. It worked very well at home with my simulator and my local JMRI server. Then I deployed it at Randall and two issues appeared:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;font-style:italic&quot;&gt;hivemq-mqtt-client 1.3.4&lt;/span&gt;&lt;span&gt;&amp;nbsp;brings in a Kotlin 1.9 runtime dependency that is somehow conflicting when loaded dynamically via Jython in JMRI 5.0 -- it conflicts because my own engine has a Kotlin 1.6 dependency and I guess I can&#8217;t have both runtimes loaded in the JVM at the same time? Just a guess. I do my tests at home against the latest JMRI 5.5, so maybe I need to update my production environment to match. That was solved by checking the release dates for HiveMQ -- I simply went back to hivemq-mqtt-client 1.3.1, which was published &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;before&lt;/span&gt;&lt;span&gt;&amp;nbsp;Kotling 1.9, thus I know it can only have a Kotlin 1.6 dependency at most. Eventually I want to solve that and update to Kotlin 1.9.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;HiveMQ has both MQTT 3 and 5 support as a client. I started with MQTT 5. It worked fine at home with Mosquitto 2.0.18. When I deployed at the museum, the calls were rejected by the local Mosquitto broker as &#8220;wrong version&#8221;. The museum version is Debian&#8217;s Mosquitto 1.5.7, which turns out to only have up to protocol 3.1.1 support. I simply updated the Conductor 2 usage of HiveMQ to switch to the MQTT 3 protocol.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Overall, I&#8217;m satisfied with the implementation. It&#8217;s simple. Usage on the script side is fairly straightforward and clean.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2024-12-16T00:00:42-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Red Side Door USB Light</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2024-11-25_red_side_door_usb_light.html"/>
<id>https://www.alfray.com/trains/blog/train/2024-11-25_red_side_door_usb_light.html</id>
<category term="electronics" label="Electronics"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is what I used for the red door: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/43dp9e9&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/43dp9e9&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&#8220;USB Lights Bars 12 Inch, 3 bars chained&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:374.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_c981768a78bb8cd719e1015d92d0893cefb6d45a32c3f95eeb7f7d003de8ce24i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;m powering this with a custom-made USB A-to-C adapter, which is turned off and on by a contact switch on the door. That works well, but it&#8217;s been bugging me because the light is stuck in the white-ish 9000K mode instead of the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;better looking 3500K&lt;/span&gt;&lt;span&gt;&amp;nbsp;6500K mode. So I took one apart to see how it is built inside.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It contains a USB C with a 6-pin connector. That&#8217;s a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.eevblog.com/forum/projects/type-c-in-micro-usb-footprint-(female-connectors)/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;&#8220;power-only&#8221; connector&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: GND / VBus / CC1 / CC2 / VBus / GND.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:384.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:625.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_b59ab103110f6299f0d767b9d0db73f6ce11a90203ed12f3ae603ad8b1cfd23ad.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So essentially they &#8220;abuse&#8221; the CC1/CC2 lines as ground for the yellow-ish LEDs.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When using a USB A-to-C adapter, only the GND and VBus are connected. The CC1/CC2 lines are not, and I cannot turn on the yellow LEDs. Now, if I were to bridge the 2 bottom resistors, I&#8217;d connect the CC1/CC2 lines to VBus and have all the LEDs turn on -- and by cascading effect so would any other bar connected to that one.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:133.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:625.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_96141097b85d007406bebba95a82849a625bd98b9e3a00aeb09a1cd16a91fe1dd.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;Subtlety stepped outside for a moment.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I think it&#8217;s safe to say that we probably do not want to connect this to any &#8220;smart&#8221; USB C power supply. In this case, it&#8217;s likely that &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;nothing&lt;/span&gt;&lt;span&gt;&amp;nbsp;will happen as it won&#8217;t be able to negotiate power on CC1/CC2.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note that the list for the light specifies the colors as:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;9000K &#8230; I can guess that&#8217;s a good description of the white LEDs.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;3500K &#8230; That would be the yellow-ish LEDs.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;6500K for the combination. It does feel like a &#8220;cool white&#8221; indeed.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Ideally I&#8217;d love a &#8220;warm white&#8221;, which would be the yellow LEDs only. Given how the light strip is wired, that would require powering them only from the CC1/CC2 pins and not from the VBus pins. I&#8217;d have to check how I created my custom USB A-to-C adapter, and if I rebuilt it, now I probably rewire it to achieve that 3500K effect only.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2024-11-25T00:00:29-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">DC-DC Boost Step-Up Converter XH-M411</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2024-11-21_dc-dc_boost_step-up_converter_xh-m411.html"/>
<id>https://www.alfray.com/trains/blog/train/2024-11-21_dc-dc_boost_step-up_converter_xh-m411.html</id>
<category term="electronics" label="Electronics"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I got these for Randall and they are working very nicely: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/4evzCYk&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/4evzCYk&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&#8220;&lt;/span&gt;&lt;span&gt;DC-DC Boost Converter, XH-M411 DC to DC 3-35V to 5-45V (2 pack)&#8221;. The cost was $6.50 per converter.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There&#8217;s no usage manual (or I lost it?), so let&#8217;s copy stuff here:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:437.50px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:481.48px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_49b9e611ad3353f95a2af60b5f62af72c62cedfd883aa396a31cf9bbf6df968di.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What the button does is switch the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;display&lt;/span&gt;&lt;span&gt;&amp;nbsp;from displaying input to displaying output voltage. The blue LED turns on on the input/output side depending on what is displayed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Output voltage is adjusted using the tiny blue potentiometer next to the radiator.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.icstation.com/mobile/m411-digital-step-boost-converter-power-supply-module-voltage-regulator-p-12926.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;More specs and instructions here&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, so let&#8217;s copy what&#8217;s useful later:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Input : 3V-35, &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;5A peak&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Output is 5V-45V, &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;5A peak&lt;/span&gt;&lt;span&gt;, adjusted using the blue potentiometer: clockwise to boost.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;If output voltage cannot be adjusted and matches input, turn potentiometer counterclockwise (step-down) till it starts to change.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This is only a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;boost&lt;/span&gt;&lt;span&gt;&amp;nbsp;module. Output voltage must be greater than input voltage&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;For example at Randall I was considering using a 24V DC input to output 16V DC&#8230; that won&#8217;t work.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Integrated voltmeter is accurate to +/-0.1V in the 5-30V range.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It will not display if input is lower than 4.5V.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;span&gt;Side Note / Tip on that peak 5A: power through a DC-DC converter has to be constant -- output power cannot be more than input power. Power is measured as &#8220;P = U . I&#8221;. That means if a DC-DC converter is used to, for example, double the voltage, the output current will be half of the input current. What the spec above means is that overall that converter can&#8217;t handle more than 5A both on the input side and the output side. Since this converter is a voltage &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;booster&lt;/span&gt;&lt;span&gt;&amp;nbsp;(i.e. output voltage is higher than input voltage), that means the effective output current will always be less than the input max 5 amps. In other words, don&#8217;t even think you can get 5A on the output &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;and&lt;/span&gt;&lt;span&gt;&amp;nbsp;a voltage boost at the same time. That&#8217;s just not realistic.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;According to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.instructables.com/Solution-for-Output-Noise-in-the-XH-M411-Boost-Con/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;this instructable&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, the IC under the radiator is an &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.micro-planet.ma/downloads/xl6019.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;XL-6019F&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.micro-planet.ma/downloads/xl6019.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Datasheet PDF&lt;/a&gt;&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For one application, I have one of the Randall&#8217;s 12V AC bus nearby so I&#8217;m thinking of powering the device using that instead of the typical USB power brick. We have some &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.sparkfun.com/tutorials/diodes/types-of-diodes&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;diodes that look like the typical 1N4001&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;that seem perfect for this application, and I should add some random capacitor filter. OTOH I see that the board already has next to the input:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A 220 &#181;F 50V capacitor.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.farnell.com/datasheets/1441695.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SS54 Schottky&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;diode (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.farnell.com/datasheets/1441695.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Datasheet PDF&lt;/a&gt;&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That 220 &#181;F capacitor unsurprisingly matches the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.micro-planet.ma/downloads/xl6019.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;XL-6019F typical application circuit&lt;/a&gt;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:292.50px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:478.50px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_cb8fd91777ed2980444e5bf2edcf1c82e511412db2865d5ada3b535a050084bbi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So I&#8217;m going to venture that just a 1N4001 would be enough:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:142.66px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:476.50px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_8cb3545c86f8d6b0dec274c791a11f5bab1355181204356986885752d8f14a73i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Disclaimer: I haven&#8217;t tried it yet. Of course to power this from an 12V AC bus, it wouldn&#8217;t hurt to use a full bridge rectifier and even more smoothing capacitors. But at that point, one could just use any low voltage AC-to-DC converter because that&#8217;s exactly what they do.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2024-11-21T00:00:48-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Freight starts when Passenger goes into Error</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2024-10-14_conductor_2_freight_starts_w_ce787171.html"/>
<id>https://www.alfray.com/trains/blog/train/2024-10-14_conductor_2_freight_starts_w_ce787171.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the old Conductor 1, anytime the train sequence did not work as expected, the engine simply stopped everything, and we had to manually replace the trains as expected and restart everything.&lt;br&gt;Thus, when I redesigned the new &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, I added some &#8220;recovery&#8221; functionality -- the idea is that if the train sequence does not happen as expected, the automation engine should do something to try to recover the trains.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Unfortunately, the idea of &#8220;recovery&#8221; is basically to more or less predict the unpredictable and decide what the automation program should do in that case. Which means there are always cases that one never thought about because that &#8220;could never happen&#8221; and thus such cases are not handled. Today is one such case.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Orion and I have been slowly working on fixing the Branchline T324 turnout. That involves crawling through one of the mountain access holes, and then we need to reach the Branchline over the Mainline track. To make it more fun, that&#8217;s one of the tracks used by the Passenger train automation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Twice I&#8217;ve seen the Passenger train go into error mode while we were trying to work on the Branchline T324 turnout. What was even more puzzling is that the Passenger was at Summit and then the Freight train just&#8230; started! Suddenly, on the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;same track&lt;/span&gt;&lt;span&gt;, I had the Passenger train go into recovery and thus reversing towards the station whilst at the same time I had the Freight train leaving the station&#8230; Each going towards each other in the opposite direction. Not exactly a good scenario.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Hilarity ensues.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The first part of the puzzle was easy to find: when we crawl into the mountain access hole, we somehow activate the block B340. It&#8217;s not exactly clear &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;why&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;how&lt;/span&gt;&lt;span&gt;&amp;nbsp;that happens, yet that sure is the result.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s an excerpt from &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;conductor-log-2024-10-12-08-40-03.txt&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:42:22.404 R Sequence Mainline #3 Passenger (8330) : ACTIVATED&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:42:22.404 B S/NS787 B503b : EMPTY after 374.60 seconds&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&#8230;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:26.205 B S/NS775 B360 : TRAILING after 24.67 seconds&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:26.205 B S/NS776 B370 : OCCUPIED after 714.77 seconds&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:26.236 T @timer@4 : start:4&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:29.142 S S/NS797 AIU-Motion : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:30.255 T @timer@4 : activated&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:30.256 T @timer@17 : start:17&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:30.256 D 8330 : 10&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:30.506 D 8330 : Bell ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:30.507 D 8330 : F1 ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:32.764 S S/NS797 AIU-Motion : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:39.914 S S/NS774 B340 : ON&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-weight:700&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;&#8658; Block B340 suddenly got activated when trying to work &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;on the Branchline. Train 8330 is on B370 (Summit).&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-weight:700&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:39.915 R Sequence Mainline #3 Passenger (8330) : ERROR Sequence Mainline #3 Passenger (8330) has unexpected occupied blocks out of &amp;lt;B370&amp;gt;: [&amp;lt;B340 [NS774]&amp;gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:39.916 R Sequence Mainline #3 Passenger (8330) : ERROR&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;&#8658; Automation goes into error mode because an unexpected block suddenly gets occupied&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:39.920 R Sequence Mainline #3 Passenger (8330) : {&quot;name&quot;:&quot;Passenger&quot;,&quot;th&quot;:&quot;PA&quot;,&quot;act&quot;:2,&quot;err&quot;:true,&quot;nodes&quot;:[{&quot;n&quot;:&quot;B503b&quot;,&quot;ms&quot;:17873},{&quot;n&quot;:&quot;B503a&quot;,&quot;ms&quot;:10133},{&quot;n&quot;:&quot;B504&quot;,&quot;ms&quot;:19340},{&quot;n&quot;:&quot;B321&quot;,&quot;ms&quot;:55122},{&quot;n&quot;:&quot;B330&quot;,&quot;ms&quot;:22999},{&quot;n&quot;:&quot;B340&quot;,&quot;ms&quot;:33531},{&quot;n&quot;:&quot;B360&quot;,&quot;ms&quot;:24666},{&quot;n&quot;:&quot;B370&quot;,&quot;ms&quot;:13711}]}&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:39.923 D 8330 : 0&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:40.424 D 8330 : Sound OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:40.424 D 8330 : F8 OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&#8230;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:40.630 R Sequence Mainline #3 Passenger (8330) : IDLE&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:40.635 R Sequence Mainline #3 Passenger (8330) : {&quot;name&quot;:&quot;Passenger&quot;,&quot;th&quot;:&quot;PA&quot;,&quot;act&quot;:2,&quot;err&quot;:true,&quot;nodes&quot;:[{&quot;n&quot;:&quot;B503b&quot;,&quot;ms&quot;:17873},{&quot;n&quot;:&quot;B503a&quot;,&quot;ms&quot;:10133},{&quot;n&quot;:&quot;B504&quot;,&quot;ms&quot;:19340},{&quot;n&quot;:&quot;B321&quot;,&quot;ms&quot;:55122},{&quot;n&quot;:&quot;B330&quot;,&quot;ms&quot;:22999},{&quot;n&quot;:&quot;B340&quot;,&quot;ms&quot;:33531},{&quot;n&quot;:&quot;B360&quot;,&quot;ms&quot;:24666},{&quot;n&quot;:&quot;B370.1&quot;,&quot;ms&quot;:13711},{&quot;n&quot;:&quot;B370.2&quot;,&quot;ms&quot;:14425}]}&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:40.637 B S/NS775 B360 : EMPTY after 14.43 seconds&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;&#8658; There&#8217;s motion in the room and now the Freight train starts, since the Passenger one is no longer active&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:40.638 R Sequence Mainline #4 Freight (1067) : ACTIVATED&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:40.638 B S/NS769 B311 : EMPTY after 311.24 seconds&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:41.140 D 8330 : F5 OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:41.141 B S/NS769 B311 : OCCUPIED after 0.50 seconds&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:41.141 R Sequence Mainline #4 Freight (1067) : ACTIVE&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:41.175 D 1067 : Light ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:45:41.276 D 1067 : Sound ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&#8230;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;&#8658; A second later, a delayed timer activates which returns the Passenger train towards the station&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:46:17.295 T @timer@30 : activated&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:46:17.295 D 8330 : Bell OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:46:17.295 D 8330 : F1 OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:46:17.296 D 8330 : Horn&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;16:46:17.996 D 8330 : -10 &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-weight:700&quot;&gt;&#8592; This is the Passenger train&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This &#8220;@timer@30&#8221; is internal name for &#8220;Delay_B370_Pause_Delay&#8221; -- the normal behavior at Summit is to pause then reverse after 30 seconds at speed 10:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;onEnter {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp;after (AM_Data.Delay_B370_Entrance) then {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// Forward&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PA.forward(AM_Data.Summit_Speed)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PA.bell(On)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp;} and_after (AM_Data.Delay_B370_Forward_Stop) then {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PA.stop()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PA.horn()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp;} and_after (AM_Data.Delay_B370_Pause_Delay) then {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// Stopped&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PA.bell(Off)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PA.horn()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PA.reverse(AM_Data.Summit_Speed)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp;}&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So that&#8217;s one bug -- t&lt;/span&gt;&lt;span&gt;hat means somehow this route is still executing even though the script has changed route. Instead, the timer should have been canceled by the route change, leaving the Passenger train stranded at the top of Summit.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As for the error/recovery, it&#8217;s perfectly reproducible in the simulator:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;Script: [ML Recovery] PA start=false occup=2 total=2 [{B503b [NS787]}, {B503a [NS786]}, {B504 [NS784]}, {B321 [NS771]}, {B330 [NS773]}, &amp;lt;B340 [NS774]&amp;gt;, {B360 [NS775]}, &amp;lt;B370 [NS776]&amp;gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;Script: [ML Recovery] FR start=true occup=0 total=1 [&amp;lt;B311 [NS769]&amp;gt;, {B321 [NS771]}]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;Script: [ML Recovery] Ignore Passenger, Activate Freight&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The core issue here is that&#8217;s a bug: if a route is abandoned because it goes into error mode, any delayed timer blocks should be abandoned and should definitely not execute.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The way the recovery should have worked is as follows:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The Passenger route is active and the train running.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An unexpected block is activated &amp;nbsp;&#8658; This stops the train. The route is marked as being in error mode (This part works as expected).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The route selection should &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;ideally&lt;/span&gt;&lt;span&gt;&amp;nbsp;respect the 1-minute pause I have when switching trains (This part is missing.)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The route selection should determine that the Passenger train is stuck at Summit, and consequently bring it back to the station. Once that is done, it can schedule the Freight train to leave.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Or the route selection should determine that the Passenger train is stuck at Summit, determine that there is at least one spurious block occupied on the track (B340), and thus decide it is not safe to bring back the Passenger train to the station. Better leave it where it is. Thus it&#8217;s fine to schedule the Freight train to leave.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That last action is what&#8217;s happening, and it&#8217;s happening &#8220;as expected&#8221;. The only issue is that it happens &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;instantly&lt;/span&gt;&lt;span&gt;: block B340 gets activated, that stops the Passenger train, and &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;instantly&lt;/span&gt;&lt;span&gt;&amp;nbsp;the route tries to &#8220;recover&#8221; and switches back to the Freight, because it that small millisecond the spurious block is still active. If there were a small pause in between, the block would not show activate anymore, and the Freight would not start instantly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In essence, this is similar to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2024-10-12_conductor_2_sensor_issues_on_483b2f5d.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;the issue from the previous post&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: if there&#8217;s spurious block activation when trying to start, the program should delay and try again a few minutes later.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2024-10-14T00:00:55-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Sensor Issues on B330 and B360</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2024-10-12_conductor_2_sensor_issues_on_483b2f5d.html"/>
<id>https://www.alfray.com/trains/blog/train/2024-10-12_conductor_2_sensor_issues_on_483b2f5d.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This happened once, when Allen and Jim ended their Saturday session:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;At 1:40pm, they turned the &quot;Saturday mode&quot; switch off, turned the Mainline Automation toggle on. Consequently, the Freight train correctly moved back to its normal position.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;So far that seems normal. However...&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;At 1:42pm and 1:43pm, the computer registered multiple on/off instances of block detection on Block B330 -- there were about a dozen on/off activations for 2 seconds -- but also B360 registers as on -- see below.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Cameras show they were not running anything at that time, and that block B330 is clearly empty. I cannot see B360 however nothing on the video indicates there should be anything on it (no trains going in or out in the following minutes).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Camera shows Allen moving trains to Richmond via B160/B150 a minute later. I don&#8217;t think it&#8217;s related.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s an excerpt from &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;conductor-log-2024-10-12-08-40-03.txt&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span&gt;&#8658; This starts just after the Freight train has reached its default parking location at the Station: &lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:34.779 R Idle Mainline #0 ML Ready : ACTIVE&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:35.972 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:36.937 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:37.833 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:38.962 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:39.659 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:40.639 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:41.520 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:42.416 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:43.348 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:45.174 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:46.112 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:47.043 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:51.554 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:52.448 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:53.413 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:54.341 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:55.269 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:58.056 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:42:59.848 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:11.730 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:12.687 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:14.478 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:16.350 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:21.117 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:21.799 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:42.018 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:43.842 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:47.517 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:48.430 S S/NS773 B330 : ON&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;&#8658; At this point motion is detected in room and the Mainline Route tries to start the Passenger train&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&lt;br&gt;13:43:59.671 S S/NS797 AIU-Motion : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:59.672 R Idle Mainline #0 ML Ready : IDLE&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:59.672 R Sequence Mainline #3 Passenger (8330) : ACTIVATED&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:59.673 B S/NS787 B503b : EMPTY after 15994.17 seconds&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:59.704 D 8330 : Light ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:59.805 D 8330 : Bell OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:59.805 D 8330 : F1 OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:59.806 D 8330 : Sound ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:59.806 D 8330 : F8 ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:59.806 D 1067 : Sound OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:59.806 D 1067 : F8 ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:59.807 B S/NS787 B503b : OCCUPIED after 0.13 seconds&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:59.807 B S/NS773 B330 : OCCUPIED after 16025.81 seconds&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:59.807 B S/NS775 B360 : OCCUPIED after 16121.01 seconds&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:43:59.808 R Sequence Mainline #3 Passenger (8330) : ACTIVE&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:00.069 R Sequence Mainline #3 Passenger (8330) : ERROR Sequence Mainline #3 Passenger (8330) has unexpected occupied blocks out of {B503b}: [&amp;lt;B330 [NS773]&amp;gt;, &amp;lt;B360 [NS775]&amp;gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:00.070 R Sequence Mainline #3 Passenger (8330) : ERROR&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:00.073 R Sequence Mainline #3 Passenger (8330) : {&quot;name&quot;:&quot;Passenger&quot;,&quot;th&quot;:&quot;PA&quot;,&quot;act&quot;:2,&quot;err&quot;:true,&quot;nodes&quot;:[{&quot;n&quot;:&quot;B503b&quot;,&quot;ms&quot;:263}]}&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;&#8658; Here the automation places the Mainline Route in &#8220;Error&#8221; mode since it detected &lt;/span&gt;&lt;span style=&quot;font-style:italic;font-weight:700&quot;&gt;both&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;&amp;nbsp;blocks B330 and B360 to be occupied!&lt;/span&gt;&lt;span&gt;&amp;nbsp;(That&#8217;s where the camera watching the track reveals absolutely nothing visible on these tracks.)&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:02.664 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:04.519 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:07.204 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:07.470 S S/NS797 AIU-Motion : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:08.567 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:09.097 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:10.024 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:10.591 S S/NS797 AIU-Motion : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:10.956 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:11.883 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:16.670 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:17.331 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:18.692 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:18.692 S S/NS797 AIU-Motion : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:19.257 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:21.280 S S/NS797 AIU-Motion : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:21.974 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:22.872 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:29.448 S S/NS797 AIU-Motion : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:32.234 S S/NS797 AIU-Motion : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:38.442 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:40.467 S S/NS797 AIU-Motion : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:41.135 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:42.063 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:43.889 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:45.020 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:47.638 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:49.069 S S/NS797 AIU-Motion : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:49.466 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:50.361 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:51.258 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:52.185 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:53.115 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:54.008 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:55.901 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:57.164 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:44:57.959 S S/NS797 AIU-Motion : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:00.515 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:02.342 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:03.339 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:04.266 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:05.263 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:06.095 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:07.954 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:09.317 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:09.882 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:11.745 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:12.636 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:13.536 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:16.293 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:18.087 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:19.979 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:20.877 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:23.597 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:29.574 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:32.856 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:34.683 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:35.648 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:39.683 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:41.178 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:42.973 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:44.800 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:45.764 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:46.593 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:47.790 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:48.420 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:50.249 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:52.040 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:52.966 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:53.963 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:54.856 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:55.888 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:57.916 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:45:58.512 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:00.340 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:01.270 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:02.169 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:03.098 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:05.998 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:08.688 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:10.049 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:10.480 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:16.122 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:17.018 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:25.282 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:28.970 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:30.300 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:30.829 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:31.723 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:32.655 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:35.377 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:36.375 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:37.204 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:41.782 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:45.566 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:55.683 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:58.636 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:46:59.299 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:01.223 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:02.153 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:03.052 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:04.856 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:06.718 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:07.646 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:08.743 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:09.508 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:10.772 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:11.335 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:13.160 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:16.941 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:17.837 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:18.868 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:19.695 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:20.892 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:22.918 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:27.994 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:29.851 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:36.192 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:38.119 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:39.117 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:41.141 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:44.490 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:46.310 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:47.306 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:48.234 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:50.025 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:51.254 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:51.852 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:54.606 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:47:59.357 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:48:00.188 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:48:01.386 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:48:01.386 S S/NS775 B360 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:49:04.175 S S/NS775 B360 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:49:04.706 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:49:07.427 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:49:08.325 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:49:09.250 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:49:10.246 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:49:11.041 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:49:12.902 S S/NS773 B330 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:49:20.375 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;13:49:21.171 S S/NS775 B360 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Then the sensors suddenly stop acting up. They are acting up from 1:42pp up to 1:49pm.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However, on the cameras, I noticed at about that time (1:44pm or so), Allen was moving trains into the Richmond yard in the back. Could that be related? I very much doubt so: although technically the Mountain 1 (which has B330 and B360) and Richmond are on the same booster, they each have their own NCE EB1 Circuit Breaker -- which means even a short in the yard will not affect the mainline, and we know from experience that works very well. We never had Richmond affect other parts of the layout as far as I know of so I think it&apos;s merely coincidence and not related.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I don&#8217;t think it&#8217;s an issue with the DCC Booster either, as that would affect &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;all&lt;/span&gt;&lt;span&gt;&amp;nbsp;the blocks whereas here only two blocks started registering on/off.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I don&#8217;t think I will be able to get a clear idea of &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;why&lt;/span&gt;&lt;span&gt;&amp;nbsp;this happens. Instead I can focus on what I can do to remediate it in the automation software.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One thought is to allow the automation error mode to be temporary. Since the automation was unable to start and both trains were safely at the station, it would be fine to retry after 5-10 minutes instead of entering a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;permanent&lt;/span&gt;&lt;span&gt;&amp;nbsp;error mode.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2024-10-12T00:00:50-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">SDB: First Trolley Automation Test, Continued</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-11-24_sdb_first_trolley_automation_ecde7037.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-11-24_sdb_first_trolley_automation_ecde7037.html</id>
<category term="SDB" label="SDB"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-style:italic&quot;&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-style:italic;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/sdb&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Software Defined Blocks&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;&amp;nbsp;project uses an ESP32 with sensors to emulate block activations for a train model railroad&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:282.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_5244b4ed2bc9b875000ac241baa0aaa5f3900b00fae020592646d8c0f37f8315i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The first prototype automation test has been overwhelmingly problematic:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;At first, I could not get the ToF sensor to reliably detect the engine. It would seem to work, then most of the time it would not detect a decreasing distance as the trolley was approaching till it was right next to the sensor.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;At the same time, my mere presence a couple feet on the side would influence the result. That&#8217;s not good.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The response time in JMRI seems extremely slow.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s detail that last one.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&#8220;On the paper&#8221;, I wanted the distance to be measured &#8220;in a straight line&#8221; such that it would trigger 3 blocks: 0-200 mm would be block A, 200-400 mm would be block B, and 400-2000 mm would be block C (about 8 and 16 inches thresholds for our friends with these units). Experimentation by looking just at the output of the sensor on the embedded display seemed to indicate that it should work fine.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Then I created virtual sensors in JMRI, and configured SDB to send JSON commands to JMRI.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That&#8217;s when things derail a bit. It sure works, but there&#8217;s a clear delay. For example the engine leaves, the distance increases, and the engine crosses the 200 mm distance mark. But by the time the corresponding block is seen changed in JMRI, the engine is already at the 400 mm distance mark&#8230;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;ll need to look into that later. Why is it so slow? Could be SDB, could be the wifi, could be JMRI. Or even all of the above.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In between, I tried a couple variations and settled on one that mostly works: I create two virtual blocks which are &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;overlapping&lt;/span&gt;&lt;span&gt;. Block A covers 0-300 mm (~12 inches) and block B covers 200-2000 mm (anything above 8 inches). That seems to be more reliable. When the engine leaves, the block A&#8594;B transition happens sooner. When the engine comes back, the block B&#8594;A transition happens farther from the end, giving the engine more time to stop if needed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The other experiment I made is to not place the sensor straight and aligned with the track. From my notes, I know the sensor detects within a cone-shaped scope. I can place the sensor a bit more on the side of the track, pointing away from the aisle where I may be working. This way it has less chance to detect me. It also means the object detected as a slightly more &#8220;sideways&#8221; motion than coming straight at the sensor, which I know is something that helps a lot for regular IR sensors.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So in the end, I got something that &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;seemed&lt;/span&gt;&lt;span&gt;&amp;nbsp;to work. I left my prototype ESP32/sensor there to try it during the next day&#8217;s automation. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/randall/2023-11-25_trolley_automation_experiment.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;It failed in interesting ways&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Right now, this is in the early stages of experimentation. This is my &#8220;MVP&#8221; (minimum viable product) test bed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So far the conclusions are:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;SDB as in &#8220;ESP32 with sensors connecting via wifi to JMRI&#8221; works.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Even though the code for SDB is not feature complete yet, the code structure seems good and adequate.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The ToF sensor is disappointing and subpar for this application due to the geometry of the environment (too close to the track). &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For this specific automation project, I think I&#8217;ll go back to a regular current-sensing block sensor.&lt;br&gt;The next step is to support NCE BD20 sensors with SDB and then install that physically on site.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I will leave the actual ToF-sensor based automation in place though in between.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;</content>
<updated>2023-11-24T00:00:12-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">DCC-EX Command Station</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-11-11_dcc-ex_command_station.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-11-11_dcc-ex_command_station.html</id>
<category term="dcc" label="DCC"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I realize I don&#8217;t know the exact details of what&#8217;s needed for &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dcc-ex.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;DCC-EX&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. So let&#8217;s look into it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I also wonder how much some of the hardware parts cost, out of curiosity.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To start with, a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dcc-ex.com/ex-commandstation/index.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;DCC-EX Command Station&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is, as the name suggests, a command station for DCC -- digital control of model trains. What makes this interesting is that it&#8217;s a complete DIY system based around an Arduino board, an extra board providing the track power, and an open-source free software. Depending on the kind of Arduino board used, the trains can then be controlled via a computer and a web page, or even an Android or iPhone.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s the one I made using the recommended components. It is pictured next to an HO-scale engine to show you how small it is:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:334.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_e93d1ea97f855b743c90c75ddfe0df6f516e29a96b7897e2cab624feffa4360fi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;An Arduino UNO with a Motor Shield. &lt;br&gt;Bottom jack is the input power for the track.&lt;br&gt;The USB cable provides power to the Arduino + web page for control.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Of note, a DCC-EX command station can generate two track outputs. That can be 2 DCC signals -- for example for a mainline track + a separate programming track -- or it can be one DCC signal plus a separate DC signal. E.g. one could make a circuit with one loop on DCC, one loop on DC voltage, and control both independently..&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On the hardware side, one needs two things:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An Arduino board -- that&#8217;s the &#8220;computer&#8221; part&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A &#8220;motor shield&#8221; -- that&#8217;s the part at the top that produces the track voltage.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One thing to know is that the Arduino boards are &#8220;open design&#8221; and the Arduino company encourages others to make &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;compatible&lt;/span&gt;&lt;span&gt;&amp;nbsp;boards. Thus it&#8217;s easy to find &#8220;clones&#8221; of Arduino boards on Amazon or Aliexpress. Some are better than others.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Arduino board examples. For each one I compare an official Arduino board with a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;known compatible&lt;/span&gt;&lt;span&gt;&amp;nbsp;clone:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An &#8220;Arduino Uno&#8221; is the cheapest board one can find. It lacks wifi, and is limited in memory.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Still a good choice is using JMRI (no need for wifi).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;$25 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/475SVUU&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/475SVUU&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;Arduino UNO Rev3.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;$17 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3FTCYW3&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/3FTCYW3&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;ELEGOO UNO R3.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Do not get a &#8220;UNO R4&#8221;, they are a more modern and not supported version.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An &#8220;Arduino Mega2560&#8221; is a more powerful board and is the recommended choice. Some clone boards have custom wifi which may or may not work.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;$45 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/40wuFsJ&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/40wuFsJ&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;Arduino MEGA 2560 Rev3 (no wifi).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;$20 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3u5twvU&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/3u5twvU&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;ELEGOO MEGA R3 Board ATmega 2560 (no wifi).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;$20 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3FWnGQc&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/3FWnGQc&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;Mega2560 + WiFi ESP8266 (wifi &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;should&lt;/span&gt;&lt;span&gt;&amp;nbsp;work on this one).&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Then one needs a &#8220;Motor Shield&#8221;, the board that powers the track. This is a very generic term and the DCC-EX project only supports a subset of those available -- here are the known supported ones:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;$24 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/47os7ik&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/47os7ik&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;Arduino Motor Shield R3&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;$17 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3u9oM8G&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/3u9oM8G&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;FlashTree Motor Shield (ships in 1~2 months)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;$17 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/40A1RQ0&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/40A1RQ0&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;Deek-Robot Motor Shield (similar)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;EX-MotorShield8874, a dedicated version with 5A.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;$40 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.tindie.com/products/dccex/ex-motorshield8874/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.tindie.com/products/dccex/ex-motorshield8874/&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;br&gt;(+shipping, w/ limited availability)&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Next one needs a power supply. Technically two power supplies are needed: one for the Arduino &#8220;computer&#8221; part, and one for the &#8220;motor shield&#8221; that powers the track.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The Arduino can be powered by a simple USB power brick, or even better by the computer controlling the Arduino. In my case power the Arduino via the USB cable so I don&#8217;t need a power supply for that. How to choose:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;If an Arduino Uno is used, there&#8217;s no wifi, so it &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;must&lt;/span&gt;&lt;span&gt;&amp;nbsp;be connected to computer for control. And since it&#8217;s always controlled by JMRI, then it requires USB, thus just power it via USB from the computer. No need for an extra power supply here.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;If an Arduino Mega is used via Wifi, then it needs its own power supply.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Example of Arduino power supply:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;$10 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/40A595I&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/40A595I&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;Arduino UNO power supply.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In my case, I only need a power supply for the track power. And for these it&#8217;s easy: we can choose any of the 12 V LED power supplies that are abundant on the market. Two examples:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;$13 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/466HXNz&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/466HXNz&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;12V 5A LED Power Supply (no adapter).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;$12 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/47qFBu8&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/47qFBu8&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;12V 5A LED Power Supply with screw adapter&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Minimal costs to expect:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Using an official Arduino UNO R3 + Arduino Motor Shield R3 + Power Supply, the cost is $25+$25+$12 = ~$62.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Using good &#8220;clones&#8221;, Elegoo UNO and FlashTree Motor Shield + Power Supply, the cost is $17 + $17 + $12 = ~$46&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;That requires usage via JMRI (no direct Wifi or ethernet).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;If the goal is to bypass JMRI, then we need an option with an Arduino Mega and a wifi shield. This increases the cost by around $20+$15 respectively so in the range $100-$70 overall.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;In my case, I selected:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;$20 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3u5twvU&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/3u5twvU&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;ELEGOO MEGA R3 Board ATmega 2560 (no wifi).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;$17 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/40A1RQ0&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/40A1RQ0&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;Deek-Robot Motor Shield&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;$12 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/47qFBu8&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/47qFBu8&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;12V 5A LED Power Supply with screw adapter&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;My total was ~$50 plus taxes. Not bad considering DCC command stations are typically in the $200-300 range!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As I was tinkering, I first tried using an existing Arduino UNO I had then I tried again using the Arduino MEGA clone board. My first Motor Shield board was partially busted (only one of the 2 tracks had power) and it worked after I got an exchange.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Once we have all the hardware, we need to load the software on the Arduino board. That is done using &#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dcc-ex.com/download/ex-commandstation.html#ex-installer&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;DCC EX Installer&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221;. There&#8217;s a single download for Windows, Mac, or Linux which will install various tools such as Arduino CLI and other stuff. If you&#8217;re not a programmer already familiar with Arduino dev, just go with the easy installer. And even though I &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;am&lt;/span&gt;&lt;span&gt;&amp;nbsp;familiar with Arduino development, I found the already-made installer excellent and quite a time saver. The installer asks which board one has -- it can automatically detect the Arduino &#8220;official&#8221; ones but not necessarily the clones, then it offers options. That&#8217;s where one would choose if they have a display, if they have wifi, if they want &#8220;1 dcc track + 1 dc&#8221; or just &#8220;2 dcc tracks&#8221;, etc. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As a developer, I think the DCC-EX folks did a fantastic job here at making this accessible instead of arcane -- and not just &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dcc-ex.com/download/ex-commandstation.html#ex-installer&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;the installer&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, also &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dcc-ex.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;their web site&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;in general. There&#8217;s a ton of information -- for example on how to choose the hardware, and they clearly list what should work, what will not work, and what they recommend&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h1 id=&quot;h.7xe41xho5mkb&quot; style=&quot;line-height:1.15;padding-bottom:6pt;padding-top:6pt;page-break-after:avoid&quot;&gt;&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-11-11T00:00:43-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">SDB: First Trolley Automation Test</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-11-02_sdb_first_trolley_automation_test.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-11-02_sdb_first_trolley_automation_test.html</id>
<category term="SDB" label="SDB"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-style:italic&quot;&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-style:italic;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/sdb&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Software Defined Blocks&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;&amp;nbsp;project uses an ESP32 with sensors to emulate block activations for a train model railroad&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I brought my prototype board to Randall today and gave it a try with the desired trolley:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:244.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_c5f8b56e7364c511a43532c7a941c8cb273f0d3f09330438df8eb6f5e96f7592i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The SDB prototype detected the trolley properly. When placed this way against the end bumper, we can adequately measure the trolley distance between 10 mm and 400 mm (1 cm up to 40 cm). After that, we always get a value in the 400 range.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note that in this test, I did not hook SDB to the main JMRI computer for actual control. The goal was to determine which sensor placement would fulfill the detection need. Whatever is on the picture above seems like it will work correctly, so I&#8217;ll go ahead and create some kind of sensor support -- probably out of foam/cardboard first and then later 3d-printed or stuck to a little building.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s an overview of the track I want to control:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:166.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_7bf923351e2d89701926b89b6c8fa0cc9c48bbe6ed090bad7abf62c8dc8ca4e9d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The engine selection is this orange trolley. The model is &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;Atlantic City #6885&lt;/span&gt;&lt;span&gt;&amp;nbsp;from &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.bowser-trains.com/history/streetcarnohistory.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Bowser streetcar&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and it is a very good facsimil&#233; of the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.railpictures.net/showphotos.php?road_number=MUNI%201815&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SF Muni Milan 1815&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;part of the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.sfmta.com/getting-around/muni/historic-streetcars&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;San Francisco Heritage Streetcar Fleet&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. This is a DCC model. It has good sound and runs well.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;#6885 is certainly a finicky DCC engine though -- folks who tried to run it on the layout keep reporting it tends to &#8220;not stop&#8221;. And that&#8217;s right: when running, it seems to ignore any &#8220;speed 0&#8221; stop command. However it is possible to easily stop it by switching the direction to the opposite, and &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;then&lt;/span&gt;&lt;span&gt;&amp;nbsp;stopping it after a couple seconds. Go figure.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There is another realization I made with this test: I actually don&#8217;t need 2 sensors for this automation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Having one sensor on each side of the track would allow me to precisely stop the engine on the other side. But in fact to get started, I&#8217;ll use a much simpler automation:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Trolley&#8217;s default position is at the &#8220;end point 1&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It will travel &#8220;more or less&#8221; to end point 2 -- I measured it takes 50 seconds at speed 20 (on dcc 128 speeds).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Then we just reverse immediately and go back to &#8220;end point 1&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;We stop when the trolley is fairly close to the sensor using the trick mentioned above (reverse speed for a couple seconds then actually stop).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s worth pointing out that &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-10-13_sdb_supporting_two_tof_sensors.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SDB &lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-style:italic;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-10-13_sdb_supporting_two_tof_sensors.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;already&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-10-13_sdb_supporting_two_tof_sensors.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;&amp;nbsp;has support for dual ToF sensors&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. This was interesting to add, and I may use it later, but I don&#8217;t really &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;need&lt;/span&gt;&lt;span&gt;&amp;nbsp;to, contrary to my initial design thoughts.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In Conductor/RTAC, we just then need to tie this cycle to the room occupation sensor to start it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Another realization is that I don&#8217;t need to have both the ESP32 &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;and&lt;/span&gt;&lt;span&gt;&amp;nbsp;the sensor next to the track end bumper. I only need the sensor there. I still think it would be easier to have both at the same place, maybe masquerading as a small building on the layout.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-11-02T00:00:45-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">SDB: VL53L0X ToF Sensor Accuracy</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-11-01_sdb_vl53l0x_tof_sensor_accuracy.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-11-01_sdb_vl53l0x_tof_sensor_accuracy.html</id>
<category term="SDB" label="SDB"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-style:italic&quot;&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-style:italic;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/sdb&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Software Defined Blocks&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;&amp;nbsp;project uses an ESP32 with sensors to emulate block activations for a train model railroad&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The initial design called for the use of two ToF sensors, one on each side of the piece of track to automate. That would allow the automation to precisely stop the train on either side. The piece of track I want to monitor is about 3 meters long.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I selected the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.adafruit.com/product/3317&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Adafruit VL53L0X&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&#8220;Time of Flight Distance Sensor&#8221; for this application.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The specification lists the sensor as having a 30 mm to 1 meter range. The idea was thus to have 2 sensors, one on each side of the track to monitor, thus creating 3 &#8220;virtual blocks&#8221;: each sensor would monitor about 1 meter of the track, and if the engine is not detected there, we would assume it would be in the middle.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:123.01px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_f166c02c848f568b930b21b2611854915be1af943b5f7a9d21919c483a3cc23fd.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Unfortunately, as soon as I tried the sensor, I realized that it does not work for &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;this specific application&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To make it clear, the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.adafruit.com/product/3317&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Adafruit VL53L0X&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&#8220;Time of Flight Distance Sensor&#8221; works very well. It measures adequately the distance of whatever object is in front of it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The issue is that I was expecting something like a directional LIDAR with a narrow beam. That&#8217;s &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;at all what the VL53L0X does! Instead the sensor produces a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;cone&lt;/span&gt;&lt;span&gt;&amp;nbsp;of IR light, and returns the distance of the closest point measured in its field of view. Here&#8217;s a more accurate representation:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:123.01px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_8f6c065be1cac5e8637c8a51c5a496022486ee9c8f1b1225818b0f9fd213c359d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The Adafruit page describes the sensor as a &#8220;narrow beam&#8221;, but when I think about it, it&#8217;s a fairly unclear statement.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://forum.pololu.com/t/vl53l0x-beam-width-angle/11483&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://forum.pololu.com/t/vl53l0x-beam-width-angle/11483&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;indicates there&#8217;s a FOV of 25 degrees, which is typically half of &#8220;good&#8221; sonar.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;More docs at: &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.st.com/en/imaging-and-photonics-solutions/vl53l0x.html#documentation&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.st.com/en/imaging-and-photonics-solutions/vl53l0x.html#documentation&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.st.com/resource/en/application_note/an5894-description-of-the-fields-of-view-of-stmicroelectronics-timeofflight-sensors-stmicroelectronics.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.st.com/resource/en/application_note/an5894-description-of-the-fields-of-view-of-stmicroelectronics-timeofflight-sensors-stmicroelectronics.pdf&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;&#8658; this is a general description of the type of FoV (exclusion zone, nominal, etc).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Actual datasheet: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.st.com/resource/en/datasheet/vl53l0x.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.st.com/resource/en/datasheet/vl53l0x.pdf&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This clearly indicates the FoV is 25 degrees (section 5.1, page 23).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;We learn there&#8217;s a &#8220;temperature calibration&#8221; phase that needs to be done once and then redone if the temperature changes by more than 8 degrees (section 2.3.1, page 10).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Timing budget of 33 ms is the nominal default value (section 5.3, page 25).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There are profiles: default, high accuracy, long range, high speed.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Long range is indicated as up to 2 meters, with a 200 ms timing budget.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;All others are up to 1.2 meters, with a 20-33 ms timing budget.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This is a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ehs.lbl.gov/resource/documents/radiation-protection/laser-safety/laser-classification-explanation/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Laser Class 1 product&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, meaning it is &#8220;eye-safe under all operating conditions&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This embeds a microprocessor with its own firmware, and defines a precise API to interact over the I2C bus.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So, does this mean I can&#8217;t use this sensor?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Yes and no.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;No, I cannot use it as I &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;initially&lt;/span&gt;&lt;span&gt;&amp;nbsp;planned. I cannot take full advantage of the &#8220;1 meter&#8221; max distance, because basically the sensor always returns the closest object it can see, which happens to be the track itself.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However that only means the sensor has a shorter distance range of operation for my specific case. In particular, if I place the sensor around 2 cm above the track level, I am able to reliably detect any H0-sized engine which is closer than 20~40 cm. That&#8217;s a lot shorter than expected but it&#8217;s still quite useful since I am mostly interested in using the sensor to know when to stop the train engine at the end of the track.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-11-01T00:00:26-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">SDB: Supporting two ToF Sensors</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-10-13_sdb_supporting_two_tof_sensors.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-10-13_sdb_supporting_two_tof_sensors.html</id>
<category term="SDB" label="SDB"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-style:italic&quot;&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-style:italic;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/sdb&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Software Defined Blocks&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;&amp;nbsp;project uses an ESP32 with sensors to emulate block activations for a train model railroad&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The initial design calls to use two ToF sensors, one on each side of the piece of track to automate. That would allow the automation to precisely stop the train on either side.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The sensor I use is the Adafruit VL53L0X. It connects on the I2C bus at a specific 0x29 address. However, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.adafruit.com/adafruit-vl53l0x-micro-lidar-distance-sensor-breakout/arduino-code&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;it is possible to change the address in software&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: one of the sensor&#8217;s pins named XSHUT is to &#8220;shutdown&#8221; the sensor. The procedure is to connect both sensors on the I2C bus, and have the two sensors&#8217; XSHUT pins connected to different GPIO pins. This makes it possible to selectively turn them on at boot, changing their address one by one.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Example: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/adafruit/Adafruit_VL53L0X/blob/master/examples/vl53l0x_dual/vl53l0x_dual.ino&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/adafruit/Adafruit_VL53L0X/blob/master/examples/vl53l0x_dual/vl53l0x_dual.ino&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Pin out on the sensor: Vin, GND, SCL, SDA, GPIO, XSHUT&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I2C Address: 0x29 &#8594; default I2C address at boot.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;XSHUT is a &#8220;shutdown&#8221; (pulled high, pull down to shut down).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We&#8217;ll name our sensors ToF0 / ToF1 (instead of 1 &amp;amp; 2) because it&#8217;s more logical::&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;ToF0 &#8658; I2C 0x30, XSHUT0 on IO pin 18&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;ToF1 &#8658; I2C 0x31, XSHUT1 on IO pin 23&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Init procedure (see &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/adafruit/Adafruit_VL53L0X/blob/master/examples/vl53l0x_dual/vl53l0x_dual.ino&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;setID() in the example&lt;/a&gt;&lt;/span&gt;&lt;span&gt;):&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Set both XSHUT pins to 0 (pull down = shutdown) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+ Delay(10ms).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Set both XSHUT pins to 1 &#8658; this performs a reset &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+ Delay(10ms).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Set XSHUT1 to 0 (ToF0 awake, ToF1 shutdown) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+ Delay(10ms).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;lox0.begin(0x30)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; ToF0 becomes 0x30&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Set XSHUT1 to 1 (ToF0 awake, ToF1 awake but still on 0x29)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; + Delay(10ms).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;lox1.begin(0x31)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; ToF1 becomes 0x31&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;What they call &#8220;lox&#8221; is really &#8220;l0x&#8221;, an Adafruit_VL53L0X() instance:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;span&gt;Adafruit_VL53L0X lox1 = Adafruit_VL53L0X();&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;span&gt;Adafruit_VL53L0X lox2 = Adafruit_VL53L0X();&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Support for this is implemented in the SDB ToF module: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/sdb/src/master/src/mod_tof.h&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/model-railroad/sdb/src/master/src/mod_tof.h&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-10-13T00:00:45-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Converting a Bachmann Spectrum Shay to DCC</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-09-18_converting_a_bachmann_spectr_f4f13891.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-09-18_converting_a_bachmann_spectr_f4f13891.html</id>
<category term="dcc" label="DCC"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/LaWar07neX4&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;The Shay running at Randall after DCC conversion&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I recently got a Bachmann Spectrum Shay -- the &#8220;80-ton 3 truck Shay&#8221; #81901. The one I got is an unlettered black version, used, and in good condition. All gears work. It has an 8-pin NMRA / NEM652 connector, and it screams to be converted to DCC so we&#8217;ll discuss this effort here.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:392.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_56ce127f7cdbd95e5a2ac07557ddfbe917c3cb36e511ab2db101c1fa02761886i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;The Bachmann Shay before DCC conversion, as unboxed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Initial Observations&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here are the initial observations:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Runs on DC by default. There&apos;s a circuit board in the rear tender with an 8-pin NEN652 connector for a &quot;direct&quot; DCC decoder installation.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Motor seems OK, running smoothly, all pistons and gearing functional for traction.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Front light doesn&#8217;t seem to turn on.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;Doesn&#8217;t seem very obvious to replace. Cannot tell by &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline line-through;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://gearedsteam.blogspot.com/2012/06/bachmann-spectrum-shay-disassembly.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;the pictures here&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The front smoke door just pulls easily, revealing a light bulb + plastic light guide (but allegedly no easy way to pull the bulb from there).&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Rear light does turn on.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The rear light is a bulb. Seems like it&#8217;s on the circuit board (see image below), with a plastic light guide.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;There&#8217;s a firefox red light inside, does turn on.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;That&#8217;s one more bulb. Supposedly accessible by removing trucks + pistons.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Box contains the documentation, &#8220;coal&#8221; weight, accessories (optional toolbox, water hose, some other little details).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The coal tender is 15 x 29 mm.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The coal weight could be replaced by a 3d-printed cover.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Tender from the outside is 48x32x18mm but that&#8217;s not usable space.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;From a discussion online, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.bachmanntrains.com/home-usa/board/index.php?topic=32408.0&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;3-truck shay tender shell removal&lt;/a&gt;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;&#8220;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;dcc board will go inside the articulated tender, the sugar cube speaker will go in the main tender.&lt;/span&gt;&lt;span&gt;&#8221;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;&#8220;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;Remove the tender truck and the rear truck on the main frame. This will expose the 2 mini plug connections, a slotted head screw that holds the draw bar from the loco, and finally a &lt;/span&gt;&lt;span style=&quot;font-style:italic;font-weight:700&quot;&gt;Phillips head screw beside the draw bar screw&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;. Remove the phillips head screw and the tender cover pivots off from the front to the rear, the rear is hinged. Be careful in regards to the ladder and sanders on the back of the tender. There is an 8 pin plug for connecting the decoder to. While you&apos;re in there, remove the yellow capacitor to improve running abilities.&lt;/span&gt;&lt;span&gt;&#8221;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Tender&#8217;s screw can be accessed by simply &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;rotating&lt;/span&gt;&lt;span&gt;&amp;nbsp;the middle truck (remove the crew, carefully rotate it around the driving gears). The tender screw is &#8220;held&#8221; in place by the draw bar (it overlaps slightly).&lt;br&gt;Need to pull the tender forward slightly before lifting it, as there are metal pivots at the back. The ladder can be detached on the tender side.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Tender features a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dccwiki.com/8_Pin_DCC_Plug&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;8-pin NEM652&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Tender space is 40.9 x 26 x 13 mm, but the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;usable&lt;/span&gt;&lt;span&gt;&amp;nbsp;space is really 35 x 26 mm (due to rear LED conduit) and height is 13-7 = 6 mm above the 8-pin plug.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Front part disassembly -- don&#8217;t go there! &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://gearedsteam.blogspot.com/2012/06/bachmann-spectrum-shay-disassembly.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Geared Steam : Bachmann Spectrum Shay Disassembly&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The Bachmann Spectrum Shay is said to be a really good model.&lt;br&gt;Review: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://cs.trains.com/mrr/f/88/t/158185.aspx&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Bachmann Spectrum HO 3-Truck Shay review - Model Railroader Magazine&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;(an overall good review, worth reading).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Known issue: the bevel gears can crack, or even come cracked out of the box (!).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Replacement gears:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://nwsl.com/products/bevel-gear-ho-bachman-2-truck-shay-81907-80-ton-3-truck-upgrade-bevel-gear-6&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Bevel Gear, HO Bachmann 3-truck Shay (81907) 80-ton, 3 Truck upgrade b &#8211; NorthWest Short Line&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Upfront I applied a little bit of grease to all the visible drive gear. The only part I have not done yet is lubricate the motor bearing and the worm gear inside, due to the difficulty of access.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;DCC Decoder Choice&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;All gears seem to work on that one, so I&#8217;m going to ignore the gear issue (we&#8217;ll burn that bridge once we get to it), and focus on adding a decoder in there. Obviously what I want is a DCC decoder with sound, and I have options.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;TCS M2 or M4:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;background-color:rgb(255, 255, 255);line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.tcsdcc.com/product-page/mc2&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;MC2 - TrainControlSystems&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;background-color:rgb(255, 255, 255);line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.tcsdcc.com/product-page/mc4&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;MC4 - TrainControlSystems&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;background-color:rgb(255, 255, 255);line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;color:rgb(34, 34, 34)&quot;&gt;Their spec size is 18.02mm x 10.63mm x 4.85mm&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;background-color:rgb(255, 255, 255);line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;color:rgb(34, 34, 34)&quot;&gt;No sound. Wires + optional 8-pin plug (with long wires).&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;TCS DP2X-UK uses an 8-pin NMRA compatible &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://tcsdcc.com/1287&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;TCS decoder&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;No sound either.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;background-color:rgb(255, 255, 255);line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;color:rgb(34, 34, 34)&quot;&gt;The common &quot;blue wrapped&quot; Digitrax Decoder DH126&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;background-color:rgb(255, 255, 255);line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.digitrax.com/products/mobile-decoders/dh126d/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Digitrax - DH126D 1.5 Amp Economy HO Scale Wired Mobile Decoder&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;background-color:rgb(255, 255, 255);line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;color:rgb(34, 34, 34)&quot;&gt;Size 17.08mm x 27.28mm x 6.6mm&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;background-color:rgb(255, 255, 255);line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;color:rgb(34, 34, 34)&quot;&gt;Tsunami decoder TSU-1100&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;background-color:rgb(255, 255, 255);line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://soundtraxx.com/products/tsunami2-digital-sound-decoders/tsu-1100/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Soundtraxx Tsunami2 Digital Sound Decoder TSU-1100&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;background-color:rgb(255, 255, 255);line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;color:rgb(34, 34, 34)&quot;&gt;Size of 27 x 10.5 x 5mm&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;background-color:rgb(255, 255, 255);line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;color:rgb(34, 34, 34)&quot;&gt;Soundtraxx has a dedicated board replacement + decoder + speaker here:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/plug-play-decoders-dsd-b3tslc-for-bachmann-ho-3-truck-shay&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SoundTraxx - DSD-B3TSLC for Bachmann HO 3-Truck Shay - 678-820060&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;LokSound 5 &#8220;micro&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.esu.eu/en/products/loksound/loksound-5-micro-loksound-5-micro-dcc/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ESU - LokSound 5 micro / LokSound 5 micro DCC&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Size either 25mm or 21mm x 10mm x 5mm depending on the page that I read.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Can come with a 11mm x 15mm sugar cube speaker&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Note that the version with the 8-pin wires seems longer -- the 8-pin connection is actually a ribbon, so it can&#8217;t be cut/shortened easily, and on the decoder side it has a little board that plugs in the Next18 socket.&lt;br&gt;Even the &#8220;wire version&#8221; is using a little Next18 socket with wires.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Caution: what they call an &#8220;8-pin&#8221; is NOT an &#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dccwiki.com/8_Pin_DCC_Plug&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;8-pin NMRA&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221; &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;on the pictures&lt;/span&gt;&lt;span&gt;&amp;nbsp;even though it says so in the text!&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Shay sound file for LokSound 5 here: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://projects.esu.eu/projectoverviews/18?page=3&amp;amp;count=10&amp;amp;order=date&amp;amp;type=steam&amp;amp;cat=18&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;LokSound 5 North American and Australian Sound files - ESU&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;br&gt;That sound is ridiculously gorgeous.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Bachmann 81945:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://estore.bachmanntrains.com/index.php?main_page=product_info&amp;amp;products_id=5783&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Decoder 8 pin plug (HO Universal) [81945-44915] - Bachmann Store&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Supposedly the one to fit in there.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;I actually found later that I have one of these, that I pulled out of an old loco where I replaced the decoder. No idea if it works. No sound.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;One option is to use the existing 8-pin NEM652 plug. References:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dccwiki.com/8_Pin_DCC_Plug&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://dccwiki.com/8_Pin_DCC_Plug&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&#8594; how to test it, how to wire it.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.morop.org/index.php/en/nem-the-norms.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.morop.org/index.php/en/nem-the-norms.html&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&#8594; search 652.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;In the end, I ordered &lt;/span&gt;&lt;span&gt;a LokSound 5 &#8220;micro&#8221; &#8220;with wires&#8221; instead of the dubious 8-pin version:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.esu.eu/en/products/loksound/loksound-5-micro-loksound-5-micro-dcc/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ESU - LokSound 5 micro / LokSound 5 micro DCC&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;I already have an ESU 11x15 sugar cube speaker in my stock pile at home.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Speaker Placement&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;While I await for it to arrive, I cut templates out of cardboard based on the dimensions of the speaker and the decoder, to see how I&#8217;m going to fit it all in there. &lt;/span&gt;&lt;span&gt;Possible placement choices:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:145.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:620.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_429bebab1e097e9840b2b2f7c1340cceedce95f5492ad6ed9e13d0048fe55bf8i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:168.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:599.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_3638b677f4bafdc31e874aca94f3a403c42cac316f9c5728f1507369da7a1055i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Where should the speaker go?&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;There are no holes in the rear tender, so the speaker would be muffled there.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Placing the speaker in the coal tender would require drilling some holes through the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;metal&lt;/span&gt;&lt;span&gt;&amp;nbsp;casing. I don&#8217;t see any obvious way to route wires from the bottom.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Decision: &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;I will first try with the speaker in the rear tender, and evaluate how muffled the sound is.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Then I can compare with the speaker in the coal tender, simply by routing the wires outside of the tender at first.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;If I end up liking the coal tender placement, I&#8217;ll drill a small hole in the partition between both tenders.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;In that case, I can 3d print a &#8220;coal load&#8221; cover since I would not be using the original all-metal die cast one.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;m not going to deal with the lights yet. The front bulb seems dead, and seems like a PITA to replace. The rear one is easily accessible on the rear tender circuit board. The firebox one needs a serious disassembly too to access it. It&#8217;s said that DCC wears out light bulbs faster, mostly because the lights are always on at full power (compared to DC). Not sure how much true that is. The only thing I know is that I&#8217;m not going to change them now, and if/when I do later, it will be to go for LEDs.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Tender Circuit Board&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Now let&#8217;s address the issue of the rear board and the 8-pin connector. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:195.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:554.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_811eaf1c973b92e181ff20b95fcb4ef34167723f1b8173aa3abc8cddce8565f3i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Pulling the board revealed 2 black wires directly connecting to the rear truck, one being smashed by the tender cover. Can be seen broken on the top of the right picture above. Will need to be resoldered/fixed.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Schematics of the current board:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:162.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:624.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_96129e95063e77f65f6f4f58a808ac19659fb5bf2d2435bda9855956d4f6fb79i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://cs.trains.com/mrr/f/744/t/209123.aspx&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://cs.trains.com/mrr/f/744/t/209123.aspx&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;suggests removing the cap, but leaving the inductances as having &#8220;no effect without the cap&#8221; (hmmm, that&#8217;s not really how an LC network works&#8230; my guess is more that it does not have a strongly noticeable effect). &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The argument can indeed be made to pull most of the components off the board and solder directly to it: none of these components are really useful.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The diodes are only useful in DC: because the &#8220;DC plug&#8221; bridges track/motor/light pins, there is no connection to 7 (the light common). Instead it&#8217;s the diode providing it on the light that is off. E.g. one of the diodes is always passing and the other one blocking. Thus they &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;must&lt;/span&gt;&lt;span&gt;&amp;nbsp;be removed. It&#8217;s even &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.morop.org/images/NEM_register/NEM_E/nem652_en_2017.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;explained in the NEM-652 doc here&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(page 2)&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The cap is in between the motor leads (1-5), and that will negatively affect BEMF.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The inductors are in series with the motor leads (1-5), and it probably has a small negative effect on BEMF, even if likely negligible.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;In the end I removed all these, and since I had my fancy RadioShack desoldering iron all hot and primed, I also removed the 8-pin plug entirely:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:366.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:624.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_fa528f2f552a9ae843be79086290e203c9666e49630d81ca9e60bcd0f43e40a9d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;We&#8217;ll wire it as such:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Orange wire &#8594; Directly to old L1 (on connector side). We don&#8217;t use 1.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Gray wire &#8594; Directly to old L2 (on connector side). We don&#8217;t use 5.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Red wire &#8594; to 8.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Blue wire &#8594; to 7.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;White wire &#8594; to 6.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Black wire &#8594; to 4.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Yellow wire &#8594; to 2.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Rear truck reconnects to &#8220;C2&#8221; (next to Con2) with the ex-broken wire (truck left) at the bottom.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The two brown wires go to the speaker.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&apos;s a first version with the LokSound micro soldered, including the speaker. I left all the wires that came with the LokSound as-is because I had no idea how short I needed them. Also the speaker might go in the middle tender, and the original length of wiring makes that possible. Doesn&#8217;t look tidy yet that&apos;s enough to validate the setup so far.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:248.06px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:622.90px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_3df730d82b86ffd9b109b775219a31b61b021c824fb984b8da868205cb8f0120i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I (double) checked all connections then loaded the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://projects.esu.eu/projectoverviews/18?page=3&amp;amp;count=10&amp;amp;order=date&amp;amp;type=steam&amp;amp;cat=18&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Shay sound project&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;using the LokProgrammer. That took a good half an hour to load. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Deciding on the Speaker Placement&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I did 2 runs, one with the speaker in the rear tender with the cover on, and one with the speaker in the middle tender:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:249.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:633.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_6adc0764246b50d3a5f3e3829fc3a535306d1bb8f93f25fc839232bec21e2734i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I was originally afraid the full metal enclosure of the rear tender would mute the speaker sound. However when I tried, that was not the case. Almost the reverse actually, I preferred the sound with the speaker in the rear tender. Why?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Measuring the sound with a volume level app on my phone revealed an interesting difference:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:297.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:542.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_8f21f95e96c8c34e22a7a2fb3c2272c5229a4fee124e83dc44f61847070c49fcd.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The sound has a noticeable high frequency component. On a Tsunami 2, I&apos;d adjust that with the equalizer, but here the LokSound, ironically how fancy it is, lacks that option. When the speaker is in the enclosed rear tender, the high frequency hiss is much less pronounced and the bass actually sounds louder. This is confirmed by the sound level app. The average and the max are higher with the speaker in the rear enclosed tender. The gap with a dome in the sound recording is the horn, and we can clearly see it higher on the picture at the right.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Thus I&#8217;ll keep the speaker in the rear tender. It sounds better, and I don&#8217;t have the hassle of passing the wires through between both metal tenders. Now the trouble is making it all fit, and with the bundle of long wires I originally had, there was no way to close the tender properly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Eventually I ended up with this setup:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:247.48px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:623.90px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_de23e8e87c6e245a292d1ee35ed1f14bd778f59d4322f3f0fdab4a1c3b250caei.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To be able to fit everything, I had to &amp;nbsp;desolder the decoder, cut the wires, then resolder them. Tedious but easy, and I was planning to do that anyway. The real fight was trying to put the tender cover back and screw it in place, which is quite an ordeal (which I&apos;ll describe below).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;After multiple tries and retries, I got the result seen below. Although it&#8217;s subtle, it is visible that the front of the tender does not fully close. The problem is that the speaker is just a tad too big, by about one millimeter.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:208.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:544.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_9b58dd4f963ea4607f60ff9355f86453607bbe13015962e0d5b18233bccd5aeei.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For the speaker, I used the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.esu.eu/en/products/accessories/loudspeakers/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ESU 50321 11mm x 15mm Sugar Cube Speaker 8 Ohm&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. This one has a &#8220;&lt;/span&gt;&lt;span&gt;configurable&#8221; baffle -- basically a few plastic pieces that one assembles and glues together to form the desired shape and height. I used the max height possible, after I measured twice and estimated the space to be sufficient. Turns out it&#8217;s not, and in retrospect ideally I&#8217;d have used one less height segment.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I don&#8217;t have another speaker to assemble at hand. One option is get another one, or 3d print my own speaker baffle that is adjusted to the space I actually have here -- I&#8217;ve done that with great success for other sound installs before. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Whether I eventually do that depends on whether I&#8217;m bothered by the tiny little space visible at the front of the tender. I posit that open space, how tiny it be, is likely beneficial to allow the sound to get out of the tender. So unless I&#8217;m visually bothered by it, I may just keep it that way for now.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Opening and Closing the Rear Tender&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This part requires some explanation. It took me a while to figure out how to do it, even with the explanations that I had seen online.The rear tender is a metal cover. It&#8217;s pretty sturdy die cast metal, almost 2 mm thick. The rear part of the tender is held by two little tabs, and the front part is locked by a screw. To remove the cover, one &#8220;merely&#8221; needs to remove the screw, and then tilt the tender towards the rear. Reverse the operation to install it back. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Accessing that lone screw is the challenge: it&#8217;s accessed via the bottom, but it&#8217;s covered by the rear draw bar, the circuit board connectors, and the middle truck. Here&#8217;s the order of operations:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:310.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:770.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_20355bd8c9787aa0a3fef4a7a48f33b2210decb3ad089502513a7bd1c10e7e13d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;1- Remove the middle truck screw, and pivot the truck -- no need to remove it entirely, I just hold it on its side:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:286.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:614.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_7a6d03a141e5ce9fa35787b4e599821b0b2b2ff4b667cffba495a1afe583e693d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;br&gt;2- Disconnect the 2 orange connectors from the circuit board.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;br&gt;3- The tender screw is now visible, slightly covered by the drawbar.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Since the drawbar overlaps the tender screw, it&#8217;s actually possible to just leave the drawbar in place -- that basically holds the tender screw in place and prevents it from falling off.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To remove the tender cover, unscrew that tender screw, then lift the front of the tender. Remember to snap off the ladder in the back first, the top of the ladder simply snugly fits in little holes in the tender.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To put the tender cover back, fit the back tender tabs first, tilt it down towards the front, then flip the engine over and do the same operation as above to access the tender screw. It&#8217;s very much recessed, making it hard to hold in place with pliers while screwing it, so for that part I had to unscrew the rear part of the drawbar to get better access.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Adjusting the DCC Speed&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I need to reconfigure the CVs for Vstart/Vmid/Vhigh. They defaulted in the LokSound project to 2 / 45 / 128.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;CV 2 (Vstart) at 2 was too slow, the motor was barely moving. I changed that to 10, which allows the engine to crawl at speed 1.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;CV 5 (Vhigh) at 128 is too low. It means the top speed of the engine is only half of the motor output, and it&#8217;s quite a crawl. I would not go to the max, yet a value such as 192 seems more reasonable.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:225.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:495.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_541153462dfeacefe321bcdf64b01e86cb81436ac745308bcbfa4c60c1eb58b5i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So how fast is that engine really going? I&#8217;ve tried 3 values for Vhigh, ran the engine on a 3-foot section of track, timed it going forward, then backward, and measured an equivalent to 1:1 speed:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:21.8pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(207, 226, 243);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;Vhigh (CV 5)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(207, 226, 243);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;Distance (m)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(207, 226, 243);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;Forward (s)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(207, 226, 243);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;Reverse (s)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(207, 226, 243);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:84pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;HO speed (m/s)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(207, 226, 243);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:66pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;1:1 km/h&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(207, 226, 243);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;1:1 MPH&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:15.8pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;128&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;0.9144&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;34&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;66&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:84pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;0.01385&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:66pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;4.3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;7.0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:15.8pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;192&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;0.9144&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;24&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;44&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:84pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;0.02078&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:66pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;6.5&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;10.5&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:15.8pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;255&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;0.9144&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;18&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;35&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:84pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;0.02613&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:66pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;8.2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:75pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-size:10pt;vertical-align:baseline&quot;&gt;13.2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;m going for the 3/4th value of Vhigh CV 5 = 192, with a Vmid of 100. I never run my engines full speed as there&#8217;s little benefit in pushing these tiny motors to their max voltage. That will give it a &#8220;real&#8221; top speed of about 10 MPH, which is significantly less than the accepted 15 MPH top speed for a Shay yet still appropriate.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;End Result and Future Changes&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;And voila, I currently have a functional DCC-equipped Shay locomotive. There are a few more things to take care of, but these will be projects for another time:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;Reconfigure the CVs for Vstart/Vmid/Vhigh&lt;/span&gt;&lt;span&gt;&amp;nbsp;(done).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Consider 3D-printing a different speaker baffle, adjusted to the space available in the tender.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Consider upgrading the lights to LED and fixing the front light.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Consider lettering and numbering the engine.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To be continued&#8230; &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-09-18T00:00:33-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Route Statistics with Numbers</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-09-11_conductor_2_route_statistics_54d3297b.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-09-11_conductor_2_route_statistics_54d3297b.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the latest version of &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, I&#8217;ve &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-08-23_conductor_2_route_statistics.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;added &#8220;end-of-route statistics&#8221;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. I&#8217;ve now accumulated enough data to start looking at it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First, I needed to parse a JSON log file (a log file with one JSON entry per line per day per run), and I needed a way to convert that to CSV to dump it in a Google Spreadsheet. I briefly considered writing a short python script to do that, then realized that nothing can beat the awesomeness of &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;sed&lt;/span&gt;&lt;span&gt;, so I ended up with this:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;$ grep &apos;{&quot;name&quot;&apos; conductor-log-2023-09-* | sed -E -n &apos;/Recovery/d; /true/d; s/^[^0-9]+//; s/([0-9-]{10})[^:]+:/\1 /; s/ R Seq[^\{]+/@ /; s/&quot;:/&quot; /g; s/[^a-zA-Z0-9@.:-]+/,/g; s/@/,/g; s/,ms,([0-9]{3,})/,\1,ms/g; s/([0-9])([0-9]{3}),ms/\1.\2,ms/g; s/,name,|,th|,act|,err,false,nodes|,n|,ms//g; p&apos; &amp;nbsp;| tee ~/temp/_csv.txt&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I regret nothing. &amp;lt;insert appropriate meme&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I shall note that this expression purposely only selects log lines that have no errors, that is, successful runs that have completed with no issue. This will become relevant later.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now let&#8217;s look at the collected data.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Freight Route&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is a simple shuttle route over two blocks: we&#8217;re moving from block B311 (the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/about.html#h.1a30ydkpyo99&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Stockton Station&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) to B321 (the Sonora Station), stopping there, and then back again to B311. The way I wrote the route stats aggregator, I add an index number when a block is repeated, so &#8220;B311.1&#8221; means &#8220;block B311 when leaving&#8221;, and &#8220;B311.2&#8221; means &#8220;block B311 when coming back&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I have 98 runs for this one, and when we compute the stats we get a very nice result:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:418.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_00608dbba9a28644b702a86dff07157c6de2bf69670bddeddfa57ed5fe2931d0i.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;All the times are in seconds, per length of block occupation. It takes about 26 seconds to move to the second block, and we spend a total of about 160 seconds on that block -- and that includes the 30 second paused time at the 2nd station before reversing back.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As a reminder, one of the major revamps I did in Conductor 2 is to have the ability to define min/max times per block. In this case, I have a min of 10 seconds, and a max of 180 seconds. These are hard limits -- if the trains do not spent at least 10 seconds in a block or spend more than 180 seconds on a block, something&#8217;s wrong and the entire route automation stops. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So that&#8217;s good: here we have a good margin. The min time is 25 seconds, well above the 10 seconds limit, and the max time is 164 seconds, well below our max limit.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s all nice looking and smooth and almost boring, so let&#8217;s move on.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Passenger Route&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is the longest route. We&#8217;re crossing a good part of the mainline, also in a shuttle (back-and-worth). We&#8217;re starting from block B503b (the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/about.html#h.1a30ydkpyo99&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Stockton Station&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) up the way to B370 at the top of the mountain, then back down again.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We have 102 data points, however this time there&#8217;s a lot of variation, and a few surprises:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:421.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_dd079d764932e4eed30e1a0cc913c57badac2773e03d38b212bc1d101baf25c8i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Clearly, there&#8217;s a lot of variability in the duration it takes to cross each block. A few blocks have a variation of 20 seconds between their min and their max -- B360 and B340 have a fairly high standard deviation of almost 6 seconds in their return trip. I&#8217;m not sure how I&#8217;d explain that, because these are the blocks where the train is going down the mountain.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I highlighted some cells: some blocks have a minimum time of 10 seconds, or very close to it. B503a notably is really close or strictly equal to 10 seconds in this minimum. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/randall/2023-09-10_adjusting_the_conductor_2_program.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;This turned out to be a problem&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Remember how I said the logs here are filtered to only show successful runs? Well it turns out that for the last 2 days, the automation was stopping for that specific train. Investigation showed that the crossing time for B503a could be as low as 9.5 seconds, yet the block was programmed with a minimum crossing time of 10 seconds. Since the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;next&lt;/span&gt;&lt;span&gt;&amp;nbsp;block was activated too soon, the automation was stopping the train and entering error mode. The fix was to change the minimum time for this block -- I&#8217;ve set it to 5 seconds -- that seems safe, there&#8217;s no way the train can cross that block that fast. &amp;nbsp;I had also noticed that B504 was fairly close to 10 seconds and adjusted its minimum time accordingly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In case it&#8217;s not obvious, there&#8217;s a rationale behind that &#8220;minimum time to cross a block&#8221;: it&#8217;s designed to detect accidental block occupancy. Let&#8217;s say a train is running its route, and the next block suddenly appears occupied&#8230; I use electric-current based block detection, and the computer only knows that something is on the block, drawing electricity without really knowing what or why. If a train is running on block A and should logically move to block B next, and then that block B suddenly gets activated, that can only mean 2 things: either the train has successfully crossed from block A to B (that&#8217;s good), or &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;something else&lt;/span&gt;&lt;span&gt;&amp;nbsp;is suddenly occupying block B, and we should really stop as soon as possible. By default, I set the minimum time to 10 seconds, so if the next block gets activated before 10 seconds, that means either that something is now occupying the block (not good), or the train moved too fast (suspicious), or that my timing is not adequate enough. And here we have an example of the latter. My ballpark conservative figure of &#8220;at least 10 seconds on every block&#8221; was only &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;mostly&lt;/span&gt;&lt;span&gt;&amp;nbsp;right.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now, this data here shows me we have a similar potential problem on B340.2, so I should adjust its min time to something appropriate, after I physically measure the crossing time by manually running the engine at various (reasonable) speeds.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Branchline Route&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The branchline is yet another shuttle (back-and-worth). We&#8217;re starting from block B801 (aptly named &#8220;BL Parked&#8221;) up the way to B860 (a.k.a. &#8220;BL Reverse&#8221;) at the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/about.html#h.3cdwb8y0iemy&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;You Bet station&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, then back down again.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I have 190 data points:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:445.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_de1bd8ab1517e96bb85fe7056dd905f76dcc3d11939a5801c950aba1b46916c7i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Although there&#8217;s a bit of noise, this is a well behaved run, fairly consistent. The timings are well within the enforced ranges (10 seconds min, 120 seconds max), and the standard deviation looks fairly reasonable.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-09-11T00:00:56-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Route Statistics</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-08-23_conductor_2_route_statistics.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-08-23_conductor_2_route_statistics.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The latest fix for &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;using &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-08-12_conductor_2_fixing_an_unreli_29474b30.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;a virtual block for B504&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is now installed and has been working very well.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The latest change I did to Conductor 2 is to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/commit/4aa13c6b77f64d0e4e3b825e2393a476a8996130&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;compute end-of-route statistics&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Each time a route has finished, we log the time spent on each block as well as the error status of the route. This is sent to a little server over a basic JSON RPC, and in the statistics/status page we get a quick overview of the latest route -- how many times we ran that route during the day, when the last one finished, and how many seconds the train spent on each block:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:212.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_ef334aa120981895adfd8c2b575c6a0a68d4eb706460ad4ecdb9717020acc3cci.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This also keeps track of all the recovery attempts.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Having the time per block should help me fine-tune the automation script later. We can see the time spent on B321 for example, and directly relate that to the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-08-12_conductor_2_fixing_an_unreli_29474b30.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;observations made in the previous post&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Finally I also have the info in the server log, which is rotated daily, which means I could compute statistics later. I&#8217;m interested in getting the time spent on each block for long term analysis. Can we get trends out of it? How consistent are these running times? For example, could we detect erratic behavior, or do engines suffer some kind of loss of performance before they stop working? &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-08-23T00:00:25-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Fixing an Unreliable Mainline Run</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-08-12_conductor_2_fixing_an_unreli_29474b30.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-08-12_conductor_2_fixing_an_unreli_29474b30.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A few months ago, I changed the automation to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-05-21_conductor_2_now_the_default__3eef9fa3.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;use the new Conductor 2 scripting engine as the default&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. It worked very nicely for a while, and in the last few weeks the behavior had degraded: the mainline automation was ending up in error recovery almost every day. The passenger train would be running fine, yet would end up with the automation in error.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There&#8217;s an interesting side effect here: One of the points of &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is to have error recovery, being able to recover when things go wrong. Thus from an outsider&#8217;s point of view, the automation was &#8220;working&#8221; as in &#8220;doing something&#8221;, although from my point of view it was operating in a degraded running mode.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Eventually I had enough, reverted the automation computer to run the Conductor 1 script, while I investigated the issue to find the root cause.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First issue was figuring out what was not working, ending with the automated route in error recovery mode? I realized I simply did not have enough information in the logs to understand that after the fact. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That led me to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/commit/eaad12ed1b5cf4f852a34c306fd0f511bfd3e3d8&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;enhance my logging&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: log error cases, log the root cause of an error, and log how long each sensor is triggered. I updated the logging, let it run for a while, and then captured one typical error:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;14:56:20.416 D 8312 : Horn&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;14:56:21.117 D 8312 : -12&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;14:56:34.925 S S/NS771 B321 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;14:56:34.926 B S/NS773 B330 : TRAILING after 22.56 seconds&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;14:56:34.926 B S/NS771 B321 : OCCUPIED&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;14:56:35.696 S S/NS773 B330 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;14:58:15.785 S S/NS771 B321 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;14:58:35.012 R Sequence Mainline #3 Passenger (8312) : ERROR Sequence Mainline #3 Passenger (8312) current block {B321 [NS771]} suddenly became non-active after 120 seconds.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;14:58:35.012 R Sequence Mainline #3 Passenger (8312) : ERROR&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;14:58:35.012 R Sequence Mainline #3 Passenger (8312) : ERROR Sequence Mainline #3 Passenger (8312) current block {B321 [NS771]} still occupied after 120 seconds.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In this log, 8312 is the DCC address of the UP train we&#8217;re controlling. We start by activating the horn, run in reverse at speed 12, and we have a transition from block B330 to block B321. The actual route is B330 &#8594; B321 &#8594; B503a (the station). The log indicates we&#8217;ve been running on B330 for 22 seconds. Then something odd happens: the script engine complains B321 became &#8220;non-active&#8221; (aka non-occupied) after 2 minutes, yet it also complains the block is still occupied after 2 minutes. We can&#8217;t have both. One of these cannot be right!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Some background is needed here: Conductor 1 was &#8220;dumb and simple&#8221;. It just automated the running state, with little to no validation (essentially &#8220;running blind&#8221;). In Conductor 2, I keep track of where an engine is &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;supposed&lt;/span&gt;&lt;span&gt;&amp;nbsp;to be and compare that with actual sensors. I also have timing validation in Conductor 2: I define that a train must stay &#8220;at least N seconds&#8221; on a block, and &#8220;at most N seconds&#8221; on a block. My current default values are 10 seconds minimum, and 120 seconds maximum. The Randall blocks are fairly uneven in length, but generally we run 20-60 seconds on each so 2 minutes per block seemed like a good default. If a train takes longer to cross a block, there&#8217;s something odd going on.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So right there, B321 goes off 1 minute 40 seconds after it turns on. It&#8217;s close to the limit yet reasonably well under the 2 minute deadline.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So what&#8217;s going on?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Remember how in past posts I complained about &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-05-06_conductor_2_the_flaky_sensors_issue.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;how &#8220;flaky&#8221; the B321 block detector was&lt;/a&gt;&lt;/span&gt;&lt;span&gt;? I simply could not adjust the NCE BD20 to compensate properly so I ended up changing it for an Iowa Scaled BD1 that did the trick. But I also built &#8220;flaky sensor&#8221; support in the Conductor 2 engine: as long as we&#8217;re under our timeout value (2 minutes here), we accept that a sensor goes off and on and &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;ignore&lt;/span&gt;&lt;span&gt;&amp;nbsp;it. We only need one &#8220;on activation&#8221; signal to trigger the block occupation, then we guess the block is still occupied till the next one becomes active, or the timeout expires, whichever comes first. So that&#8217;s what is going on there: although the B321 sensor goes off after 1 minute 40 seconds, we assume the train is still on that block because the next one has not activated yet. And if after 2 minutes it has not actived, we end up in error mode. That&#8217;s what we&#8217;re seeing here and what the last error log &#8220;B321 still occupied after 120 seconds&#8221; means. At the same time, the flakiness handling code was accepting that B321 was off and was ok about it for up to 2 minutes, but once that time has expired, the flakiness handling code reports that B321 should not be off since we still think the train is on that block, and that&#8217;s what &#8220;B321 suddenly become non-active after 120 seconds&#8221; means.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So really the problem is that we have not moved on to the next block within the 2 minutes deadline.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To understand why, let&#8217;s look at &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;normal&lt;/span&gt;&lt;span&gt;&amp;nbsp;run, one with no errors, as reported when running now with Conductor 1:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;09:41:20.736 S S/b321 : ON&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;09:43:00.681 S S/b321 : OFF&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;09:43:20.664 S S/b503a : ON&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Interestingly, it takes just under 20 seconds to reach B503a, the next block in the sequence after B321. And more importantly, the time between B321 ON and B503a ON is 0.1 s under 120 seconds. In that case, Conductor 2 would accept the transition as being under the timeout. If the train were 0.1s slower, it would go into error mode.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So that&#8217;s why the Conductor 2 automation worked sometimes: we were so close to the limit. Any slow down in the engine by 0.1 seconds on that long run would cause it to go overboard.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What does &#8220;it takes 20 seconds to reach B503a from B321&#8221; mean?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Well, it turns out that B503a is not &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;really&lt;/span&gt;&lt;span&gt;&amp;nbsp;the next block after B321:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Script as programmed right now: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;B330 &#8594; B321 &#8594; B503a&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Reality of the track at Randall: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;B330 &#8594; B321 &#8594; B504 &#8594; B503a&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There&#8217;s a block in between, B504. I typically ignore it in the script because it does not have a block detection sensor &#8220;yet&#8221;. It&#8217;s been on my todo list since 2017 to add it. Real soon now&lt;/span&gt;&lt;span style=&quot;vertical-align:super&quot;&gt;tm&lt;/span&gt;&lt;span&gt;. After all we only spend 20 seconds on that block, do we &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;really&lt;/span&gt;&lt;span&gt;&amp;nbsp;care? Well&#8230;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Thus we have various solutions available:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The easy &#8220;cheat&#8221; one: extend the max-time-on-block timeout to be longer than 120 seconds. Even just 130 seconds would work (with about 10 seconds of margin). This is the lowest effort.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/commit/2010b3de013263000a61f27ff82837b5964b6733&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Create a virtual block for B504&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;between B321 and B503a. That would match the current reality. This is a small modest effort, and the most logical one. &#8656; That&#8217;s what I did.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Actually wire a block sensor for B504. That&#8217;s more involved, and can be a logical second step to move away from a virtual block. &#8656; Still on my todo list. Real soon now&lt;/span&gt;&lt;span style=&quot;vertical-align:super&quot;&gt;tm&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So what&#8217;s a &#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/blob/main/jmri/conductor/engine2k/src/main/kotlin/com/alfray/conductor/v2/script/dsl/IConductor.kt#L52&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;virtual block&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221; anyway? As the name implies, it&#8217;s a block in the automation script, except it&#8217;s not backed by a physical block detection sensor. It&#8217;s &#8220;virtual&#8221;. The scripting engine tracks its occupancy based on the track schematics and the previous and next block occupancy:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Given a track schema of B330 &#8594; B321 (real sensor) &#8594; B504 (virtual) &#8594; B503a (real sensor)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;If a train is on B321 and that block goes off, we &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;assume&lt;/span&gt;&lt;span&gt;&amp;nbsp;the train moved to the next block, namely B504, and we mark it occupied.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Once B503a becomes active, we know the train left B504, and we can mark it empty.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However there&#8217;s a trick here&#8230; This assumes the block sensors are &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;reliable&lt;/span&gt;&lt;span&gt;. If B321 were a flaky block sensor as it was before, then the scripting engine would trigger the &#8220;move to block B504&#8221; prematurely as soon as B321 becomes off due to flakiness. That&#8217;s the reason I never bothered with creating a virtual block here when I rewrote the script for Conductor 2 -- it would not have worked well.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;And to be clear, trying to wire a block sensor for B504 may not work. Due to its origin as a DC layout, power routing for some blocks is often done via the turnout&#8217;s power routing. That&#8217;s especially the case in lead in/out interchange tracks where they are powered via relays from whichever blocks they are connected to. E.g. throwing a turnout to enter a yard from the mainline will often cause the entire mainline block + the turnout + the interchange track to be powered together as a whole, thus totally breaking any block detection sensing. That&#8217;s a good behavior in DC but a poor one in DCC with block detection.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-08-12T00:00:44-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2 w/ Google Analytics 4</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-07-01_conductor_2_w_google_analytics_4.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-07-01_conductor_2_w_google_analytics_4.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One of the cornerstones of maintaining any automated process, especially daily automated running of little HO-sized trains on a public music model railroad, is to have dashboards to track the status of the automated processes and being able to see at a glance whether they are healthy.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For example this is part of a dashboard that I look multiple times a day:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:233.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_5be8931741fd913034b5cf00f732dca8381233bba85470ef5f165beceda220aci.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;My dashboards have a few moving parts:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;I use the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/ga4&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;GA Measurement Protocol&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to send custom pings using my own &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/blob/main/jmri/conductor/common/src/main/java/com/alflabs/conductor/util/Analytics.java&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Analytics.java&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;in &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor / RTAC&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://analytics.google.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Google Analytics&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;receives the &#8220;page views&#8221; and the events in a &#8220;web&#8221; property.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://lookerstudio.google.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Looker Studio&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is used to build the dashboard.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This used to be working very well and I have a lot of dashboards measuring various aspects of the automation, from train runnings, to error rates, including the video display rotation, or the motion detection in the room. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;m still in the process of updating the Looker Studio dashboards. Updating them to GA4 is not exactly a seamless process. For example in the screenshot above, the &#8220;day total&#8221; numbers on the right side should &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;be zeroes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One main issue I have is that since the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://support.google.com/analytics/answer/10089681&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Google Analytics Transition to GA4&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, the GA4 Looker Studio connector does not refresh hourly anymore. Data seems to only be available 12-hours in the past, even when I configure the GA4 connector to &#8220;hourly&#8221;. I also have a hard time figuring out the timestamp format to use -- by default only hourly dates work in the charts where a few of my charts are at the 15-minute granularity like this wifi status one below:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:230.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_e67d1e6541802a80b1ce2cd81eb6e79d4d63e3062bfe98e95493cde274671928i.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I was able to replicate that wifi-ping-every-15-minutes in the new GA4 + Looker Studio by sending the timestamp as a custom event property.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Luckily, most of my stats were just hourly, which works well with the new GA4 + Looker Studio -- except before they updated on the hour, whereas now I get them with a 12-hour delay:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:470.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_cf313ab1edb115a6faead80a2d73b02a4002e7b7c579aa15ba140a964aaa2e9bi.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-07-01T00:00:31-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">DaVinci Resolve Plugin for the Mobius Car Ride Videos</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-06-04_davinci_resolve_plugin_for_t_4126bb12.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-06-04_davinci_resolve_plugin_for_t_4126bb12.html</id>
<category term="video" label="Video"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I have &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-01-02_cab_ride_videos_with_the_mob_a8befb95.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;detailed in a previous post&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;how I create my &#8220;car/cab ride&#8221; videos: a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-01-01_mobius_maxi_4k.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Mobius Maxi 4K&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is placed on a flat car, and either pulled or pushed by the train using a custom &#8220;3D-printed rod&#8221; draw-bar connector:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:186.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_85fe3c03fcf8fc8af80bdee86af60db7c57e26170b6c4f3b184afae4826c678ai.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The only issue with this approach is the extremely visible rod on the camera, even after cropping a 1080p out of the 4K video. I&#8217;ve had many comments that it&#8217;s quite distracting; I fully agree; it&#8217;s been bugging me too:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;vertical-align:top;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;Could there be a way to go from this:&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;vertical-align:top;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;to that?&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;vertical-align:top;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:227.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:396.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_6965f0968cec7bf14b8771c571c7d5caf16877632460ca13166519359e78ba1bi.jpg&quot; style=&quot;height:248.00px;margin-left:0.00px;margin-top:-21.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;vertical-align:top;width:298.8pt&quot;&gt;&lt;p&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:226.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:397.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_cd90754fb6b86ca8b8d6a31f664df8fe92d5290f45ecc8a96d5b4ee9b50c87b5i.jpg&quot; style=&quot;height:248.04px;margin-left:0.00px;margin-top:-21.37px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;ve been thinking about that for a while. I can do better. There are a number of &#8220;object removal&#8221; techniques in NLEs these days, but none that I know to be available in &#8220;community&#8221; editions of these softwares, and I&#8217;ve not been impressed by the trial versions I&#8217;ve seen -- for example there are a number of workflows that start by &#8220;lasso/select the object to be removed in the frame&#8221;, and that&#8217;s already a no-starter as I&#8217;m not going to select that draw-bar in every single frame.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Instead it looks to me like an algorithm could &#8220;easily&#8221; find that bar in the image because it has some very distinguishable characteristics. For starters, it&#8217;s a rather uniform color which always contrasts with the rails or engine background. And then it&#8217;s mostly vertical (but not quite, especially in turns), and finally it always reaches to the bottom of the image.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;ve looked into a number of solutions on how to detect the draw-bar. My initial choice was OpenCV but I didn&#8217;t see a detector that would work for my case; the second choice was AI since that&#8217;s the killer buzzword these days, and I don&#8217;t see how I can reliably train a model to detect that.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However, good old school image analysis seems obvious here: if I can track at least one point that is on that gray rod, then a simple line-scanning algorithm can detect the left/right borders, followed by another simple flood-fill-like algorithm to follow that vertically. A few experiments also showed that if I work in HLS, the luma channel is all I need, and I can boost the contrast to the max to make the borders even more recognizable. In essence, I have a very dedicated boundary detection algorithm.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The next step is to do the &#8220;removal&#8221; part&#8230; It&#8217;s nice to detect the draw-bar, but what should it be replaced with? Here we can take a big shortcut: the background is &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;mostly&lt;/span&gt;&lt;span&gt;&amp;nbsp;the track, with rails on each side and &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;horizontal&lt;/span&gt;&lt;span&gt;&amp;nbsp;ties. See where I&#8217;m going here? If we can detect the space between the rails, we merely need to get the pixels on the left and right of the draw-bar and do a simple fill with some blending, horizontally, line by line. So that&#8217;s what I tried and the results were very promising from the start. Here&#8217;s an example of the track-filling algorithm showing how good that na&#239;ve simple method can get:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:441.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:797.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_d92f7902189ca86583d1af2643b5af2f74c5c27fde62eadf44b23ee2c3cbb8b8i.jpg&quot; style=&quot;height:489.00px;margin-left:0.00px;margin-top:-48.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;Can you spot where the draw-bar used to be?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As for the implementation and usage, I decided to go with &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.blackmagicdesign.com/products/davinciresolve&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;DaVinci Resolve&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;since it&#8217;s my current de-facto NLE. Turns out that DaVinci Resolve integrates &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.steakunderwater.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Eyeon&#8217;s Fusion&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;since version 16, and that Fusion has an excellent plugin system called &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.steakunderwater.com/VFXPedia/96.0.243.189/index2efb.html?title=Eyeon:Script/Reference/Applications/Fuse&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Fuses&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;with a very easy to use &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://documents.blackmagicdesign.com/UserManuals/Fusion_Fuse_SDK.pdf?_v=1658361162000&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Fuse SDK&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Fuse scripts are written in &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://lua.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Lua&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, which one learns in seconds, and they run very fast with &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://luajit.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;LuaJIT&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The result is a fairly simple DaVinci &#8220;Fuse&#8221; script that I wrote and refined over two weeks:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/alf-labs/lightworks/blob/main/fusion/fuses/RalfCamCarRodRemoval.fuse&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/alf-labs/lightworks/blob/main/fusion/fuses/RalfCamCarRodRemoval.fuse&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Performance is actually better than I expected. Since I&#8217;ve never used Lua nor the Fuse SDK before, I&#8217;m sure there are things that could be improved.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To use this, I first set a &#8220;Tracker&#8221; in Fusion to track the top part of the rod draw-bar. That defines an origin point in the rod that moves with it in the video, then my algorithm detects the rod and replaces it. There are a few parameters I can tweak.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The result is pretty good, keeping in mind I started this project a couple weeks ago.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are a few limitations:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;One is turnouts&#8230; obviously turnouts have at least one rail crossing the track so that makes a somewhat odd effect, but it&#8217;s acceptable.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The other thing that I did not think of is&#8230; tunnels. Turns out it&#8217;s really hard to detect an object when it becomes black on top of black, who knew! That just needs to be solved by carefully editing these sections out.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;Finally there&#8217;s the part where the rod draw-bar connects to the engine. I&#8217;ve tried removing it but that creates unsightly artifacts, so for now I&#8217;m keeping it. I&#8217;ll figure that one out in version 2.0 of the plugin&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Another week of work, and after some more research and trial-and-error, I managed to remove the draw-bar coupler from the video using a combination of DaVinci Fusion &#8220;Clone Paint&#8221; tool and a Color Node with an image tracker.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s a new render from one of my older videos, applying the new effect plugin. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;New version:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/LjKOmGvScYE&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Old version:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/cCgmxwlEHYE&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-06-04T00:00:01-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Now the Default on the Automation Computer!</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-05-21_conductor_2_now_the_default__3eef9fa3.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-05-21_conductor_2_now_the_default__3eef9fa3.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I tested &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;with script 53 while the rest of the team was cleaning the layout and it worked reliably.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Thus I enabled it as the default for the automation computer.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Basic recovery was also tested and worked in the &#8220;ideal&#8221; conditions.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Known cases where recovery will not work:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Branchline on virtual block B830.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;PA/FR on flaky block B321 not registering the train stopped.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Any train stopped across two blocks and activating both blocks.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The plan for B830 is to convert it to a real block sensor.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The plan for B321 is to change the sensor to another type than the BD20 with hopefully better sensitivity -- I&#8217;m especially interested in trying the new &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.iascaled.com/store/CKT-BD1&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ATOM DCC Block Detector (CKT-BD1)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;from Iowa Scaled Engineering. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Dealing with the train stopped and activated two blocks will need more work, either on the Conductor engine side or on the script side. I need to think more about how I want to handle that one. One option is for the recovery script to be able to mark 2 consecutively occupied blocks as &#8220;occupied + trailing&#8221; since that&#8217;s really the state they are supposed to be in. Then the normal engine behavior will take care of it properly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-05-21T00:00:41-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Crossing Block Boundaries</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-05-10_conductor_2_crossing_block_boundaries.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-05-10_conductor_2_crossing_block_boundaries.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now I understand the issue that was affecting the automated freight train; it&apos;s quite interesting and worth elaborating.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First, as a recap, the freight route is a shuttle composed of 2 blocks. The train starts on say block A, travels to the consecutive block B, stops, and reverses to block A. The sequence is very simple:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span&gt;Step / State Block A&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;State Block B&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Description&lt;br&gt;1- &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ A &lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;occupied &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;] &amp;nbsp; [ B inactive &lt;/span&gt;&lt;span style=&quot;background-color:rgb(255, 242, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; empty &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;]&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Start from A&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;2- &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ A inactive &lt;/span&gt;&lt;span style=&quot;background-color:rgb(252, 229, 205);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;trailing &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;] &amp;nbsp; [ B &lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;occupied &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;]&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Crosses from A to B&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;2- &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ A inactive &lt;/span&gt;&lt;span style=&quot;background-color:rgb(252, 229, 205);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;trailing &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;] &amp;nbsp; [ B &lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;occupied &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;]&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Stops &amp;amp; Reverses&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;3- &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ A &lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;occupied &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;] &amp;nbsp; [ B inactive &lt;/span&gt;&lt;span style=&quot;background-color:rgb(252, 229, 205);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;trailing &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;]&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Crosses from B to A&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;4- &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ A &lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;occupied &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;] &amp;nbsp; [ B inactive &lt;/span&gt;&lt;span style=&quot;background-color:rgb(255, 242, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; empty &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;]&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Stops back on A and resets&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note how although we have 5 logical steps, there are only 4 different steps from the sensor/block occupancy point of view -- there is no difference whether the engine is running on block B or stopped and waiting till it reverses.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As the train moves forward from A towards B, at some point it crosses the boundary: block A&#8217;s sensor changes from &#8220;active&#8221; to &#8220;inactive&#8221;, and the logical occupancy status changes from &#8220;occupied&#8221; to &#8220;trailing&#8221; -- a trailing block is the last one the train occupied before the currently occupied block. Since this route has 2 blocks, they alternate between trailing &amp;amp; occupied because as the train is running the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;other&lt;/span&gt;&lt;span&gt;&amp;nbsp;block is always the &#8220;last block used&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now we need to look more closely at the train crossing the boundary between blocks A to B. We need to remember that these types of block detectors sense current. In this case they sense the engine and that&apos;s it. The following cars are not detected.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First the engine bridges blocks A and B, making them briefly look both occupied -- the front and rear wheels are electrically connected so they temporarily bridge rails from both blocks A and B, thus triggering both sensors as the train crosses the boundary.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Once the engine is fully on block B, block A should be detected as empty -- it changes state from occupied to trailing.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;But as each car crosses the trail junction, the metal wheels briefly touch both rails and thus also briefly connect blocks A and B, making block A &quot;blink&quot; on and off quickly on the sensor.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now that scenario is already handled, that&#8217;s exactly why the &#8220;last occupied&#8221; block is marked as trailing: we know that the sensor can go on/off quickly on a trailing block, and we can ignore that in the Conductor logic.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now let&#8217;s add &#8220;flaky sensors&#8221; to this mix. These sensors detect current and have a limited sensitivity range. If an engine does not use enough current, the sensor may not detect the train at all, or it could be borderline. In a borderline case, the sensor detects the running train on and off as we oscillate around the sensor&#8217;s detection threshold.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So again, Conductor 2 already handles that: if a block is marked trailing &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;or&lt;/span&gt;&lt;span&gt;&amp;nbsp;occupied and its sensor &#8220;blinks&#8221;, we simply ignore it. That works great for the common case of a train traversing a series of blocks, say X &#8594; Y &#8594; Z. If we know the train occupied block Y and the sensor &#8220;blinks&#8221;, it&#8217;s fine: we can ignore it because we know the train must still be on block Y so it&#8217;s still the occupied block -- until the sensor trigger for block Z, in which case Z becomes the occupied block, and Y becomes the trailing one.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In my case, the sensor for block B has poor sensitivity and is flaky. And even though this is well handled in the case of a train going &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;through&lt;/span&gt;&lt;span&gt;, it fails very subtly for the reversing shuttle case. Let&#8217;s reexamine the steps from before, but let&#8217;s add a &#8220;flaky&#8221; sensor B that can become inactive &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;even when the train is running&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span&gt;Step / State Block A&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;State Block B&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Description&lt;br&gt;1- &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ A &lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;occupied &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;] &amp;nbsp; [ B inactive &lt;/span&gt;&lt;span style=&quot;background-color:rgb(255, 242, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; empty &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;]&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Start from A&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;2- &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ A inactive &lt;/span&gt;&lt;span style=&quot;background-color:rgb(252, 229, 205);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;trailing &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;] &amp;nbsp; [ B &lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;occupied &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;]&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Crosses from A to B&lt;br&gt;Sensor B is flaky with this engine, and sometimes fails to detect the engine (making block B seem inactive). At the same time, the train is crossing the boundary and the wheels can short block A and B, making A seem active. This looks like this from the view of the Conductor logic:&lt;br&gt;?- &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ A &lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;?? &amp;nbsp; &amp;nbsp; ] &amp;nbsp; [ B inactive &amp;nbsp; &amp;nbsp; ?? &amp;nbsp; &amp;nbsp; ]&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;What is this step?&lt;br&gt;&#8658; This doesn&#8217;t look like Step 2 anymore, it looks like step 3!&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;2- &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;[ A inactive &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;background-color:rgb(252, 229, 205);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;&amp;nbsp;trailing &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;&amp;nbsp;] &amp;nbsp; [ B &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;&amp;nbsp;active &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;&amp;nbsp;occupied &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;&amp;nbsp;]&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Stops &amp;amp; Reverses&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;3- &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ A &lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;occupied &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;] &amp;nbsp; [ B inactive &lt;/span&gt;&lt;span style=&quot;background-color:rgb(252, 229, 205);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;trailing &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;]&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Crosses from B to A&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;3- &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ A inactive &lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;occupied &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;] &amp;nbsp; [ B inactive &lt;/span&gt;&lt;span style=&quot;background-color:rgb(252, 229, 205);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;trailing &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;]&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Stops back on A&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;4- &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ A inactive &lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;occupied &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;] &amp;nbsp; [ B inactive &lt;/span&gt;&lt;span style=&quot;background-color:rgb(255, 242, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; empty &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;]&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Stops back on A and resets&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As indicated above, once a block becomes occupied, we stop ignoring its sensor -- it&#8217;s fine if it &#8220;blinks&#8221; and oscillates between active and inactive states. Thus the two steps 3 above are perfectly &#8220;valid&#8221; and the same state from the automation&#8217;s logic point of view.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The consequence is that as soon as the sensor B flakes while the train is barely reaching block B, the automation thinks the train is&#8230; back to block A (with a flaky sensor that is permanently inactive) and has finished its shuttle route! It then triggers the corresponding timers to perform whatever operation is needed to stop the train and end the route.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Then when the automation tries to restart, it enters error mode because it realizes the train is detected neither on block A nor B. It&#8217;s as if it had vanished, and thus this situation cannot be recovered from.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So how can we fix this?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;At first glance, an obvious issue is that the Conductor engine can instantly change from one state in the route sequence to the next one. But the physical train cannot be moving that fast. Thus a naive approach could be to add a timer: we know that a train crossing the block boundary must take at least N seconds to do so, so let&#8217;s come up with the time it takes to cross and ignore any sensor changes during that period. Unfortunately, that time is impossible to guess. It depends on the train&#8217;s length and its speed. However, we don&#8217;t have to guess -- we could allow (or force) the script writer to set that value in the script. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Although it&#8217;s less than perfect, this idea has some merit, so let&#8217;s add support for it:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;We&#8217;ll add support for an &#8220;enter block&#8221; time, with some kind of default (say 10 seconds).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Let the script override that at the route level, and at the node level (per block).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The &#8220;enter block time&#8221; is then used when a new block becomes occupied, and during that time we ignore changes to both the newly occupied and the newly trailing block sensors.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The other issue is that the whole point of Conductor 2 is to base the shuttle route management on the automatic trigger of blocks. And as pointed above, the current block state management is &#8220;instant&#8221;: as soon as the next block in the sequence is activated, we consider it must mean the train has reached it. If we go back to the example of a linear route such as X &#8594; Y &#8594; Z, as soon as Y becomes active after X, we assume the train is on Y. And as soon as Z becomes active after Y, we assume the train is on Z, even if that happened a few milliseconds after! &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Presented that way, one could immediately see that such a quick activation must be an error case. We currently have a timeout of the maximum time a train must spend on a block, but we don&#8217;t have a notion of a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;minimum&lt;/span&gt;&lt;span&gt;&amp;nbsp;time that the train must be on that block. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;And that&#8217;s where that suggestion of an &#8221;enter block&#8221; time start to makes sense: it can mean the minimum of time we expect to be on that block, and during that time any spurious activation of the next block must be an error for a linear route.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A sequence route currently has a &#8220;timeout&#8221; field in its script definition, and that&#8217;s the max time it can take to cross the block, so we&#8217;ll want to rename that field to avoid confusion. Instead we&#8217;ll have two fields:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;maxSecondsOnBlock: The maximum time spent moving on the block.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;minSecondsOnBlock: The minimum time once entered before we can reach the next block. It must cover &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;at least&lt;/span&gt;&lt;span&gt;&amp;nbsp;the time needed to initially fully enter the block.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;That will help clarify what the &#8220;timeout&#8221; means. We&#8217;ll also want to have a value for the route, and a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;possible&lt;/span&gt;&lt;span&gt;&amp;nbsp;override for each node. Our A/B shuttle could be rewritten this way:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;val Shuttle_Route = MyRoute.sequence {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; name = &quot;Shuttle&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; throttle = MyThrottle&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;minSecondsOnBlock = 10&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// default if not specified in a node&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;maxSecondsOnBlock = 120&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// 2 minutes per block max by default&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; val A_fwd = node(A) {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; onEnter { &#8230; }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; val B_fwd = node(B) {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;minSecondsOnBlock = 60 &amp;nbsp;// custom min time for this block/node&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; onEnter { &#8230; }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; val A_rev = node(A) {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;minSecondsOnBlock = 30&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; onEnter {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; after (40.seconds) then {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BL.stop()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } and_after (100.seconds) then {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// see below&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BL.sound(false)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; sequence = listOf(A_fwd, B_fwd, A_rev)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It may also &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;seem&lt;/span&gt;&lt;span&gt;&amp;nbsp;helpful to assert that any &#8220;after&#8221; rule used has a time that is less than the max time allocated on a block. We&#8217;re not currently doing that, for a good reason: in the example above, we have 2 timers when reaching back to block A which time (40+100 seconds) is greater than the maxSecondsOnBlock (120 seconds in that example). But the problem is that the max time is with the train &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;moving&lt;/span&gt;&lt;span&gt;&amp;nbsp;-- we reset the timer when the train stops. That allows a train to stop at a station and have that time not count against the max time spent on the block. Thus that example above is perfectly valid -- the train should have spent 40 seconds &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;moving&lt;/span&gt;&lt;span&gt;&amp;nbsp;on that block before stopping, well under 2 minutes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-05-10T00:00:15-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: The &#8220;Flaky&#8221; Sensors Issue</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-05-06_conductor_2_the_flaky_sensors_issue.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-05-06_conductor_2_the_flaky_sensors_issue.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;m still trying to deploy &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and it&#8217;s clearly not ready yet. I keep finding issues, some expected, some not.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The Freight automation has been an interesting source of such unexpected issues. It&#8217;s a simple reversing shuttle automation across two blocks, yet it has proven more challenging than the complex Passenger and Branchline automations -- these two actually perform quite well. Yet the &#8220;simpler&#8221; Freight one does not.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The most notable &#8220;bug&#8221; here is with the Freight automation: the engine starts on the first block, travels to the second block as expected&#8230;, and then instead of reversing the engine back to the beginning of the route, it decides the engine is back on the first block when it&#8217;s clearly still on the second block. At that point the automation panics because the engine is obviously not back at the starting point. The programming is entirely skipping half of the route automation, for no apparent reason. Why?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One of the issues which I was more or less expecting was dealing with the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/randall/2023-05-01_adjusting_the_mountain_bd20_sensors.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;&#8220;flaky&#8221; sensor on B321, as I explain in detail on that post on the other blog&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. There&#8217;s some of that here, but there&#8217;s also something else entirely going on that I have not figured out yet.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Even after a bit of adjusting, the mountain sensors are still flaky, notably B321 and B370 with the Passenger train. I adjusted B321 for the Freight train but the newer PA engine is still borderline.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Of importance, these sensors detect current consumption. In the case of the reversing train, the sensor turns off when the train is stopped.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I cannot adjust these sensors to make them more sensitive -- I&#8217;m already running them at the most sensitive setting. Essentially this points out a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;clear&lt;/span&gt;&lt;span&gt;&amp;nbsp;issue with &#8220;flaky&#8221; sensors handling -- I thought I had accounted for this in the design, and I was &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;partly&lt;/span&gt;&lt;span&gt;&amp;nbsp;wrong, or maybe my implementation is wrong, and I should understand why.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;From my old design notes, this was supposed to take care of this:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;span&gt;The currently occupied block has a timer. As long as the block is occupied, we &#8220;don&#8217;t care&#8221; if the sensor temporarily turns off, and we still consider the block occupied. We only care when the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;next&lt;/span&gt;&lt;span&gt;&amp;nbsp;block becomes active. In essence, the &#8220;occupied block&#8221; state is a deflaked nature of the &#8220;sensor active&#8221; state.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That design seems sound. The implementation is also apparently adequate:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The timer gets reset when the train stops. That&#8217;s because the timer uses the block timeout, which is the time to &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;traverse&lt;/span&gt;&lt;span&gt;&amp;nbsp;the block; thus the intent was for a reversing block to have &#8220;initial timeout going in + stop time + initial timeout going out&#8221;. But in fact we don&#8217;t &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;reset&lt;/span&gt;&lt;span&gt;&amp;nbsp;the time when the train stops, we actually &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;stop&lt;/span&gt;&lt;span&gt;&amp;nbsp;the timer.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This should make the timeoutExpired() method return always false -- the timeout can only be expired if the timer has been started, and we just stopped it.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Thus I don&#8217;t think it&#8217;s an issue of timeout expiring, and in fact I don&#8217;t remember seeing that in the logs.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;issue #1&lt;/span&gt;&lt;span&gt;: Why does the Freight automation route end when the train has not returned?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s worth noting that the implementation works for the &#8220;running blocks&#8221; like B321 and B340 when the train is merely going through the block. The issue for now was only observed with the Freight stopping at B321. I realize I have not observed it with the Passenger train on B370. The log captured last week made no sense, as they seemed to indicate that the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;next&lt;/span&gt;&lt;span&gt;&amp;nbsp;block B311 had auto-magically activated -- which of course cannot be since there was no train on it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Eventually I&#8217;ll get to the bottom of that. In between, let&#8217;s move on and identify the other issues.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Issue #2&lt;/span&gt;&lt;span&gt;: Recovery with a flaky sensor is flawed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That&#8217;s another interesting case noticed last week: the &#8220;flaky&#8221; sensors tend to be off when the train is stopped. That wreaks the current route recovery algorithms which are inherently based on detecting where the train is located to decide how to recover it. Worse, if we don&#8217;t recognize the Freight is stopped in B321, the initial algorithm was still trying to start the Passenger train and it would collide with it -- that has been orthogonally fixed by adding an interlock: PA can&#8217;t start if the FR is not at the home location.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The current recovery algorithm is inherently simplified anyway. For example, it does not handle a train stopped on a block boundary. If more than one block is active, the algorithm just gives up. This limitation is a delivery decision to get started with the easy cases.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So how can we recover a stopped train? &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One suggestion is to force any missing train to move, hoping that would trigger enough current usage to trip the sensor. Since the block activation state is cached, we can&#8217;t move and detect the train in the same engine cycle; thus we&#8217;ll need a timer, something like this:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;val recoveryTimer = timer(1.second)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;fun RecoverTrainsStart() {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; // Move a train if we don&#8217;t find an active block on its route&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; if (PA.blocks { active }.isEmpty) PA.reverse(1.speed)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; if (FR.blocks { active }.isEmpty) FR.reverse(1.speed)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; recoveryTimer.reset()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; recoveryTimer.start()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;on { recoveryTimer } then { RecoverTrainsPart2() }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;fun RecoverTrainsPart2() {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; // This is 1 second later. Blocks may have become active.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; PA.stop()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; FR.stop()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; // Detect active blocks for each train route again, and use that info.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Well, that may &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;almost&lt;/span&gt;&lt;span&gt;&amp;nbsp;work. It will likely fail though: let&#8217;s assume the FR train needs to be moving to be able to detect it on the block. This above moves it such that the second part of the recovery can find where it is. Then it stops it, and again the block sensor will fail to find the train. Then we move to the recovery route, which first checks that the initial block is properly active, and it won&#8217;t, thus it will fail again.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What we need is to &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;stop the train which we&#8217;re going to recover, something like this:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;on { recoveryTimer } then { RecoverTrainsPart2() }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;fun RecoverTrainsPart2() {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; // This is 1 second later. Blocks may have become active.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; // Detect active blocks for each train route again, and use that info.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; if (PA is ok but FR is not OK) {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; PA.stop()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; recover_fr()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; } else if (FR is ok but PA is not OK) {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; FR.stop()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; recover_pa()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; } else {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; log(&#8220;Nothing we can do, aborting.&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; PA.stop()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; FR.stop()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Issue #3&lt;/span&gt;&lt;span&gt;: &#8220;On&#8221; rules should not use a flaky sensor as an activation trigger.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I do note that if we have an on rule that checks whether a sensor becomes &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;active&lt;/span&gt;&lt;span&gt;, it will have problems dealing with these flaky sensors -- the rule will get executed every time the sensor flakes. We could compensate for this by rewriting these rules to use the block occupied state instead:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;on { B321.active &amp;nbsp; } then { action }&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# don&#8217;t write this&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;on { B321.occupied } then { action }&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# write this instead&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;Note that IBlock does not expose a boolean &#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;isOccupied&#8221; property&lt;/span&gt;&lt;span&gt;. It does now.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span&gt;Update: Or here&#8217;s another approach: each sensor should keep a log of say, the last 10 activations. Then we could have a command such as &#8220;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;sensor.activeWithin(2.second)&lt;/span&gt;&lt;span&gt;&#8221; or something like that. That would be a &#8220;soft&#8221; way of performing debouncing where needed at the script level. This can work both in an &#8220;on rule&#8221; and in a &#8220;if&#8221; in a whileOccupied check. When used in an &#8220;on rule&#8221;, it would automatically debounce that rule for the time given.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Actually that &#8220;soft&#8221; debouncing could also help solve the issue #2 above: to start a route, we enforce that the start block appears active and sensing a train. This totally fails on the flaky B321 block, and prevents successful recovery. However it would work if instead we could check whether the sensor had been active within a small amount of time.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-05-06T00:00:06-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: DSL Throttle onLight / onSound / onBell</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-04-24_conductor_2_dsl_throttle_onl_87348bbf.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-04-24_conductor_2_dsl_throttle_onl_87348bbf.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s the new syntax:&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; val T1 = throttle(1001) &lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; onLight { b -&amp;gt; throttle.f0( b) }&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; onSound { b -&amp;gt; throttle.f8(!b) }&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; onBell &amp;nbsp;{ throttle.f1(it) }&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;named &quot;Throttle1&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; on { S1 } then {&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; T1.light(true)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; T1.sound(true)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; T1.bell(true)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; T1.horn()&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note that it seems quite annoying to have to place the &#8220;named &#8216;Xyz&#8217;&#8221; after the function block, so this syntax is also allowed:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; val T1 = throttle(1001) {&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;name = &quot;Throttle1&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; onLight { b -&amp;gt; throttle.f0( b) }&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; onSound { b -&amp;gt; throttle.f8(!b) }&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; onBell &amp;nbsp;{ throttle.f1(it) }&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; on { S1 } then {&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; T1.light(true)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; T1.sound(true)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; T1.bell(true)&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; T1.horn()&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The current implementation for each method is to call the callback function if it exists, otherwise defer to the IJmriThrottle corresponding function. The JMRI provider has methods in Conductor.py which toggle the default DCC functions (F0, F1, and a mute F8 by default), but they also do so with repeats and delays -- something these callbacks above do not provide. So there&#8217;s a bit of a difference right there.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The other aspect is the simulator and the UI display. The new UI window can display status for light and sound for an engine&#8230; and it does so by checking the IThrottle&#8217;s internal light/sound status (rather than the actual IJmriThrottle state). Thus it &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;should&lt;/span&gt;&lt;span&gt;&amp;nbsp;be in sync with the new calls above. So in an amusing way, having these DSL methods does fix the display case.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-04-24T00:00:41-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Virtual Blocks Implementation</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-04-09_conductor_2_virtual_blocks_i_4b939f77.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-04-09_conductor_2_virtual_blocks_i_4b939f77.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s implement virtual blocks. These have been part of the original design and I now have a need for them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As a reminder, what is a virtual block and what is it good for?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s look at the Branchline. It&#8217;s is a simple straight chain of blocks as shown in yellow on this map:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:165.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:357.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_61b66d301f05ed6bc167a01a8d573ad0c63b00935ba4cb8ce7e817b793c9c9c1i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Because the track is curved and goes through tunnels, it looks complicated, yet it&#8217;s really a straight line:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;[ B801 parking ] &#8658; [ B820 station ] &#8658; [ B830 canyon ] &#8658; [ B850 tunnel ] &#8658; [ B860 reversing block ]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One thing not obvious on this map is that B830 has no track sensor associated with it. When I did the original sensor wiring back in 2017, I simply couldn&#8217;t identify the corresponding track feeders, and I suspect (or hope) there are actually two blocks in there because it&#8217;s a fairly long segment. That&#8217;s why I left a B840 in my naming scheme, for potential later usage.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;But now the concept behind the Conductor 2 automation is for the engine to track on which block the train is &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;supposed to be&lt;/span&gt;&lt;span&gt;, and match that with the reality of the track sensors. That&#8217;s a problem in this case since after moving out of block B820 we have no idea&#8230; the track appears empty, and that&#8217;s a definite error condition. How do we solve that in the script?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In this case, B830 is going to be a &#8220;virtual block&#8221;: we can add it to our block graph. Since the track is purely linear, we &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;know&lt;/span&gt;&lt;span&gt;&amp;nbsp;that an engine coming out of B820 &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;must&lt;/span&gt;&lt;span&gt;&amp;nbsp;be on B830. As soon as we see an activation on B850, we know the engine has reached the other side of that virtual block and all is fine. The only thing we can do is use a timeout -- if the engine hasn&#8217;t reached the other side in N seconds, then we know there&#8217;s a problem.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the DSL, we currently have:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;val B310 = block(&quot;NS768&quot;) named &quot;B310&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&#8230; and everything in the DSL is an &#8220;IBlock&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The current IBlock requires a &#8220;systemName&#8221; property, so it&#8217;s very JMRI-centric. Which is not a real problem since Conductor is naturally JMRI-centric.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However a lot of places, especially the junction with the simulator, expect a block to have a unique system name. This is how the main engine exchanges block data with the simulator whilst trying hard to avoid &#8220;leaking&#8221; objects. System names are unique, and are consequently an adequate way to uniquely identify a block.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Thus a natural way to implement virtual blocks would be to use IBlock as-is and define a system name. It should be unique and not used by any other block. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s worth remembering that a block has 2 different names:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A block has a &#8220;default name&#8221;, which is its &#8220;JMRI system name&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;block.systemName or block.defaultName returns that.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A block is also a &#8220;named variable&#8221;, which has a more user-friendly name.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;block.name returns the &#8220;named&#8221; name, and if not set returns the &#8220;default name&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So the real question is whether the virtual block&#8217;s &#8220;system name&#8221; is going to be synthetic (e.g. auto-generated, for example &#8220;virtual01&#8221;, &#8220;virtual02&#8221;, etc.) or selected by the user:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;val B350 = virtualBlock() named &quot;B350&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;val B350 = virtualBlock(&quot;vb350&quot;) named &quot;B350&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the current script, once we have blocks defined, we always use the variables, not the string names. The variable names are used only for display. The system names are used for keying and exporting.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Deliberation:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;We support only this syntax:&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;val B350 = virtualBlock(&quot;vb350&quot;) named &quot;B350&quot;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This allows us to create maps with deterministic system names. I can also define virtual blocks that this way become later regular blocks.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;We will not merge the variable name into the system name.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The initial design called for the script to programmatically activate and deactivate the virtual block. E.g. literally a script would have looked like this:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;B820 has become inactive &#8594; train must have moved on &#8594; set virtual B830 to active.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;B850 has become active &#8594; train must have moved on &#8594; set virtual B830 to inactive.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I tried that and it quickly proved to be problematic: There is a bit of a conundrum on &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;when&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;how&lt;/span&gt;&lt;span&gt;&amp;nbsp;a virtual block would be activated. The problem is that this is going to be different behavior when under simulation or real JMRI.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Simulation: the route manager &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;simulator&lt;/span&gt;&lt;span&gt;&amp;nbsp;automatically triggers the next block after a timeout to simulate engine movement.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;That naturally activates the virtual block. After another timeout simulating engine movement in the virtual block, the next real block gets activated automatically by the simulator.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;In the script, that block deactivates the virtual block.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Real JMRI: there&#8217;s currently nothing to activate the virtual block.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The script needs to check, while the block is occupied, that the block sensor is indeed active. When it becomes inactive, we can expect the train to have moved and programmatically activate the virtual block.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;But this basically has the script do more or less what the route sequence manager could be doing. Thus the route sequence manager should be the one activating the virtual block when the occupied block becomes inactive.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are two obvious red flags here. Once again the simulation is drastically different from the real behavior. We cannot define a mechanism based on &#8220;it works properly under simulation but not with the real sensor&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The other red flag was that the virtual block design relied on the script driving the activation of the block. Instead we should strive for the route sequence manager to take care of it, and do it the same way under simulation or not:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Route manager detecting the current block is no longer activated:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Right now it expects one of the outgoing blocks to become active.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Change: If no outgoing blocks are active yet there&#8217;s &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;only one&lt;/span&gt;&lt;span&gt;&amp;nbsp;and it&#8217;s a virtual block, activate that.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Potential issue: More than one virtual block &#8658; should not be possible. Cannot choose. It&#8217;s an error. Prevented by enforcing there&#8217;s only one outgoing block.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Potential issue: Delay in next block activating. Now two blocks are active (the virtual block + the real block). It&#8217;s an error. Prevented by enforcing there&#8217;s only one outgoing block.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Route manager detecting the next (outgoing) block is activated:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;When marking the current block as trailing, if it&#8217;s a virtual block then also deactivate the underlying sensor.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Potential issue: none foreseen.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So that&#8217;s the way to go. Let the route manager do what it is supposed to: manage the route. The script shouldn&#8217;t have to do what will only turn into boilerplate code.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-04-09T00:00:40-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Maps</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-04-05_conductor_2_maps.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-04-05_conductor_2_maps.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Right now we load a single map via the Conductor script. That SVG map is displayed on the remote tablet and also on the automation computer&#8217;s main screen.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I want to change this to have different maps displayed in the Conductor Ui2 on the larger screen versus on the tablet&#8217;s remote status display. The original map data exchange format over KV Server was designed to allow sending more than one map to the tablet. The original design for RTAC was to have a list of map fragments in the tablet&#8217;s horizontal pager. Then users could just swipe to show different maps, each one highlighting one part of the layout. The initial implementation took the shortcut of displaying just one map. Same goes for the Conductor Ui.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I have no immediate desire to support multiple maps, so I&#8217;m going to continue ignoring that part of the original design. For now a single map on each device is good enough. What we could use though is different maps per &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;type&lt;/span&gt;&lt;span&gt;&amp;nbsp;of device. This can be accomplished by adding a &#8220;target type&#8221; or similar field to the map info used to load the maps. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s a potential specification:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Conductor 2 DSL:&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;SvgMap {&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp; &amp;nbsp; val name: String&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp; &amp;nbsp; val svg: String&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;val displayOn: SvgMapTarget&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;background-color:rgb(217, 234, 211);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;SvgMapTarget enum { Conductor, RTAC }&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A map with a &#8220;Conductor&#8221; target displays only in the conductor software. These are simply not exported via the KV Server.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A map with an &#8220;RTAC&#8221; target displays only in the RTAC tablet software. These are exported via the KV Server.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Since the field is a basic enum, only one type is supported (i.e. this is not a bitfield). If a specific map is to be used for both kinds, we still need two entries. The map names need not be unique (they are actually purely informational and never used as keys).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Additionally we should have checks ensuring that only one such map can be declared per type when loading the script.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For now I do not plan to change the map format. That means the remote tablet maps still do not handle trailing blocks. That change, if done, is orthogonal and unrelated to this one. Showing trailing blocks on the map is just a debug tool for me, it&#8217;s not critical for operators to know the details of the engine. At the contrary, I need to keep it as simple as possible, so no trailing blocks are shown on the tablet.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-04-05T00:00:43-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Changing Blocks</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-04-03_conductor_2_changing_blocks.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-04-03_conductor_2_changing_blocks.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As noted above, during the first test running &#8220;live&#8221; with JMRI, all routes instantly became in error as soon as the engine moved and activated the next block for BL or PA. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is due to the simulator being too naive: it instantly changed from one block to the next one, in perfect sync. This made it &#8220;perfect&#8221; when I was debugging the engine. But unfortunately, that&#8217;s not how reality works: when an engine crosses a block boundary, both blocks become temporarily active since the engine bridges both blocks. And depending on the speed of the engine, this can be anywhere from a second to a handful of seconds.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s actually even a bit worse than that as even non-powered car wheels can bridge two blocks for a fraction of a second.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That&#8217;s not exactly news and in the design of Conductor 2 I had clearly specified we should account for two blocks to be active.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However, the sequence route manager implementation is also too idealistic: I was trying to compensate for this, but I only compensate for the next block to be active. The problem is that as soon as an engine starts crossing a block boundary, that next block does become active (which is handled), and thus becomes the new &#8220;current&#8221; block. That means now that the old trailing block is active, and that&#8217;s not supported. Duh. I didn&#8217;t see that one coming:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Train direction &#8594; &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;&#8220;occupied&#8221; represents where the engine thinks the train is located.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;&#8220;active&#8221; represents the actual track sensor&#8217; state. They should ideally match.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Step 1: &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ block 1 -- empty ] [&lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;block 2 -- occupied active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;] [ block 3 -- empty ] [ block 4 -- empty ]&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Train moves from block 2 to block 3, we temporarily have blocks 2+3 active:&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Step 2: &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ block 1 -- empty ] [&lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;block 2 -- occupied active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;] [&lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;block 3 -- active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;] [ block 4 -- empty ]&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Block 3 becoming active is expected. The engine knows the train is moving to block 3:&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Step 3: &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ block 1 -- empty ] [&lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;block 2 -- active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;] [&lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;block 3 -- occupied active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;] [ block 4 -- empty ]&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Error! We did not expect the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;previous&lt;/span&gt;&lt;span&gt;&amp;nbsp;block to be active too!&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s an easy solution: when we move an engine along the blocks&#8217; sequence, we mark the old block as &#8220;trailing&#8221;. There can be only one &#8220;trailing&#8221; block in a sequence -- it&#8217;s the one we come from. That&#8217;s also part of the Conductor 2 design, so we&apos;re going to use this property here.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If we wanted to be cautious, we could filter and only take trailing blocks whose nodes have an outgoing link to the current one -- this way we know these are blocks &#8220;we come from&#8221;. In practice, this is supposed to be guaranteed by the fact we have only one active block, and it&#8217;s the last one that was active before we changed blocks.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That means that in order to fix the issue, we just need to allow:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The &#8220;next block in the sequence&#8221; to be active.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The &#8220;trailing block&#8221; (aka the last one we came from) to be active.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now our state machine looks like this:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Train direction &#8594; &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;&#8220;occupied&#8221; represents where the engine thinks the train is located.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;&#8220;trailing&#8221; represents where the engine knows the train &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;was&lt;/span&gt;&lt;span&gt;&amp;nbsp;before.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;&#8220;active&#8221; represents the actual track sensor&#8217; state. They should ideally match.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Step 1: &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ block 1 -- empty ] [&lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;block 2 -- occupied active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;] [ block 3 -- empty ] [ block 4 -- empty ]&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Train moves from block 2 to block 3, we temporarily have blocks 2+3 active:&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Step 2: &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ block 1 -- empty ] [&lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;block 2 -- occupied active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;] [&lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;block 3 -- active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;] [ block 4 -- empty ]&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Block 3 becoming active is expected. The engine knows the train is moving to block 3:&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Step 3: &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ block 1 -- empty ] [&lt;/span&gt;&lt;span style=&quot;background-color:rgb(252, 229, 205);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;block 2 -- trialing active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;] [&lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;block 3 -- occupied active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;] [ block 4 -- empty ]&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;This state is accepted: the trailing block can be temporarily active while the train fully moves to block 3:&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Step 3: &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;[ block 1 -- empty ] [&lt;/span&gt;&lt;span style=&quot;background-color:rgb(252, 229, 205);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;block 2 -- trialing &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;] [&lt;/span&gt;&lt;span style=&quot;background-color:rgb(244, 204, 204);font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;block 3 -- occupied active &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt&quot;&gt;] [ block 4 -- empty ]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This requires updating the map to display the trailing blocks, as that&#8217;s useful debug information for me to have.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Update: later I will discover I forgot about reversing blocks. A reversing block is interesting because the &#8220;previous&#8221; trailing block (where we come from) is &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;also&lt;/span&gt;&lt;span&gt;&amp;nbsp;the next outgoing block.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-04-03T00:00:36-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Live Test Deployment</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-04-02_conductor_2_live_test_deployment.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-04-02_conductor_2_live_test_deployment.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;m now proceeding with the first tests of the new &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&#8220;live&#8221; at the museum using JMRI and the actual trains, and the first two tests have been&#8230; interesting. In the pure line of &#8220;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;no plan survives first contact with the enemy&lt;/span&gt;&lt;span&gt;&#8221;, both tests were highly &#8220;educational&#8221; and produced a list of issues to address.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Since I&#8217;m doing quotes, let&#8217;s also quote Eisenhower&#8217;s &#8220;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;plans are worthless, but planning is everything&lt;/span&gt;&lt;span&gt;&#8221;. The planning I did recently to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-03-12_conductor_2_test-only_deployment.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;prepare for the deployment&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;really paid off and I was able to &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;run&lt;/span&gt;&lt;span&gt;&amp;nbsp;the tests easily -- that is I can trivially change accounts on the automation computer and switch between the stable current Conductor 1 setup and the experimental Conductor 2 setup. Then when the computer boots every morning, I&#8217;m guaranteed it will safely run the stable version automatically. That&#8217;s where that bit of planning paid off.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A bunch of unexpected things happened during the experimental Conductor 2 tests, and I collected enough data to know &amp;nbsp;what to do next. I would have been highly suspicious if the new automation engine had worked perfectly out of the box. It didn&#8217;t, and more importantly I got some valuable data to work on it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Ironically a big part of Conductor 2 is to have a simulator so that I can try the routes when I develop the automation code without having to actually run the trains. But the simulator is not perfect, or actually it is &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;too&lt;/span&gt;&lt;span&gt;&amp;nbsp;perfect. It is idealized, and does not account for a few idiosyncrasies from the real life behavior of the sensors.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So let&#8217;s look at what I discovered:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The UI part is in pretty good shape overall. The new Swing window displays the SVG map and the live block status. Not only that it also gives me the &#8220;virtually occupied&#8221; blocks, something the previous version was unable to do. It did need a few tweaks which I&#8217;ve done already:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Add a &#8220;kiosk&#8221; mode to maximize the window and place it on top of all other windows.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Update the UI depending on whether we&#8217;re in simulation mode or live with JMRI. In the latter case, the &#8220;quit&#8221; button should not quit the app, it merely hides the window.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Ability to toggle sensor states is currently restricted to simulation mode only. It should also be allowed in the live JMRI mode, at least when the window is not in kiosk mode.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The every-second speed override should not be running when the automation is off. It makes it impossible to reset the trains.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The Google Analytics reporting, the JSON state reporting, and the KV Server all worked without issues.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The tablet does not display the SVG map it receives from the server (works when tried at home though).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The tablet does not display routes&#8217; state when they are in error since that&#8217;s a new feature not coded on the tablet yet.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The tablet reset action did only reset one of the two routes.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;In the very first try, trains would stop immediately after transitioning out of their parking block. I quickly identified that to be due to the fact that, as soon as they would cross the block boundary, two blocks would be occupied and that was flagged as an error. The route sequence manager was updated to allow this case.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;That&#8217;s one case where the simulator was too perfect: it used to always &#8220;neatly&#8221; transition trains instantly from one block to the next one. But in reality, a train crossing a block boundary means that the two blocks are going to be activated simultaneously for anywhere from 1 to 5 seconds (depending on speed). I updated the simulator accordingly.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;In the second try, trains actually ran a bit after I updated the route sequence manager to account for two consecutive blocks to be activated temporarily. But then sometimes there&#8217;s a small unmonitored track section between two monitored blocks, and that is now flagged as the train having vanished. So that&#8217;s what I need to handle next.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;In the second try, the passenger train made it all the way up to Summit where it should have stopped and then reversed. Instead it reversed too early, and that confused the route sequence as the train entered the previous block when it was expected to stop.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Something seems off in the timing. It&#8217;s as if all the N-seconds delays happen too fast.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There were a few quirks in the script:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The passenger train did not start with sound. Sound was only turned on when it reversed.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;I have not implemented the &#8220;5pm automation shutoff&#8221; feature yet.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The next feature to handle are the &#8220;dead spots&#8221; where a train can vanish between two not-so-consecutive blocks, and the early reversal of the passenger train at Summit. I plan to address the first issue using the system of &#8220;virtual blocks&#8221; which I had discussed before. Once I fix these two edge cases, I will have the trains working with their &#8220;default&#8221; route as before.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The current script does not exercise the new &#8220;automatic recovery&#8221; potential of Conductor 2. I coded that in the script yet I disabled it for the initial try to be able to focus on one feature at a time. That&#8217;s the part I&#8217;ll tackle next. After that I&#8217;ll deal with updating the tablet display.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-04-02T00:00:50-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2 DSL: ActiveRoute</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-03-31_conductor_2_dsl_activeroute.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-03-31_conductor_2_dsl_activeroute.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One thing I still don&#8217;t like in the Conductor 2 DSL is the name of the &#8220;ActiveRoute&#8221; object.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s misleading and confusing.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As a reminder, in the current DSL:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An &#8220;active route&#8221; is a list of routes, of which only one is active at a single time.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A route is a sequence of nodes, each node corresponding to one block in a given direction.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s fairly misleading as one may think that an &#8220;active route&#8221; is one route that has become active, when it is actually a container of routes combined with a switch selector.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Possible name alternatives:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Routes&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;RoutesGroup&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;RoutesList&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;RoutesCollection&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;RoutesContainer&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;RoutesSelector&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What all these names have in common is that we first pluralize &#8220;routes&#8221; to make it clear this is a container of one or more routes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Routes &#8220;selector&#8221; is misleading as the object is a mere passive container, whereas a &#8220;selector&#8221; is performing an action.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Routes Container, List or Group seem redundant with just &#8220;Routes&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However the problem with naming this just &#8220;Routes&#8221; is that it again creates confusion -- are we talking about the container object, or a different list of these route objects?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For that, we&#8217;ll take a hint from the Gradle DSL: &#8220;The DSL routes{} keyword creates a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;RoutesContainer&lt;/span&gt;&lt;span&gt;. A &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;RoutesContainer&lt;/span&gt;&lt;span&gt;&amp;nbsp;contains one or more routes, of which only one is active at the same time.&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-03-31T00:00:05-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Buildings&#8217; LED Lighting</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-03-25_buildings_led_lighting.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-03-25_buildings_led_lighting.html</id>
<category term="train" label="Train"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Orion, Allen, and I had a discussion on how to refresh the buildings&#8217; lighting on the layout.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For the record, the current lighting uses the traditional 12V light bulb system, controlled by a central massive power supply under the main yard, with rows of toggle switches mostly unused. Wiring is the usual mess (a.k.a. both neat yet over-complicated and hard to trace). We don&#8217;t know which buildings are equipped with lights, nor which light bulbs are either not working or not connected.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;ve made an attempt identify the power supply and what few buildings are &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;visibly&lt;/span&gt;&lt;span&gt;&amp;nbsp;lighted here:&lt;br&gt; &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/about.html#h.p043jf65vl34&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.alfray.com/trains/randall/about.html#h.p043jf65vl34&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One thought is that next time we dust the city, we should inventory which buildings are equipped with wires, and map existing through-holes in the support boards.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;But going forward, how should we improve the lighting?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We could simply try to replace dead 12V light bulbs or add new ones.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Instead I&#8217;d suggest we go LED directly. For the Cracker-Jack sign, I tried to add a custom made LED, and it didn&#8217;t illuminate the building interior as I was hoping. My 5-mm style LED was just too directional for that.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;And anyway, my philosophy with a place like Randall is to go with off-the-shelf commercial offerings. The goal is that long term maintenance should be as easy as picking up more of the same off-the-shelf commercial components and swap them or add new ones. The alternative is a custom DIY system, and these are harder to maintain when the original author is not around.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A good example of the issue with DIY systems is that 2-fire alarm building on fire on the layout. It&#8217;s been rock solid for so many years and that&#8217;s good because we have zero documentation on that thing. I have no idea how it was designed (Arduino maybe, or something more esoteric), access to the building is really hard, and I&#8217;m not going to touch it to figure anything out as long as it works. The day it stops working, it will be easier to just rebuild the electronics from scratch than figure how it was put together.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Thus although we could go the DIY route to add building LEDs, I suggest we use proper commercial components for that, especially now that there are some good choices on the market.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;My proposal is to refresh the lighting by using the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://woodlandscenics.woodlandscenics.com/show/category/JustPlugLightingSystem&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Woodland Scenics Just Plug Lighting System&lt;/a&gt;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:241.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:605.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_5c7442dd493f4efb8d08386858f2ebcd37c0599548abd7bcd0e2709806cef5cci.jpg&quot; style=&quot;height:260.00px;margin-left:-9.00px;margin-top:-10.00px;width:624.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Pros of this System&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I do like the philosophy of their system, and Woodland Scenics has just the right long-term reputation I need for that task. I also figure their system&#8217;s internals are likely very simple and potentially &#8220;hackable&#8221; if we need something custom, but we don&#8217;t need to go there.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;d start exactly as they depict above -- with a starter kit and their little brick power supply. Once we&#8217;ve evaluated the starter kit, we would expand later if we were satisfied with it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It also has the advantage of being able to spread the effort over time.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The specs of their little box is:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Each &#8220;light hub&#8221; has 4 output ports.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Each port can be either one LED or one &#8220;port sharing device&#8221; powering 4 LEDs.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Thus each hub can power up to 16 LEDs.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Each hub port is listed as being able to deliver 30 mA max, with its own dimmer.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Power can be up to 20V AC or 24V DC. &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Under the layout, we have a 24V DC bus for the DCC relays, and a generic 12V AC bus for accessories. We would probably tap in the latter. The current building lights power supply delivers a nominal 15V DC, except it crumbles down to 9V DC under current load. If we remove the current suspicious load, we could use it as central power combined with the existing light switches.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Cons of this System&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The main negative aspect of the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://woodlandscenics.woodlandscenics.com/show/category/JPLSBuildings&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Woodland Scenics Just Plug Lighting System&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is the cost of some of the components.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The prices are cheaper when looking at a reseller like &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.modeltrainstuff.com/trains-layout/lighting/#/filter:brand:Woodland$2520Scenics&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ModelTrainStuff&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, but for cost analysis we&#8217;ll look at MSRP.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &#8220;Light Hub&#8221; retails for $18, and can power anywhere from 4 LED directly up to 16 LEDs with the $10 &#8220;Port Sharing Device&#8221;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Hub with 4 LEDs = $18/4 = $4.50 per output.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Hub with 4 Port Sharing Devices with 16 LEDs = ($18+4x$10)/16 = $3.63 per output.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note that the above shows &#8220;price per output&#8221;, not per LED nor per port. More on this below.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &#8220;power brick&#8221; is a basic 24V DC power supply delivering 1 Amp max. At $25 the brick, it&#8217;s a bit on the high side. The hub specs indicate 30 mA per port, which means in theory one brick is good for ~30 ports, which explains why it makes sense to use the &#8220;Expansion Hub&#8221; ($17) to power multiple hubs with one power supply brick.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In any case, the power supply brick is one place where one can instantly save by omitting it as it&#8217;s not a necessary component -- any existing 12V-24V DC auxiliary power bus will do, with the proper cable adapter. The power supply brick is a mere convenience, and it&apos;s a one-ticket item, thus somewhat justifying its price.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now we get to the important part, the LEDs. The starter kit only comes with 2 LEDs, for a 4-port device, which is a bit odd. So upfront we&#8217;ll need more LEDs. These are sold in pairs, and at $9 the pair seems like something quite expensive for a simple LED, a tiny cable, and a JST modular connector. The whole thing assembled can&#8217;t cost more than a quarter dollar in parts per thousand, so again we&#8217;re paying for convenience here (and by that I mean everything from design, to production, to marketing, up to distribution, and every entity adding their own profit margin).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So that&#8217;s the part where one could save by going DIY -- buy a bag of similar JST modular connectors, buy a bag of LEDs, and solder and wire the things yourself. That is trading upfront costs for skills, time, and inconvenience. That&#8217;s why I had this discussion above comparing off-the-shelf vs DIY. I&#8217;m planning 10-years ahead -- what happens when one LED fails in 10 years from now and &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;someone else&lt;/span&gt;&lt;span&gt;&amp;nbsp;is dealing with the maintenance? (That&#8217;s basically &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;my&lt;/span&gt;&lt;span&gt;&amp;nbsp;problem right now!) I could leave a note today telling that person &#8220;get part JP5742 from Woodland Scenics, plug it here, and you&#8217;re done&#8221;, or I can leave them in the dark (literally), expect them to collect the DIY parts (which ones?), and hope they have basic knowledge to do some soldering, and reinstall the new LED in place. So that&#8217;s what I mean by the cost of convenience. We&#8217;ll buy these 2 LEDs for $9 now, and heck we&#8217;ll even buy a couple spares such that my counterpart in 10 years can find them and have a model to look at without crawling under the layout first. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So now, we can recompute the cost of the system by mixing the &#8220;per-port&#8221; cost of the hubs with the per-LED costs:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Hub with 4 LEDs = $18 hub + 4 LEDs for 2x$9 = $9 per LED installed.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Hub with 4 Port Sharing Devices with 16 LEDs = ($18 hub + 4x$10 + 8x$9 leds)/16 = $8.125 per LED installed.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So that&apos;s what I was saying: not cheap! And to be clear, I&apos;m fine with that as long as the product justifies the cost (all reviews I have seen so far seem to agree on that part).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Possible Implementation / Installation&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To tackle a project like this, it&#8217;s nice to start with the end-goal and then split it into milestones. I envision something along the lines of:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Main focus is lighting buildings in the Stockton town, starting wit the main station.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Secondary focus is the central part of the Fairfield Industrial town.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The main station building could easily use 2 or 3 LEDs.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Most buildings would probably only use a single LED, some may need one per floor/room for variety.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Thus one light hub would easily cover anywhere from 4 up to 10-ish buildings with the use of their &#8220;port sharing device&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;2 light hubs should cover the Stocktown town.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;1 light hub should cover the Fairfield Industrial town.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;1 light hub should cover the Lodi town in a future expansion.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;As there is enough distance between all these hubs, I do not think we need the &#8220;expansion hub&#8221;. We can just power them individually.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In any case, we would start with the &#8220;Starter Kit&#8221;, compare their power pack to using the 12V AC system from the layout, or from the current building lighting supply. We would also evaluate how their LEDs illuminate a building.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Our main focus is the Stockton station, however I&#8217;d use the Fairfield Industrial buildings as the &#8220;canary&#8221; to experiment with that starter kit, and only tackle the more complex station once we know the limitations of the system. Then after the station, we can expand to the rest of the Stocktown town.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-03-25T00:00:54-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Test-only Deployment</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-03-12_conductor_2_test-only_deployment.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-03-12_conductor_2_test-only_deployment.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s discuss &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;strategies for deployment.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One issue is that I can&#8217;t just install this on the main automation computer at the museum and just &#8220;hope it works the first time&#8221;. Even though it&#8217;s volunteer work, I take it seriously and I have an unofficial SLA of 7/5 -- my automation needs to work reliably for 7 hours for 5 days a week. That makes my downtime only two days (Sunday and Monday), one being a workday for me, so really I have one day to get stuff done, and it&#8217;s on the week-ends when I often have other commitments. Then I wonder why any project takes so long to accomplish&#8230; oh well.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So the solution is that I have a clone of the automation computer at Randall. It&#8217;s the &#8220;backup&#8221; computer in case the main one fails. It&#8217;s a 99.9% exact setup so it&#8217;s nice for testing software upgrades. And because I can&#8217;t often easily go on place, I also have &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;another&lt;/span&gt;&lt;span&gt;&amp;nbsp;fairly similar machine at home for testing. Thus I deploy on the machine at home, sort of a canary, and if I like it, I deploy on the backup machine at the museum, and finally on the main one. It&#8217;s a bit of a process but it works neatly. I can identify issues early, as is the case here.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;My early attempt at deployment failed, and I addressed it already.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First let&#8217;s look at the facts &amp;amp; specs:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Conductor 1:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Built using Java 8 w/ Gradle.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Targets JMRI linux 4.x with a conductor.py wrapper.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Runs on Debian Buster 10.13 + dev on Windows 8.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Conductor 2&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Built using &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;Java 11 or&lt;/span&gt;&lt;span&gt;&amp;nbsp;Java 8 + Kotlin w/ Gradle.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Targets JMRI linux 5.x with a conductor.py wrapper.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Runs on Debian Buster 10.13 + dev on Windows 8/10/11.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The other important part is how Conductor integrates with JMRI:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;JMRI loads bin/JMRI/jython/Conductor.py when loading the profile.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Jython loads bin/JMRI/lib/conductor.jar when resolving &#8220;import com.alfray.conductor&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Both files are symlinks to the git checkout folder + build folder.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Conductor 1 should work just fine with the Java 11 JRE. JMRI now requires Java 11 minimum.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;My deployment &#8220;concern&#8221; is that I want to &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;try&lt;/span&gt;&lt;span&gt;&amp;nbsp;the new Conductor 2, while still being able to revert quickly to Conductor 1 if I realize there&#8217;s a blocking issue I have to address. They both use different kinds of scripts with different languages, although the feature set is relatively similar. Thus I have designed my Conductor 2 binary to be &#8220;backwards compatible&#8221; with Conductor 1 -- in the sense that the binary for v2 integrates both engines v1 and v2.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Actually, we must separate the &#8220;entry point&#8221; versus the &#8220;engine&#8221;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Entry Point 1 only supports Engine v1 with the ANTLR custom grammar text scripts.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Entry Point 2 supports &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;both&lt;/span&gt;&lt;span&gt;&amp;nbsp;Engine v1 and Engine v2. It will load the proper engine based on either the extension (kts, groovy) or the content (txt vs kts).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &#8220;fat JAR&#8221; contains &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;both&lt;/span&gt;&lt;span&gt;&amp;nbsp;entry points too. I build that fat JAR, and that&#8217;s what JMRI / Jython loads.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The Jythong wrapper, &#8220;Conductor.py&#8221;, now has a variable in the Jython code to force it to call the Entry Point 1 or 2. That can also be set via an environment variable. Thus the deployment scenario is:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Load JMRI with the new Jython wrapper and the new Fat JAR supporting both engines.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Start with forcing Conductor 1&#8230; Validate this works with v1 scripts only.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Then restart while forcing the Conductor 2&#8230; Validate this works with both v1 or v2 scripts.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When I tried that, things initially went pretty bad, with multiple Java/Jython exceptions stacking up.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span&gt;The first issue is that I was loading scripts from the JAR resources using the URL resource loader, and converting these to Kotlin Scripting &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;UrlScriptSource&lt;/span&gt;&lt;span&gt;. While that&#8217;s nice for unit testing, it&#8217;s not convenient to load scripts from JMRI as it means I&#8217;d have to rebuild the fat JAR every time I change the script, which defeats the purpose of a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;scripting&lt;/span&gt;&lt;span&gt;&amp;nbsp;engine. I quickly figured out Kotlin Scripting as a &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;FileScriptSource&lt;/span&gt;&lt;span&gt;&amp;nbsp;and changed the Conductor entry point wrapper to support both.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span&gt;The second issue I kept getting was multiple crypting exceptions when loading the script. Eventually I figured the root cause was this error: &#8220;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;kotlin.script.experimental.jvm.util.ClasspathExtractionException: Unable to get script compilation classpath from context, please specify explicit classpath via &quot;kotlin.script.classpath&quot; property&lt;/span&gt;&lt;span&gt;&#8221;. This is described in this &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-21443&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Kotlin issue KT-21443&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and has to do with the classpath not being properly set up when loading a script from a fat JAR, which is exactly my case. The solution (see &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/commit/2519949ae99e9e64a1337b9139bfa6b7779842fc&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;commit 2519949&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) is to get the get the JAR path and add it to kotlin.script.classpath, along with any JAR Manifest Class-Path -- of which there are none in my case, but I still implemented it in case I change that later.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now with these changes done, I can deploy Conductor 2 as specified above. First with a complete possible fallback to Conductor 1, and then I can easily switch to the new scripting engine. For now I&#8217;ve only tested the engine against the simulator, so it&#8217;s going to be interesting when I switch to real sensor data.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-03-12T00:00:34-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">SDB: Wifi and Configuration</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-03-04_sdb_wifi_and_configuration.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-03-04_sdb_wifi_and_configuration.html</id>
<category term="SDB" label="SDB"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-style:italic&quot;&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-style:italic;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/sdb&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Software Defined Blocks&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;&amp;nbsp;project uses an ESP32 with sensors to emulate block activations for a train model railroad&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Wifi offers the typical bootstrap dilemma on all these tiny gizmos: we need to select an SSID and enter some wifi credentials to connect to an existing network.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The typical &#8220;Arduino way&#8221; to deal with this problem is to encode both the SSID and the password in the Arduino code. That forces users to recompile the Arduino sketch before deploying.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On devices with an sdcard, a work-around is to have users create a small config file with the info that we can read at boot.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here instead I want to have the traditional &#8220;wifi-enabled gizmo&#8221; behavior.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;An ESP32 running SDB shall offer this behavior:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;When no configuration is present &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;or&lt;/span&gt;&lt;span&gt;&amp;nbsp;a select GPIO override (button, etc) is held at boot, we start a Wifi ad-hoc network.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Users then connect to that ad-hoc network. The device presents a web page, letting them enter the minimum Wifi info (SSID, password) we need to connect, then save it in NVS, and &#8220;reboot&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;If the device boots with a valid configuration, we simply try to connect to that wifi as a client.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;ve implemented this in the SDB prototype and it works very well. There&#8217;s only change I want to make: apparently the ESP-IDF framework lets us provide both an ad-hoc wifi server &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;and&lt;/span&gt;&lt;span&gt;&amp;nbsp;connect to a wifi client at the same time.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is useful for devices like the ESP32-CAM which do not have any single usable GPIO (*) -- we simply need to run the ad-hoc wifi server for a few minutes a boot. The alternative is to rely on the sdcard, which the ESP32-CAM has.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(* The ESP32-CAM has a bunch of GPIOs exposed on the device pins, but they are heavily multiplexed with &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;something else&lt;/span&gt;&lt;span&gt;, such as the camera or the sdcard. So if we do not use the sdcard, we suddenly have 3 or 4 usable pins.)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In SDB, the Wifi module is implemented here: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/sdb/src/master/src/mod_wifi.h&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/model-railroad/sdb/src/master/src/mod_wifi.h&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The implementation is fairly satisfactory and very simple. There are two kind of web pages being served:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;AP is ad-hoc wifi server for initial configuration.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;STA is the &#8220;regular&#8221; wifi client connecting to an existing wifi network.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;In both cases, we have an HTML page; a script compresses using gzip and encodes it in a C header, which is then served from the wifi module. Both web pages exchange data with the ESP32 using JSON. This allows the configuration page to fetch properties exposed by either the block modules, the sensor modules, or the server modules, as well as post back updated configuration forms. Live data from the sensors can also be queried.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-03-04T00:00:09-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">SDB: Using FreeRTOS Tasks &amp; Priorities</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-02-28_sdb_using_freertos_tasks_priorities.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-02-28_sdb_using_freertos_tasks_priorities.html</id>
<category term="SDB" label="SDB"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-style:italic&quot;&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-style:italic;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/sdb&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Software Defined Blocks&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;&amp;nbsp;project uses an ESP32 with sensors to emulate block activations for a train model railroad&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;How can the current modules benefit from the FreeRTOS tasks?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;An initial prototype was built using MicroPython. There&#8217;s good support for ESP32, especially using the Adafruit libraries. Unfortunately, MicroPython on ESP32 still has quite some limitations. For example there&#8217;s no OpenCV support, etc. Since the goal is to make the project as accessible as possible, sticking to the regular Arduino / C++ seemed a better option.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One issue with the MicroPython version is that I realized that &#8220;MicroPython Threads&#8221; are implemented using FreeRTOS tasks all of the same priority. Thus they execute in round robin fashion, with no control from the application. That means a task doing some IO can be pre-empted in the middle of e.g. an I2C-in-software operation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;With better FreeRTOS control, we can use tasks and we can:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Use priorities to ensure some tasks are run before others.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Use critical sections or mutexes to avoid same-priority tasks from interrupting each other.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The design suggestion is as follows for Core and Task Priorities:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Core 0:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Priority ? = wifi tasks.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Priority 0 = idle task.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Core 1:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Priority 4 = sensor acquisition.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Priority 3 = (optional) block logic &amp;amp; IO notifications.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Priority 2 = (optional) display updates.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Priority 1 = main loop.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Priority 0 = idle task. &lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We&#8217;ll still have modules with an init + loop, but these are called from the main loop.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Each module is free to start its own sensor acquisition tasks as desired, with the caveats:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;They all share a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;common&lt;/span&gt;&lt;span&gt;&amp;nbsp;mutex to prevent select operations from being preempted.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;We will provide that via the shared module manager.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;They must yield reasonably using &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/system/freertos_idf.html?highlight=xtaskdelay#_CPPv410vTaskDelayK10TickType_t&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;vTaskDelay&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/system/freertos_idf.html?highlight=xtaskdelay#_CPPv415xTaskDelayUntilPC10TickType_tK10TickType_t&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;xTaskDelayUntil&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;-- because we do not require exact timings, the former one is good enough for our usage.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Not every module needs to have a task. Because the main loop will still run, simple modules (display updates, block logic updates) can simply run in the loop callbacks.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We provide an &#8220;IO critical section mutex&#8221; via the module manager that can be used any time a specific IO operation must not be preempted. An example of such an operation would be an ADC measure, or reading from the ToF I2C, or updating the OLED buffer. Because sensors should use tasks all at the same priority on the same core, they will run in round robin.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We now have a situation where different tasks read and write from the data store. By construction, they cannot access it at the same time. The access &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;can&lt;/span&gt;&lt;span&gt;&amp;nbsp;be preempted, as long as it&#8217;s by another task not performing data store operations.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For that, we&#8217;ll use a different mutex to protect reads and writes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To ensure we cannot have deadlocks, both mutexes should not be held at the same time -- IO operations should not perform data store operations.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-02-28T00:00:57-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Split Core &amp; Hall-Effect Sensors</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-02-25_split_core_hall-effect_sensors.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-02-25_split_core_hall-effect_sensors.html</id>
<category term="electronics" label="Electronics"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For now I&#8217;ve been doing block detection on the Randall layout using NCE BD20 current detectors. They work well. There are others DCC-compatible detectors but they all use through-hole core transformers, which means they cannot be used with existing wiring without desoldering or disconnecting something.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:265.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_a829f4e69484dc20cd40f3a6598bf44058b39b80c08877b3ca33902362f14562i.jpg&quot; style=&quot;height:597.75px;margin-left:-0.00px;margin-top:-292.37px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are other contenders to the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/201254549-BD20-Block-Detector&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;BD20&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, such as the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.modelrailroadcontrolsystems.com/cpod-control-point-occupancy-detector/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;cpOD&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.iascaled.com/store/CKT-BD1&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;CKT-BD1&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. I plan to switch to these once I exhaust my current supply of BD20. But the bottom line is that they all use these &#8220;through-hole CT&#8221;, and sometimes I wished I had the convenience of a split core transformer that I could quickly snap around a track feeder wire.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I had two goals in mind:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Main goal: Have an alternative to the through-hole CT block detection sensors that do not require disconnecting nor cutting wires to install them.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Secondary goal: Make a little portable &#8220;current detector&#8221; that I could quickly snap around a track feed wire to trace wire continuity.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Thus a while ago I got two sensors, with the purpose of figuring out to use them to monitor train track current with an ESP32:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3q7qG4z&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/3q7qG4z&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;Hall-sensing ACS712-5A current module.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3AJM5FP&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/3AJM5FP&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;Split core SCT013-005 5A 1V current transformer.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Spoiler alert: I discussed that topic on the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://forum.mrhmag.com/post/equivalent-of-bd20-block-detector-with-split-core-transformers-12438761&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;MRH forum&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://groups.io/g/arduini/topic/93449311&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Arduini forum&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and I was clearly told that would not work, and to make a long story short, I never managed to make them work for this application.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Upfront I want to indicate why that was anyway not a surprise and I was likely to fail:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;My end goal would have been to connect the sensors pretty much directly to an Arduino or ESP32 &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;with no other circuitry&lt;/span&gt;&lt;span&gt;&amp;nbsp;-- an important point -- and then deal with the sensor in software. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;By contrast the BD20, even though it&#8217;s the one with the simplest board, still clearly has 4 diodes (likely a bridge rectifier), 3 transistors, and a few other discrete SMD components. The cpOD and the CKT-BD1 have even more circuitry, including a small microcontroller likely to perform some noise filtering.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The split core transformer I got as well as the ACS712 are typically used in home automation systems to monitor power line current anywhere from 1A to 100A, and at either 50 or 60 Hz. By contrast, current on a DCC track feeder may be maybe 2~4A max on a heavy load, and our DCC signal runs at 8 kHz. The dedicated block detectors above are extremely sensitive -- they will detect an engine not running and sitting idle on the track when properly configured!&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Anyway, I&#8217;ve done the test and I failed. I&#8217;d venture one could still probably use these sensors with some additional circuitry, but I have not tried that&#8230; yet -- my goal was not to replicate the behavior of the dedicated sensors cited above.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;BD20 Reference&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;My reference is one of my BD20 sensors. These are designed to do just that -- block detection for DCC. It detects when an engine is on the track, even if it&#8217;s not running. This implies it&#8217;s sensitive enough to detect the current used by the engine&#8217;s decoder. It also detects lighted cars. When we want to detect rolling stock that does not have any active electronics inside, the typical trick is to glue a surface mount resistor on the axle between the wheels, and these can be in the range 5k-40k&#937;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To test the behavior of a BD20 sensor, I used a piece of test track connected to my DCC system. I don&#8217;t have a reliable amp-meter to use (the amp-meter in my multimeter died a while ago; I must have abused it somehow). So instead I&#8217;ve placed a 10k&#937; resistor in series with one of the DCC wires and measured the voltage across that. The DCC is a square signal at 8 kHz and neither the DC nor the AC voltage measure of the multimeter are appropriate for this; instead I connected a small digital scope to the resistor and looked visually at the DCC signal on screen, approximately guessing the voltage peak-to-peak.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What I get is:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Bridge rails with a 100k&#937; resistor &#8658; measured +/- 0.12 mA &#8658; BD20 does not trigger.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Bridge rails with a 22k&#937; resistor &#8658; measured +/- 0.4 mA &#8658; BD20 does trigger.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Bridge rails with a 10k&#937; resistor &#8658; measured +/- 0.7 mA &#8658; BD20 does trigger.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Placed an engine (idle) on the track &#8658; measured +/- 1 mA &#8658; BD20 did trigger.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;All these measurements are approximate, but they give us a rough idea of the current that the BD20 can detect -- it seems to detect something as low as +/- 0.4 mA used symmetrically on the DCC signal. Let&#8217;s assume the circuitry on the BD20 rectifies the signal, that means they trigger a bit under 1 mA of current usage.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s compare this with the two sensors I&#8217;m trying to use.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;ACS712 Module&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3q7qG4z&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/3q7qG4z&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;ACS712-5A is already mounted on a 3-pin &#8220;arduino compatible&#8221; board.&lt;br&gt;This one is rated at 5 amps, which is the minimum available.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.allegromicro.com/en/products/sense/current-sensor-ics/zero-to-fifty-amp-integrated-conductor-sensor-ics/acs712&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ACS712 data sheet from allegro&lt;/a&gt;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Chip: ACS712ELC-05B&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Supply power: 5V (min 4.5V, typ max 5.5V)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Measuring range: 5A&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Analog output: 185 mV/A&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;When there is no the detection current through, the output voltage is VCC / 2&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Application note #4 shows output should be placed on a resistor divider for a typical 3.3V ADC. Shows a 1 nF cap on filter pin 6 -- without detailing what frequency cut-off that gives us here. There&apos;s a diode and a &quot;user cap C1&quot; too, without explanations either.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:188.50px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:287.12px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_afa437213b49898da36eb8c6289874aef38d6264d27dfb8730e52b5909cb7295i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Do I need D1 &amp;amp; C1 on this application?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What is the schematics of the little board I actually got? Looking at it:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:349.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:624.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_059c3a58c4b0931c1ae40e8bbe608538e308162665f2b776d503f60be40abdeai.jpg&quot; style=&quot;height:424.00px;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I couldn&#8217;t measure the values of the caps on the board, and I did not want to desolder them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The design matches the application note:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There&#8217;s a cap between VCC and GND. Let&#8217;s assume it&#8217;s 0.1 &#181;F.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;FILTER&lt;/span&gt;&lt;span&gt;&amp;nbsp;pin connects to GND via a cap. Unfortunately that&#8217;s the one I&#8217;d like to know the value of and I can&#8217;t seem to measure it. It&#8217;s a slightly different shape than the one on VCC and we can infer it&#8217;s likely not the same value, whatever value that is.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;VIOUT pin connects directly to OUT with no other circuitry. It&#8217;s up to me to add resistors.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;LED is driven directly off VCC via a 1000&#937; resistor. I couldn&#8217;t measure the Vf but looking at samples from Mouser a typical green SMD LED would be either around 2 V or 3.3 V, and let&#8217;s say 1V for a red one.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;5V-1V=4V / 1000&#937; = 4mA.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;5V-2V=3V / 1000&#937; = 3mA.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;5V-3.3V=1.7V / 1000&#937; = 1.7mA.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&#8658; When trying the schematics above on a single wire of DCC bus with a single engine running, and looking at the output using a small digital scope, I get basically nothing but noise. Signal is at ~2.04 V and doesn&#8217;t move from there. By contrast, a single through-wire with a BD20 triggers instantly in the same conditions.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s look at the spec above: 185 mV/A is the theoretical ratio. What does that give us, when we know our BD20 can detect as much as 1 mA?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If we want to detect 1 mA on the input, we&#8217;ll get 0.185 mV on the output. That is&#8230; not a lot.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If we were to feed this to an ADC on a theoretical 3.3V ramp at 10 bits, that&#8217;s 4096/3.3V*0.185mV = 0.23 ticks&#8230; Less than one tick of precision. We&#8217;re not going to measure that.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s reverse this: 3.3V/4096 = 0.8mV is the least we could measure with one tick, which would be ~4mA on the input per ADC tick. We&#8217;re not measuring anything under 4 mA, and that&#8217;s not even counting the ADC noise. Upfront, that&#8217;s not going to work.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;m not going to dwell too much on that sensor since I&#8217;d rather have something with the convenience of a split core that I quickly snap around an existing wire, without having to cut it. So let&#8217;s look at the other sensor&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Split Core Transformer&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3AJM5FP&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/3AJM5FP&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;split core is a 5A/1V model with a sampling resistor. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are two versions of these split cores:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Without a resistor: it&#8217;s a coil, and one measures current through it.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;WIth a resistor: a resistor in series with the internal coil, and one measures voltage across that resistor.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;I have the latter one.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What&#8217;s inside:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:300.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:714.60px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_571e818ee8278e9bbf4cdc7da53369d4533e1385e6d993ad66f1101166476d1ai.jpg&quot; style=&quot;height:597.00px;margin-left:-82.40px;margin-top:-121.00px;width:797.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An SMD marked &#8220;WP&#8221;. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://smd.yooneed.one/code5750.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;That marking could denote&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;a diode or a &#8220;transient voltage suppressor&#8221;. The latter seems more likely, and matches the &#8220;TVS&#8221; indication on the datasheet linked above. Here&#8217;s such &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.vishay.com/docs/88390/smaj50a.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;a Vishay component&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(to be clear I couldn&#8217;t recognize the logo on the TVS so I am in no way assuming it is a Vishay nor that one in particular)&lt;/span&gt;&lt;span&gt;. Did I mention I have no idea how a &#8220;TVS&#8221; behaves? What does it do to a 8 kHz signal?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;2 resistors in parallel, marked 4300 and 7501: 430 &#937; // 7.5 k&#937;. Eq = 406 &#937;.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s compare this with the specs of 5A &#8658; 1V.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;U=RI &#8658; 1V = 406&#937; * I &#8658; I = 1/406 = 2.46 mA.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;5A/2.46mA gives a ratio of 1:2030 for the primary/secondary windings.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Datasheet found online, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://datasheetspdf.com/pdf/1328320/YHDC/SCT-013-050/1&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://datasheetspdf.com/pdf/1328320/YHDC/SCT-013-050/1&lt;/a&gt;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Some notes:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Output is a 3.5 mm jack with 2 outer rings used (middle one &#8220;vacant&#8221;).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;All the ESP/Arduino schematics I find using the SCT013 in voltage mode power it via a 2-resistor voltage divider with a 10 &#181;F cap (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://savjee.be/2019/07/Home-Energy-Monitor-ESP32-CT-Sensor-Emonlib/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;example&lt;/a&gt;&lt;/span&gt;&lt;span&gt;). None explain why.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Another &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://how2electronics.com/iot-based-electricity-energy-meter-using-esp32-blynk/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;one&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;points out they use a 5V input, but I don&#8217;t understand what that 100&#937; resistor does in there so I&#8217;m going to ignore this wiring schematics.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Why use a voltage divider? Output will be zero and +/- so it&#8217;s easier to deal with if it&#8217;s centered on half the analog Vin reference voltage -- which is exactly how an ACS712 operates, which also makes all these Arduino sketches more or less interchangeable.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It would make more sense to power the transformer from the 3.3V output of the ESP32, which is what the first example does.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We&#8217;ll use this schematic:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:194.50px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:286.92px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_614ca6b03aff0e144a33e88852a411e790d854146f72584b0154cc8396bf9392i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&#8658; When trying the schematics above on a single wire of DCC bus with one engine running, I get basically nothing but noise. There seems to be a voltage when measured solely on the output of the sensor using the digital scope only. The scope registers it in the 24 mVmrs range. I can&#8217;t measure it with a voltmeter. It&#8217;s very inconclusive.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Even when trying to loop one DCC wire 3 times around the coil, I got absolutely nothing (I was naively expecting 3 times more on the output). By contrast, a single through-wire with a BD20 triggers instantly in the same conditions.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s look at the spec above: 5A/1V is the theoretical ratio, which means 200mV/A (compare with the 185 mV/A ratio for the ACS712 above).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What does that give us, when we know our BD20 can detect as much as 1 mA?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If we want to detect 1 mA on the input, we&#8217;ll get 0.2 mV on the output. That is still not a lot.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If we were to feed this to an ADC on a theoretical 3.3V ramp at 10 bits, that&#8217;s 4096/3.3V*0.2mV = 0.25 ticks&#8230; We&#8217;re clear not going to detect that either.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s reverse this: 3.3V/4096 = 0.8mV is the least we could measure with one tick, which would be ~4mA on the input per ADC tick. Not very different from the ACS712-5A indeed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s an &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.gowanda.com/application-notes/custom-transformers/split-core-current-transformers/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;interesting discussion&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;about the issues with split core current transformers designs. The bottom line is that the through-hole versions have a much more efficient toroidal shape, whereas the split cores are less efficient due to their shape, with more magnetic leakage. And then we get to the frequency response. The materials used are apparently typically optimized for power line measurements (50~60 Hz) or for the higher frequencies of switch mode power supplies (20 kHz). It&#8217;s nice to know our application, at 8 kHz, falls perfectly out of both categories.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Speaking of frequency response, let&#8217;s play with that schematic above a bit more.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;R1+R2 is a voltage divider, listed as &#8220;either 10k&#937; or 100k&#937;&#8221;, connected to either the 5V or the 3.3V Vout (the schema above clearly calls for the latter). &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Impedance of C + R1 in parallel: 1/Z = 1/R1 + jwC where w = 2.pi.f&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://keisan.casio.com/exec/system/1258032649&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://keisan.casio.com/exec/system/1258032649&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;calculator:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;C = 10 &#181;F&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;f = 8 kHz, R1 = &amp;nbsp;10 k&#937;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; |Z| = 1.9894367492791 &#937;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;f = 8 kHz, R1 = 100 k&#937;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; |Z| = 1.989436788255 &#937;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;f = 50 Hz, R1 = &amp;nbsp;10 k&#937;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; |Z| = 318 &#937;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;f = 50 Hz, R1 = 100 k&#937;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; |Z| = 318 &#937;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;We can see why &#8220;10 or 100 k&#937;&#8221; doesn&#8217;t make a big difference here.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;m not going to compute the impedance of (R2 + (R1 || C1)). I&#8217;ll leave that pointless academic exercise to the bored reader.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Another way to see it is that R2 + C forms a low-pass filter &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;if we ignore R1&lt;/span&gt;&lt;span&gt;. Let&#8217;s &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.digikey.com/en/resources/conversion-calculators/conversion-calculator-low-pass-and-high-pass-filter&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;compute the cut off frequency&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;at -3 dB using fc = 1 / 2.pi.R.C:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;R2 = &amp;nbsp;10 k&#937;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; fc = 1.59 Hz&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;R2 = 100 k&#937;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; fc = 0.1592 Hz&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;So this will be filtering our 8 kHz massively, as expected.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s do the reverse computation:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;fc = &amp;nbsp;8 kHz, R2 = &amp;nbsp;10 k&#937;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; C = 1.98 nF&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; C//R1 |Z| = ~7.1 k&#937; at 8 kHz&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;fc = &amp;nbsp;8 kHz, R2 = 100 k&#937;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; C = 198 pF&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; C//R1 |Z| = ~71 k&#937; at 8 kHz&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;fc = 10 kHz, R2 = &amp;nbsp;10 k&#937;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; C = 1.59 nF&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; C//R1 |Z| = ~7.8 k&#937; at 8 kHz&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;fc = 10 kHz, R2 = 100 k&#937;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; C = 159 pF&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; C//R1 |Z| = ~78 k&#937; at 8 kHz&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Side note: -3 dB is ~70% of the signal, which is why the ~7k/70k&#937; impedance above is to be expected as being ~70% of R2.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As a reminder, low-pass vs high-pass (copied from &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.digikey.com/en/resources/conversion-calculators/conversion-calculator-low-pass-and-high-pass-filter&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;digikey&lt;/a&gt;&lt;/span&gt;&lt;span&gt;):&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:108.70px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:284.50px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_dde09e6e64b05dd0d1a8dbf316f9ed471d055616fa0d93406b7049c1c3df52a3i.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:114.37px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:285.50px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_10d6fd2f96ae6f8e2869c8d94a8de10740b99f3807e5f271d273ff71de352d9ci.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The bottom line is that all these example schematics are designed to measure 50~60 Hz AC current so I&#8217;d have to expect to adjust the cap value for my 8 kHz need. From a discussion on MRH/Arduini, I should expect the magnetic core/coil to be improperly matched for my needs in the first place, and as seen above obviously the capacitor would need to be adjusted.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The original goal was &#8220;without added circuitry&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now, could we make this work, with some added circuitry? I tend to think maybe a bridge rectifier on the output would be useful, and/or a transistor to boost the current out of the coil would make sense (if using the current version). Since this one measures voltage around a resistor, my first thought would be to use an op-amp in a typical open loop to get an &#8220;infinite&#8221; gain. That would allow me to use it as an &#8220;all or nothing&#8221; detector like the BD20 does, assuming I can differentiate a signal from just noise. I was actually thinking we should use the property of the DCC to create an 8 kHz band filter and filter just that.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I have not even addressed the second elephant in the room, namely the fact I was planning to connect that to one of the ESP32 ADC inputs. The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/espressif/esp-idf/issues/164&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ESP32 is notorious for having a passable / sub-par ADC&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, with noise, offset, and non-linearity, made even worse by contamination when its wifi/BLE radio is used at the same time. This is typically &#8220;solved&#8221; by using an external ADC over I2C, which is a bit ironic and sad. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=UAJMLTzrM9Q&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Andreas has a full video&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;explaining the issues and comparing it with better solutions.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Bottom line, we confirmed neither sensors are appropriate for the task &#8220;as-is&#8221;, with no added circuitry. That&#8217;s exactly what comments in MRH &amp;amp; Arduini indicated, and it was worth verifying. I may revisit the topic of the split core transformer later with some added circuitry.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-02-25T00:00:36-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">SDB: MQTT</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-02-24_sdb_mqtt.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-02-24_sdb_mqtt.html</id>
<category term="SDB" label="SDB"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-style:italic&quot;&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-style:italic;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/sdb&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Software Defined Blocks&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;&amp;nbsp;project uses an ESP32 with sensors to emulate block activations for a train model railroad&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The base idea is to use &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.adafruit.com/alltheiot-protocols/mqtt&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;MQTT&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to publish block changes, instead of targeting the JMRI JSON protocol. I was originally going to support both, but that seems redundant. We&#8217;ll see. JSON is simple and very convenient for debugging, so it&#8217;s always a great idea to get started.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here we&#8217;ll detail how that works for this specific project:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;ESP32 monitors sensors, sends messages to an MQTT broker.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;JMRI MQTT subscribes to messages from the MQTT broker.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Requirement: An MQTT broker running on the network (either the same machine as JMRI, or another local one, or a public one).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Requirement: Set up the ESP32 with the broker IP, and block/sensor topics.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For background, my &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;RTAC Conductor automation software&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;embeds &#8220;KV Server&#8221;, a distributed key-value server/client architecture which is fundamentally very similar to MQTT, except mine is nowhere as ubiquitous and it is &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/ralfoide/libutils/tree/android-lib-v2&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;buried somewhere in my LibUtils project&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. In the case of the Conductor automation software, I use the KV Server as a way to distribute configuration from the automation script to the accessories. Which means we can do the same here with MQTT, and we can take advantage of that to configure the ESP32 with block triggers defined in the automation script.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We have 3 options:&lt;/span&gt;&lt;/p&gt;
&lt;ol start=&quot;1&quot; style=&quot;margin:0;padding:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;margin-left:36pt;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;Local configuration stored in NVS (managed via onboard web page), ignore MQTT&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;margin-left:36pt;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;MQTT-provided configuration, override local configuration.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;margin-left:36pt;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;A mix of both&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span&gt;To keep it simple, we&#8217;ll use option 2:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Upon booting, SDB reads the NVS for potential trigger configuration.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It also subscribes to a specific MQTT topic to get its configuration.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;If provided, this &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;overrides&lt;/span&gt;&lt;span&gt;&amp;nbsp;any local configuration and &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;saves&lt;/span&gt;&lt;span&gt;&amp;nbsp;it to the NVS.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Since we subscribe to this topic, changes can happen &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;anytime&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The only thing we need to configure via the onboard web page is:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The JMRI JSON server IP (w/ optional U/P).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The MQTT broker IP (w/ optional U/P).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The MQTT topic to use (we&#8217;ll want one ID per SDB node).&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The advantage of this setup is that we can push a configuration to the node via the MQTT broker, e.g. from a Conductor script, and reloading that script would update the SDB node. But we also save it in the NVS so that when the board boots, it has trigger configuration even if the MQTT broker is not available.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-02-24T00:00:56-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Alternatives Locations for Block Detection at Randall</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-02-22_alternatives_locations_for_b_d7713a5c.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-02-22_alternatives_locations_for_b_d7713a5c.html</id>
<category term="train" label="Train"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For now I&#8217;ve been doing block detection on the Randall layout using NCE BD20 current detectors. I have part of the Mountain Panel wired, and I&#8217;d like to have more there. I&#8217;d like to also have block detection of part of the Valley, and that&#8217;s where I have been hitting a wall for the last two years. I just can&#8217;t figure out a clean way to do it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Block detection using BD20-style current detectors can be done at various points. Let&#8217;s review the possibilities:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;At the panel, on the red wires out of the panel.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Pros: it&#8217;s easy to identify which wire is for which block.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Cons: Although that&#8217;s OK for the Mountain Panel, it&#8217;s a PITA for the Valley Panel which is such a mess that I&#8217;d rather not touch anything in there.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Current version looks like this for the Mountain Panel:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:282.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:626.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_c66df19958a0c7df87390fe128cb4a60557c6cdea0a5b5d0c5a3fd4c2dd22b91i.jpg&quot; style=&quot;height:597.00px;margin-left:-0.00px;margin-top:-163.00px;width:796.49px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Here&#8217;s the Valley Panel and why I don&#8217;t want to touch it with a ten-foot pole:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:282.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:625.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_5d9859d3fae56dc523e277cf21c48fd947f9ba147c86f728d4af501becde6dbci.jpg&quot; style=&quot;height:597.00px;margin-left:-47.85px;margin-top:-225.00px;width:797.54px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;At the &#8220;spiked&#8221; connector grid that concentrates blocks for panel 1 + 2.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Cons: This thing looks very delicate to solder. I basically don&#8217;t want to touch it.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This is what this looks like for Mountain (top) and Valley (bottom):&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:271.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:621.60px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_45a963015e37c0de098178e71489ea66bcea403a9254c2e05f44eeaa6952909ci.jpg&quot; style=&quot;height:597.00px;margin-left:-175.40px;margin-top:-250.00px;width:797.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:263.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:623.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_b6985209306c9f96328de29c7ae6a1b8921cb002fc5c207de18ade3bd6c86fa1i.jpg&quot; style=&quot;height:597.00px;margin-left:-57.86px;margin-top:-198.00px;width:797.07px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Next to the track, on the red wire side of each block, running long wires with twisted pairs to NCE AIU cards mountain around the layout. That was my initial plan back in 2016 before I decided it was a terrible idea.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;On the black wires &#8220;concentrator&#8221; under Stockton, which merges all the common-rails negatives from all the power districts together.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The interconnection bar looks like:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:225.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:625.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_89631e015c792d7ac71fb2a5dbcb05932fa7313e52789e78c06d4915fb12e3cei.jpg&quot; style=&quot;height:469.00px;margin-left:-0.00px;margin-top:-161.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;On the black wire bundle by the workbench, as allegedly used by the old DC detector.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The bundled wires looping at the workbench in the back look like:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:289.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:624.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_a067315e2ca847f6c1dccdb6b4c02dbf3909e9b9101598be3d1c45b71776aa8ai.jpg&quot; style=&quot;height:468.00px;margin-left:-0.00px;margin-top:-71.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:260.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:626.40px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_76a69c7aec227f13b3c486cdd2f76554650146fea97e459aa0155ce077bb965di.jpg&quot; style=&quot;height:597.00px;margin-left:-37.40px;margin-top:-84.00px;width:796.91px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To be clear, the main issue is figuring out which wire corresponds to which block, since they are mostly unmarked. A few of them are labeled, and I&#8217;m not even sure I trust these labels. The black wires &lt;/span&gt;&lt;span&gt;bundles&lt;/span&gt;&lt;span&gt;&amp;nbsp;by the workbench have their own markings that do not match with the block numbers. I believe these come from the mountain district only.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The second issue is that the through-hole CT sensors require the wire to be either disconnected or cut so that they can be threaded through the core transformer. I&#8217;d rather not have to do that if I can avoid it. Thus I&#8217;d rather do this where the wire has some kind of connection that I can easily desolder then resolder.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Last but not least, the third issue is that parts of this layout are better left untouched. The &#8220;train room exhibit&#8221; has to be functional 5 days a week, and some of the operators have very low tolerance to anything not working for even a short period of time. Thus any work I do cannot be disruptive, yet some is bound to be, for sure. That&#8217;s part of why I don&#8217;t want to start messing around with finicky complicated panels. Any work I do has to be able to be incremental and split into small enough tasks that I can handle each one in a day, once in a while when time permits.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For the common ground &#8220;concentrator&#8221; under Stockton, I posit that some blocks are likely merged due to the common rail design: in common rail, the &#8220;negative / ground&#8221; is a continuous rail along a subdivision, with only the &#8220;positive&#8221; rail being switched on/off by the block toggles. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;OTOH the Randall layout was supposed to have DC block detectors, and that&#8217;s supposedly what this massive bundle of wires going to the back workbench is all about. So assuming these are still connected, they would be a logical place to put block detectors if I do not want to put them at the panel. I&#8217;ve tried following these wires and I quickly got lost.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One thing I don&#8217;t understand is how the DC block detectors could work detecting separate blocks on the black side if these were wired together via common rail. Something doesn&#8217;t add up here. I really wished someone had left some documentation on that behind.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-02-22T00:00:35-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">SDB: Overall Module Design</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-01-31_sdb_overall_module_design.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-01-31_sdb_overall_module_design.html</id>
<category term="SDB" label="SDB"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-style:italic&quot;&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-style:italic;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/sdb&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Software Defined Blocks&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;&amp;nbsp;project uses an ESP32 with sensors to emulate block activations for a train model railroad&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;T&lt;/span&gt;&lt;span&gt;he desire for the MVP is to be designed around &#8220;modules&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Modules&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Each module should have:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;An init method called when the main starts.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;A start method called once all other modules have been initialized.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;A loop method called as part of the main loop.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The loop method will return the max time it wants to sleep before being called again. The loop method may be invoked sooner than requested, but not later.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Its own thread-safe message queue.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Each module is free to start a thread or do their process in the main loop.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The main loop will call all the modules&#8217; loop methods, and sleep the minimum time requested by all modules (similar to a classic Arduino sketch main loop). &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Care should be taken to avoid having two modules use the same hardware resource -- e.g. the same GPIO pin, or the same I2C controller, etc. One way to ensure this would be to have a global &#8220;hardware resource allocator&#8221;, e.g. an object which &#8220;owns&#8221; all hardware resources and panics if a resource is reused without being freed first. This seems overkill in the context of the phase 1 MVP.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Module Manager&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Modules are registered in a global ModuleManager singleton.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The module manager is also responsible for maintaining a thread-safe message queue per module.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Each module has a unique identifier code name which will be 2 characters long (see below).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Message Queue&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Inter-module communication is done by posting a message on another target module &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;via the manager&lt;/span&gt;&lt;span&gt;&amp;nbsp;rather than directly. Modules regularly pool their own message queue.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Although we could use a notification object to wake up a thread when a message is posted, I do not anticipate having to do that in the first version.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The goal of the message queue is to simplify the need for synchronization if two threaded modules call each other, and to simplify the dependency between modules. We want to avoid one module calling methods from another module directly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The downside of a message queue is that it is an inefficient mechanism to share large amounts of data &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;by copy&lt;/span&gt;&lt;span&gt;, which we posit is not needed in phase 1. This would not work to share image buffers, but it&#8217;s enough to share e.g. pointers.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Data Store&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The message queue is also a poor way to share frequently changing data between modules, as well as to handle configuration data.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Thus a suggestion is to have a singleton global dictionary as a Data Store. Some keys are transient data, whereas others are backed up to NVR.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Whereas it makes more sense for each module to have its own message queue, the data store is a global singleton. Accessors must be thread safe as they can be used by any threaded module.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The data keys are strings, and one character in the string key indicates whether the value should be automatically loaded/saved into the NVR.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;The data keys &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline line-through;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.google.com/document/d/1thOXyGH26BolTGAIOSPABzyH8ca_VR7Sr7dq3l9QkYI/edit#heading=h.b29wkxiqg2yi&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;strings should be interned&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;&amp;nbsp;to speed up access, which may mean enforcing a size limit. A potential key string encoding would be something like:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;2 characters for the module name.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;1 character indicating whether the value should be automatically loaded/saved into the NVR.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;7 characters max for the actual key.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;Note that since this is Python, the values themselves can be anything, including object references or dicts, etc. However for these values that must be backed to the NVR, we&#8217;ll need to check that API and conform to its limitations&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the first version, the data store will be limited to storing strings and long/ints, which can both easily be saved in the NVR.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The store is potentially accessible by many threads. We want to ensure consistency in reads &amp;amp; writes, not to mention that dictionaries/maps typically do not have thread safe updates. Thus we expect to have to use locks around read/writes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To reduce locking contention, one option is to have a lock per target module since all the keys &#8220;belong&#8221; to a specific module.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Using a global dictionary is a bit more expensive than writing just global variables. However it is deemed an adequate compromise to prevent strong module interdependence.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That means modules should consider store accesses to be expensive. As an example, we can anticipate that the wifi / http module would update the sensor threshold configuration by writing a maximum of a handful of values, then send a message to the adequate module to reload their configuration; that module would read values once from the store and keep them in their own object attributes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We probably want an API that allows a module to read &amp;amp; write multiple values with a single synchronized access, even possibly a get/condition/update access.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Block Logic&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The core of the project is defining blocks, and the conditions that trigger them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We need to elaborate on the possible conditions here.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We have 2 options here:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Use a dedicated module that has the configuration data, reads the state of sensors from the store, and then updates the block state in the store.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There is no dedicated module; instead each sensor module has its own logic to update block state in the store.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;In both cases, a separate JMRI JSON/MQTT module reads that block state from the store, and sends the JSON/MQTT to JMRI when a change is detected.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We&#8217;ll start with a dedicated &#8220;block module&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The configuration consists of output blocks (JMRI system names).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For each block, an input is configured with its own data. For a ToF sensor, that data is the distance threshold, and whether the block is occupied or free when the sensor is below that threshold. To be clear, that means the ToF module only needs to export distance information, and the block module is the one reading the sensor(s) distance and computing the state of the block. That also means the trigger logic will be depending on the type of sensor, and that logic lives in the block module rather than the sensor module.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We may want to include debounce capabilities in there in case the measurements are noisy.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Foundations&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Module Manager&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Message Queue (accessed via Module Manager).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Data Store.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Expect modules&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Display.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Owns the OLED + its I2C driver.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Read store for variables to display (e.g. a simple location code + value).&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Wifi + HTTP.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Owns the wifi, handling reconnections.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Owns sending a web page over it.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Read store for states to display on that web page.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;On configuration change, write to store + notify modules.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;ToF sensor.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Manages i2c sensors.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Optional: filter/smooth the readings, discard spikes.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Regularly reads sensor values and updates them into the store.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Block Module.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Regularly reads store for sensor states.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Updates blocks states in store.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Notified by Wifi / HTTP if configuration has changed.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Notify JMRI JSON module when there&#8217;s a change.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Notify JMRI MQTT module when there&#8217;s a change.&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;(we&#8217;ll support both protocols upfront)&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;JMRI JSON/MQTT Module.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Manages its own socket to the JMRI server.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Notified by Wifi / HTTP if configuration has changed.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Notified by Block module if blocks states have changed.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-01-31T00:00:35-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">SDB: Software Defined Blocks</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-01-29_sdb_software_defined_blocks.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-01-29_sdb_software_defined_blocks.html</id>
<category term="SDB" label="SDB"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&#8220;&lt;/span&gt;&lt;span&gt;Software Defined Blocks&lt;/span&gt;&lt;span&gt;&#8221; is a new project I&#8217;ve started this year.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-style:italic&quot;&gt;TL;DR&lt;/span&gt;&lt;span&gt;: The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/sdb&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Software Defined Blocks&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;project uses an ESP32 with sensors to emulate block activations for a train model railroad.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &#8220;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Software Defined Blocks&lt;/span&gt;&lt;span&gt;&#8221; project can be described as:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An embedded processor (ESP32) and sensors (Time-of-Flight sensor, camera).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An ability to define blocks, and programmable conditions to trigger block occupancy based on the state of these sensors.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Report of the block occupancy to either a JMRI or MQTT server.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Configuration and state displayed in some way (OLED display, web server).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The project is going to be split in two phases, each with their own MVP.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Phase 1&lt;/span&gt;&lt;span&gt;: ESP32 + ToF sensor + Wifi + JmriJSON.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This phase is known to be entirely doable. I expect most of phase 1 will be dedicated to the overall structure I want to achieve for the program. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There are some unknowns (f.ex. how is configuration achieved, how is state reported) but that&#8217;s because there are multiple choices, not due to lack of knowledge.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Phase 2&lt;/span&gt;&lt;span&gt;: ESP32-CAM + image analysis (OpenCV or something else).&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This phase is known to be purely experimental.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The camera analysis part has some obvious challenges -- should I be using OpenCV or duplicate algorithms, can they even achieve what I want, what do I even want, etc. There&#8217;s an interesting open research area here, yet overall it should be achievable, and once achieved the stability of the solution remains to be measured.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To be clear, phase 2 is the &#8220;interesting&#8221; and novel part. It is based on my &#8220;Grade Crossing Camera&#8221; project from a couple years ago, which I toyed with but never fully finished. So it&#8217;s time to reuse what I did last time and finish it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However there&#8217;s nothing wrong with phase 1 since the goal of that one is to provide a stable and easily reusable foundation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The MVP for phase 1 is the Stockton&#8217;s &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/randall/2018-11-22_more_automated_routes.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Trolley Automation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;as described in 2018.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:356.19px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_72dab625c51ff3a5a7d9fee3aa0d794abe2f7eddfaff843899ddbeda5d278b4ad.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The main repository page is &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/sdb&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/model-railroad/sdb&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-01-29T00:00:53-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Lighting a Walthers Mainline Dome Coach Car</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-01-08_lighting_a_walthers_mainline_790c2d45.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-01-08_lighting_a_walthers_mainline_790c2d45.html</id>
<category term="dcc" label="DCC"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Allen has a number of these Walthers Mainline Santa Fe cars, the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/85-budd-large-window-coach-ready-to-run-santa-fe-silver&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;85&apos; Budd Large-Window Coach Santa Fe (910-30002)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/85-budd-dome-coach-ready-to-run-santa-fe-silver&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;85&#8217; Budd Dome Coach Santa Fe (910-30402)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:170.50px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:575.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_9b9e1f1c36bc4be61dcdc1f05fd81da6eb8c35a5f5bc0e016a828461664761c3i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr style=&quot;display:none;page-break-before:always&quot;&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-style:italic;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/85-budd-dome-coach-ready-to-run-santa-fe-silver&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Walthers Mainline 910-30402&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;&amp;nbsp;85&#8217; Budd Dome Coach Santa Fe&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In this post, we&#8217;ll see how to add lighting to that specific dome car, the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/85-budd-dome-coach-ready-to-run-santa-fe-silver&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;85&#8217; Budd Dome Coach Santa Fe (910-30402)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, to get this result:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:312.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_c94fb391cc571d571452e9478534ec63e5d630e3e7cb4dbca1ac22fee79bbaa2i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Walthers LED Kits&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On that &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/85-budd-dome-coach-ready-to-run-santa-fe-silver&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;product&#8217;s web page&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, there is a &#8220;LED Interior Lighting Kit&#8221; link at the bottom that sends us to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://goo.gl/cGuZib&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://goo.gl/cGuZib&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which is &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/passenger-car-led-interior-lighting-kit&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;part 910-220&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span&gt;Since this is the &quot;recommended&quot; kit, Allen got these kits and I showed him how to install that in his Walthers Mainline 910-30002 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/85-budd-large-window-coach-ready-to-run-santa-fe-silver&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;85&apos; Budd Large-Window Coach Santa Fe (910-30002)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span&gt;The kit is a bit finicky in the way the metal tabs need to be installed on each end to power the LED PCB, but with enough motivation we were able to make it work, and for all purposes, it works as intended and documented.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Then he moved on to the Mainline Dome Coach part &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/85-budd-dome-coach-ready-to-run-santa-fe-silver&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;910-30402&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and we found the recommended LED lighting kit did not work at all.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The first problem is that the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/passenger-car-led-interior-lighting-kit&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Mainline LED kit 910-220&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is composed of one single long LED PCB which cannot be installed due to the elevated dome passenger compartment. It&apos;s not even long enough for that car!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:225.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_f471473d656b30ad4fa133061c6cec5a807a1d58e861b89ce9075a4eec161c49i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;The LED kit 910-220 provides a long flat PCB that doesn&#8217;t fit on this car with the observation area in the middle&lt;/span&gt;&lt;span&gt;.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;All the little characters were added by Allen previously&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The second problem is that the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/passenger-car-led-interior-lighting-kit&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Mainline LED kit 910-220&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;provides metal tabs that need to be installed at each end to bring power from the bottom trucks to the top LED PCB, but in case of the dome car the end is filled with the interior shell so there&apos;s no space to install the electrical contacts.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Allen noticed that Walthers offers a different LED kit for dome cars: &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/passenger-car-interior-constant-intensity-led-lighting-kit-fits-walthersproto-acf-budd-dome-cars&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Walthers Proto 920-1061 Passenger Car Interior LED DC / DCC Lighting Kit&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So Allen got that but then it doesn&apos;t fit either. Only later did we realize it&apos;s a Proto and not a Mainline kit.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;After checking with Walther&#8217;s excellent product support team, they confirmed that indeed it&#8217;s a mistake in the listing and the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/passenger-car-led-interior-lighting-kit&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Mainline LED kit 910-220&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;compatible with the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/85-budd-dome-coach-ready-to-run-santa-fe-silver&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;85&#8217; Budd Dome Coach Santa Fe (910-30402)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However, after looking at all these kits, I realized we can &#8220;kitbash&#8221; something fairly easily. So that&#8217;s what I&#8217;m going to explain here.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Parts&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We&#8217;ll use the following parts:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;1x &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/85-budd-dome-coach-ready-to-run-santa-fe-silver&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Walthers Mainline 85&#8217; Budd Dome Coach Santa Fe (910-30402)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;1x &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/passenger-car-led-interior-lighting-kit&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Walthers Mainline 910-220 Budd Passenger Car LED Interior Lighting Kit&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(aka &#8220;the Mainline LED kit&#8221;).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;1x &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/passenger-car-interior-constant-intensity-led-lighting-kit-fits-walthersproto-acf-budd-dome-cars&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Walthers Proto 920-1061 Passenger Car Interior LED DC / DCC Lighting Kit&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(aka &#8220;the Proto LED kit&#8221;).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;1x &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3CsmR0j&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductive Adhesive Copper Foil tape in 6 mm width&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;br&gt;This one is described as being 0.1mm thick.&lt;br&gt;Make sure that the adhesive part is clearly described as conductive too. That&#8217;s important.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3Xwv2kr&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;basic multimeter with a continuity detector&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;feature.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Principle of Operation&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The non-dome cars in this series (the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/85-budd-large-window-coach-ready-to-run-santa-fe-silver&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;910-30002 Budd Large-Window Coach Santa Fe&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) have two separate metal plates at the bottom of the car, under the interior flooring. These two bars serve as weights, and they double as power pickup for the conductive trucks. The associated &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/passenger-car-led-interior-lighting-kit&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Mainline LED kit 910-220&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;provides two metal strips that connect to these bars and provide power to the LED bar located in the roof.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the dome cars, we can&#8217;t do that. For starters, there are four metal plates at the bottom -- two per truck, and they are &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;connected together. Then we don&#8217;t have space on the end vestibule to place the kit&#8217;s metal strip that would &#8220;lift&#8221; the power to the LED bar. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:142.03px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_b253fa0ea50dc2f96858a11dfe71578ca68ef9bd5a2d73f55eca72b07df08770d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We have almost all the elements we need, yet we need a way to bridge them to have power continuity. Some folks may be able to solder something, however I don&#8217;t feel that there&#8217;s enough clearance to fit even small wires, and my soldering skills are not good at soldering thin wire to metal plates.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If I can&#8217;t provide connectivity via wires, what can I do instead? Options I can immediately think of are conductive paint and conductive tape. These are sometimes used to do simple electric circuits. In this case, I went for thin copper foil tape: it&#8217;s relatively cheap, it&#8217;s conductive, it&#8217;s easy to apply, and being adhesive it will neatly stay in place. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s how that&apos;s going to work: we use conductive tape to connect both trucks to each other, and then we use the conductive tape to bring power to the LED bar at the top of the car. This is the overall schematic:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:182.15px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_2a0954b370fb81e00e42c3c8b4ddc6e0134f38f13bccbc47407f3efd4f3235fad.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;Overall &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;Schematic: we use conductive tape to connect both trucks to each other,&lt;br&gt;and then we use the conductive tape to bring power to the LED bar at the top of the car&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note: I refer to the left of that schema as the &#8220;rear of the car&#8221;. That makes the vestibule with the doors the &#8220;front&#8221; of the car, it matches Santa Fe pictures I&#8217;ve seen online, and it matches the seat orientation in the elevated observation area.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s the high-level overview of the operation:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Disassemble the Budd Dome Coach (top, bottom, and part of the interior).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Use the conductive tape to pick up power from the two trucks and bring it up to the LED kit on the roof.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Use the conductive trucks and body-mounted couplers from the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/passenger-car-led-interior-lighting-kit&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Mainline LED kit 910-220&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Use the 2-parts LED bar from the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/passenger-car-interior-constant-intensity-led-lighting-kit-fits-walthersproto-acf-budd-dome-cars&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Proto LED kit 920-1061&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Each step will be described below in detail.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Opening the Budd Dome Coach&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We&#8217;ll need access to the interior, so first we need to remove the roof. There are a lot of guides online that describe how to do that: hold the car with two hands, &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;twist it&lt;/span&gt;&lt;span&gt;&amp;nbsp;back and forth a few times, and the roof tabs&#8217; tend to release. It&#8217;s a bit conceptually nerve-wracking but actually that&#8217;s not hard, and seems easier than the notice that comes with the car (which suggests to use a x-acto knife to push the tabs). Note that it&#8217;s enough to get all the tabs released on one side, then it&#8217;s easy to access the other tabs and release them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:193.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_e64d9cf64f9061ae3e55c1a20e0e66fe5a486d110450b270bbb804fb701cec27i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;With both hands, hold both sides of the car as shown (only one hand pictured here because I needed to hold the camera, but imagine the other hand on the other side) and twist in &lt;/span&gt;&lt;span&gt;opposite&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;&amp;nbsp;directions. This pops out the retaining tabs&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Removing the bottom part:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Remove the trucks by removing their main holding screw. I typically place the screw back on the bottom body.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Remove the 3 smaller screws that hold the bottom to the interior seats. You can put the screws back on the plate to avoid losing them.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Gently pull on the sides. There are only 2 tabs holding the bottom piece.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:223.07px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_fb83a4f3f89254bf3ca205d6fdd6fe124a09fd152be4bbf8e707c6c133a244bcd.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:231.90px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_1ce98ce6b10b707e1addf823f0e02bb620832088cdf1e7318352847aa7203778d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When I did the first car, I removed the entire floor/seating interior part. That made it easier to put the conductive tape. I did not remove the interior walls. The floor/seating interior is held in place by a little horizontal pin and a vertical pin in the middle, which makes it tricky as the middle part of the interior needs to be both lifted and pulled sideways, with each pin counteracting the other one. It was a pain to remove, and it was a pain to reinstall later. The good news is that we don&#8217;t need to remove that entirely -- below we&#8217;ll lift the &#8220;rear&#8221; part of the interior just enough to apply our tape.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Applying the Conductive Tape&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First I used some conductive tape to bridge the front and rear truck plates:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:145.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_7c84b20b54e5353e341d894f3ebf1235130fb095222d242cd05972ce689c2ed0i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Some important details:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Do not bridge the left/right sides. We want the left and right sides to be electrically isolated from each other. If you electrically connect both sides together, the car will short your layout!&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The copper foil is very thin. I cannot stress that enough. When applying it, it tends to crease easily, so apply moderate tension and smooth it out as you apply it. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Don&#8217;t remove the entirety of the paper backing. Cut a piece of foil to the desired length, peel a little bit of the backing off on one side, apply it, and peel the rest as you go along. Otherwise, because it&#8217;s very thin, the foil tends to curl and glue to itself and ends up like a tangled ball of shiny copper mess.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Because it&#8217;s very thin, it also can break very easily, especially since we are following some fairly sharp edges. If the copper foil breaks, either remove it and apply new one, or cover it with another piece to ensure electrical continuity.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;When reassembling the first car, the long plates kept falling so I held them in place with some &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;kapton&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3VTmkLQ&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;polyimide tape&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. That&#8217;s because I stupidly removed the transparent tape that was there from the factory. So don&#8217;t do that! Keep it, as it prevents these metal bars from falling in the first place.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Do not apply any oily substance to the copper foil. I&#8217;ve put a drop of CRC 2-26 contact cleaner on it thinking it would improve conductivity, only to realize later that the copper foil tape would not adhere anymore to itself due to the oily substance. &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Once the tape is applied, use the multimeter in continuity mode. We want to have continuity between the front and rear plate on each side, but &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;between the left and right sides.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That was the easy part. It&#8217;s a good intro to learn how to deal with the copper foil tape.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now we&#8217;ll add some more tape to bring our circuit to the rear of the interior, and wrap around the floor. Here are the steps.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:265.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_417348893ab69c1fc91b8d83fac7ea8ff36b8d13de7d0b4a23d8a8f63b8f2250d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First we push the rear of the floor. There&#8217;s a little tab to go through midway. The floor/seating interior is held by a pin in the middle. I suggest not bother removing it. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:270.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_6047feb5d6c65c6b4589707bfef656800c5dbcb387b73812734ff379aa6552e1d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Next, cut a piece of copper foil, and stick it at the top on the very rear part of the interior. Remove only what you need of the backing paper. Once that&#8217;s in place, fold the tape underneath and connect it to the rear metal plates, as such:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:436.51px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_750816a88b08b738bc7ec94bed89b71306b0cb9154cbac94da2454182c25e3ccd.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We fold the tape around because we&#8217;re going to connect to it from the top in the next step.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Tip: Ensure the rear metal plates are fully covered, as shown above. It seems to greatly improve power pickup -- later the metal strip wipers from the truck will contact directly with the copper foil, rather than the rear metal plate which seems to have poor conductivity.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The next part is &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;a bit more tricky&lt;/span&gt;&lt;span&gt;&#8230; I&#8217;ve done this part 3 times (on two different cars) and each time found an easier way to do this. So here&#8217;s the last installment: cut a piece of copper foil as shown below, cut off a few millimeters of the backing paper on one side and stick it over the tape that we previously folded around the end of the interior. Do &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;remove the rest of the backing paper.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:280.85px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_e84457962d7b1e910b5f3e80741a83ebf5fbf7b71fcc7c7232d93825656fdbffd.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s an important detail: we just covered a through-hole in the plastic interior, which will be used later to screw parts of the coupler. So we&#8217;re going to clear that hole. To do this I punch the hole with an x-acto knife or a small screw driver and then I clear the hold with something round (screw driver, pliers, toothpick). Should look like this:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:257.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_d68239d291fc13a5bb68701c09b1e26ffdd2fbe73d9cd6a520201d7eb979db87d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s what this looks like once we push the interior in place::&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:301.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_725bc3bba084512abd347dd884ad6ec4cc64e75d2fc7d216f1506ffe38af7298d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is a good time to perform a continuity check with the multimeter.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now it&#8217;s time to install the silver bottom plate back --it has screws that hold the interior in place, and pulling the interior down will help the copper foil make contact with the vertical strips we just installed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are 4 metal strips to install, and they must fit through the holes in the bottom plate.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:229.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_482a61a99ccce99039e824ad7d730f6b3feab72970505b4f6f6d4eb30f4ff285d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;All my attempts at vaguely placing the metal strips, then putting the bottom plate and aligning the metal strips have failed. Instead I found an alternative: put a tiny amount of white glue on the bottom plate to hold the metal strips while we fit it back on the car:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:269.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_61154530dfb4e3bf9c3d218097172196944e49b0d8740ad841cd34476c616738i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The end result should look something like that:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:294.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_422461f83c4851b5c1654e054c1339db5901231857b65f66fe20322571e307d7d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On that picture the truck is upside down, to show the screws that will make contact on the protruding metal strips.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This point is a good time to do yet another continuity check with the multimeter. We should have continuity between the front and rear protruding metal strips, but &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;between the left and right sides. We should also still have continuity to the vertical copper foil tape we left hanging around previously.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Finally we can install the 2-segment light bar from the Proto Kit:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:321.77px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_3ab909acf0a2d4c818cf613f0ef0765543e005757a16aeb77a888c27ee5aa500d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I remove a few mm of the paper backing from the &#8220;vertical&#8221; copper foil, fold it, and make it stick to the corresponding contact on the Proto LED bar.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Keep the rest of the paper backing in place -- it prevents the copper foil from making contact with the rest of the LED bar circuitry.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Install the Body-Mounted Couplers&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For that part, we&#8217;ll follow the instructions provided in the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/passenger-car-led-interior-lighting-kit&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Mainline LED kit 910-220&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. They do a good job describing it. To be honest I had to read the instructions 3 times before I could make sense of them because I wasn&#8217;t familiar with the vocabulary used. So I made my own instructions:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:416.45px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_0ca53d256e63b8cf6edcf19f2523b38d8c24db1d6507dcae589edb9d51747d9fd.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Instructions for myself:&lt;/span&gt;&lt;/p&gt;
&lt;ol start=&quot;1&quot; style=&quot;margin:0;padding:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;margin-left:36pt;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Remove the truck. Keep the screw on.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;margin-left:36pt;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;That little square plate goes at the edge with the two little horizontal holes. It&#8217;s called a &#8220;swinging drawbar pad&#8221; in the instruction sheet.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;margin-left:36pt;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Thread the longer screw through the washer and then through the &#8220;swinging drawbar&#8221; (the piece with whiskers), then screw this in place. If installed correctly, the little whiskers bump against the plastic indentations and the drawbar self-centers itself, which is very entertaining.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;margin-left:36pt;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Take the original coupler and copper centering spring from the original truck and place it on the drawbar. It&#8217;s a bit finicky because there&#8217;s nothing holding it in place at that point.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;margin-left:36pt;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Place the longer plastic piece, the &#8220;drawbar brace cover&#8221;, on top of the coupler and attach it using the two medium screws. Note that there&#8217;s a ledge on the plastic, and that ledge goes towards the outside. I find it useful to put light pressure on the &#8220;cover&#8221; to keep the coupler from falling off. Once screwed in place, verify the coupler can swing freely.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;margin-left:36pt;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Finally place the new trucks in place (see below), with the screws in contact with the metal strips protruding from the car&#8217;s bottom (the truck is shown upside down in the picture&#8230; the little screws should run against the metal strips on the car).&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Tips:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It really helps to &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;carefully&lt;/span&gt;&lt;span&gt;&amp;nbsp;read the instructions fully first, and examine each piece to see where each one goes.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There are 3 screw sizes in the kit; I use the caliper to get a rough idea of which one is which. For each coupler we need one longer screw (M2x5), and two of the medium ones (M2x4). We don&#8217;t &lt;/span&gt;&lt;span&gt;use the very&lt;/span&gt;&lt;span&gt;&amp;nbsp;tiny screws.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Install Power-pickup Trucks&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We just use the trucks that came with the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/passenger-car-led-interior-lighting-kit&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Mainline LED kit 910-220&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Simply reuse the screw from the original silver truck, place the new black trucks in place, and voil&#224;! &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Things to watch out for: the little screws that make electrical contact must of course be touching the metal strips installed in the bottom plate of the car&#8217;s body. Needless to say, in my trial-and-error, I managed once to install both trucks and totally forgot to install the metal strip wipers&#8230; Only did I get a clue when electrical contact was not being made.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/85-budd-dome-coach-ready-to-run-santa-fe-silver&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;dome car product listing&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, I notice that the trucks are oriented with the brake cylinders towards the outside.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;At this point, we&#8217;ll do yet another quick continuity check. Power should be continuous from each trucks&#8217; side to the LED bar, however there should be no continuity between the right and left sides of the trucks. If there is, something&#8217;s wrong!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If the continuity check looks fine, now&#8217;s a good time to put the car on the track. The LED bar should turn on!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:206.22px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_6288090e466c1a7b89bd79c9f907216c2f25bd8e62768746df75ef80da1adc66d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Order of operation: it&#8217;s easy to install the trucks before mounting the couplers just to see the LED bar lighting with the car on the test track&#8230; but if you do that, remember you&#8217;ll need to remove the truck to install the couplers anyway. It&#8217;s only one quick screw so it&#8217;s no big deal.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Finally we can snap the roof back in place, right? Wrong! First we&#8217;re going to put it on the track and verify it still lights up, and that installing the couplers and trucks has not messed up anything. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:240.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_33145dd8b46fee987ba9e8b4c242a7c0cbd3e08504b1aa08c35195fd705ac861i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Once that&#8217;s validated, we can put the roof back in place. Note the orientation of the roof.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Tip: double check you&#8217;ve placed back the upper observation seating area before closing the roof!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Conclusion&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I hope this guide will be helpful for anyone who tries to do the same lighting conversion. There was some trial-and-error in the process, and in the end I basically redid some of these steps 2 or 3 times on both cars because I&#8217;d keep forgetting one step or mess something up. On the other hand, that led me to find an easier way to perform some steps. It&#8217;s well worth it, the results are really nice. I also go to experiment with copper foil tape and found that worked really well for this project.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:244.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_ccaf5bda88f03af55fba2d79acf9502d30c5bca54dacfde850ac2cc2fa1c7964i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:254.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_656d94ce64e3cf8b6283d41991ba67edadc7d17009720a29bf191fe8b655b98ci.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:162.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_e50c8bf6ff5b2556d3fc8bf4ba436ce52d335aa0d235f5073d68bb632e1b4e20i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;</content>
<updated>2023-01-08T00:00:54-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Cab Ride Videos with the Mobius Maxi 4K</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-01-02_cab_ride_videos_with_the_mob_a8befb95.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-01-02_cab_ride_videos_with_the_mob_a8befb95.html</id>
<category term="video" label="Video"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I have a fair number of &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLjmlvzL_NxLr6EP-oa-RcA6YhSTHtBBFr&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;&#8220;cab ride&#8221; videos&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;on my channel. I particularly enjoy this kind of view. Over the years I&#8217;ve been experimenting with various ways to achieve them. This is what I&#8217;ve been doing recently:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:186.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_85fe3c03fcf8fc8af80bdee86af60db7c57e26170b6c4f3b184afae4826c678ai.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The camera I use right now is a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-01-01_mobius_maxi_4k.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Mobius Maxi 4K&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. All these cameras are designed to be &#8220;action cameras&#8221;, and record &#8220;lifesize&#8221; objects, typically outside. When used in-door, image quality tends to be unsaturated, with low contrast. That can be easily adjusted in a video editor like DaVinci Resolve or Lightworks, which I use. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One prominent issue though is focus. These cameras simply do not have any adjustable focus. They have fixed focus. It&#8217;s great when shooting live action inside or outside. It&#8217;s a problem when shooting small details on an HO layout. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the case of the Mobius v1 or the Mobius Maxi 4K, the minimal focus is about 4 or 5 inches. Anything closer than that will be blurry.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Camera Car&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One thing I did early on is create my own &#8220;camera car&#8221; custom-fitted to hold the Mobius (v1 or Maxi 4K) securely:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-left:auto;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:21pt&quot;&gt;
   &lt;td colspan=&quot;2&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:224.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:793.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_946bf0867c9e1a5258a5d70d6a5543a238e1af3033964c4178963484ee58fb7ci.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;vertical-align:top;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:162.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:396.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_55c07c6c084e2f17f0beaea641daa526a4f00285e6a63171e098824585e53debi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;vertical-align:top;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:210.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:396.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_792aaa911a19f270447138776f73eb5155a676c8dc206e17ccc625c681fbb8e9i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This offers two mounting options:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The screw allows me to thread the camera using the camera mount adapter. It places the camera higher, giving a view of the rooftop of the last car.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The front features a piece of wood with 2 strips of velcro and a hole fitting the camera mount adapter. This places the camera lower to the ground, which is better for cab rides (with no train in front) or centers a train vertically in the view.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The screw is in theory nice because I can set the camera a bit higher. Unfortunately it brings the center of gravity a bit too high and the car tends to tilt in curves. That&#8217;s a bit less of an issue with the camera on the wood holder.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are two possible kinds of videos here: a &#8220;real&#8221; cab ride where the camera is pushed by an engine. In this case, we don&#8217;t have anything blocking the view of the camera, and lack of near focus is not really a problem.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:256.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:797.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_ae2aea7fd2615a5e7dec48737c0e4bb42ddc9f14f074c23c44c89d1cf442637ei.jpg&quot; style=&quot;height:439.00px;margin-left:0.00px;margin-top:-136.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One thing to be cautious about, though: placing the camera closer to the ground makes everything look like it&#8217;s going faster. That&#8217;s a pure psychological effect. In my early cab rides, I often got viewers complaining that I was running &#8220;at slot car speed&#8221; when the train was at the same speed as when filmed from the outside! The solution is simple: remember to slow down. On a DCC 28-speed scale, I simply run at least 2 or 3 speed notches slower.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The other kind of video is with the camera turned towards an engine or the last car of a train. The fixed focus makes the front of the engine or the car fuzzy, which is annoying. And because it&#8217;s so close, it takes a lot of screen space and hides the rest of the layout.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:409.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:797.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_a474fa47adfc44fc3d9e354ba09fab8cde7bd3239b786aa38cf89dac1bb7c827i.jpg&quot; style=&quot;height:448.00px;margin-left:0.00px;margin-top:-39.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Ideally we want some space between the camera and the last car. In early videos, I&#8217;ve tried doing a &#8220;chase&#8221; kind of thing where an engine with the camera is following the train I want to record. This was finicky, the speed match and the distance were never perfect, and I was never fully satisfied with the result.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Experiments&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Instead, in later videos, I switched to attaching the camera to the rear of the train. To prevent the last car from being distractingly out of focus and filling the screen, I use a buffer between the camera and the train: stick the camera on a flat car, and accept that everything right in front of the camera would be blurry. I&#8217;ve tried several variations of that: using a gondola, or using a logging car, or using a flat car in the between.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:298.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_bcc0fc73f58762ec273b4ba7e2b50b1d6d1c25bd91116e2aa51e2408bc35d14di.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;1st Attempt: Processed view from SQ12 camera using a logging car as buffer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:325.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:797.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_abb6b900ee934b9e06f1f773af995b38c35ff49b0971d2bf1974c1bb5334e459i.jpg&quot; style=&quot;height:447.00px;margin-left:0.00px;margin-top:-122.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;2nd Attempt: Raw unprocessed view from Mobius v1 using a gondola as buffer.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:298.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_ad5e08c76a5641a88d10a80f1cad008944a75feff9f0a047c4dc5e9747a259bfi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;3rd Attempt: Raw unprocessed view from Mobius Maxi 4K using a flat car as buffer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;None of these have been satisfactory. Notice how the part next to the camera is fuzzy and out of focus.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Draw Bar&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What I&#8217;ve tried last year is to create an &#8220;extended coupler&#8221; or a &#8220;draw bar&#8221;. I&#8217;ve tried a few variations, from a piece of copper wire, to 3d printing my own versions, including in &#8220;transparent PETG&#8221; (which turned out to not be that transparent):&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:173.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:797.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_e602948c0ef622f619588c14e81a86783111b76563b7012579aad52c3b8b859ei.jpg&quot; style=&quot;height:443.00px;margin-left:0.00px;margin-top:-166.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;Early version of a 4-inch draw bar with a Kadee coupler at the end&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The current version I use is a 5-inch long draw bar 3d-printed in PLA and painted gray. It&#8217;s not perfect, and some people find that distracting, to which I somewhat reluctantly agree. In the earlier versions, I fitted a Kadee coupler at the end connecting to the train. In the latter versions, I removed that and instead the 3d-print contains a little flat surface with a pin that directly fits inside the train&#8217;s coupler. That would not work with a European HO or an old-style NMRA coupler.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:418.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_1909549eb3e726f0db90d2776f20f94689bbc1570c5cdb62e1505247b877ef81i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;A variety of draw bars, from 2 mm thick down to 1 mm thick. PETG or PLA&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &#8220;transparent&#8221; PETG can be seen above (3rd bar from the top). Unfortunately when filmed on video, it results in a shiny milk-white object painfully visible on camera. To make the draw bar less outstanding, I now spray paint it using &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.rustoleum.com/product-catalog/consumer-brands/stops-rust/cold-galvanizing-compound-spray/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Rust-Oleum Cold Galvanizing Compound&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;because it gives a nice gray dull matte finish, and I paint the car coupler part in black using art acrylic paint since most couplers are black.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:305.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_af77afdd9438b6249f56aee02c7d5fb9b44c2de5aff1a33c6db9a29baa335b4fi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;Instead of a full coupler, the 3d-printed end contains notches that fit in a Kadee coupler (see 3d drawing below)&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s the model on TinkerCad: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.tinkercad.com/embed/8ISmuUwy1O4&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.tinkercad.com/embed/8ISmuUwy1O4&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:162.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_e5004ebbb4d9856815023f6aca3c22e5d09583080b4d78ae9ecccd255a60a04fi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Simply export it to STL and print in PLA.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;ve tried making the draw bar as thin as possible. I currently run versions which are 1.5 mm wide. When printed at 1 mm wide, the PETG or PLA 5-inch bar becomes too flexible and bends when pushed by the train. The 1.5 mm wide version bends a bit but not &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;too&lt;/span&gt;&lt;span&gt;&amp;nbsp;much.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;LED Banding&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&quot;Banding&quot; is that horizontal dark bands effect that appears on video when the light source&#8217;s frequency isn&apos;t matched to the shutter speed:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:199.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:521.50px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_0672601acb8c11b29128d85ad7d7b9a05841517b0fe84e64acd378967c8f7488i.jpg&quot; style=&quot;height:410.00px;margin-left:-11.50px;margin-top:-85.00px;width:544.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This typically appears with fluorescent lighting or LED drivers and dimmers.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For fluorescent lighting, it&apos;s typically enough to configure the camera to match the electrical grid frequency, e.g. 60 Hz in US or Canada, 50 Hz in Europe or China. The Mobius has such a setting, and it should be set to match your electrical grid frequency. Recording should then be done at either that or half the frequency (25 or 30 fps).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For LEDs, I&apos;ve seen two types of issues: LED dimmers even with stabilized DC power, and cheaper LED lighting powered directly off AC power.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Most of the common &#8220;consumer grade&#8221; LED lights now-a-day are powered directly off the AC electrical grid. They typically use a bridge rectifier and some sort of smoothing to drive the LEDs, but often that smoothing is not strong enough and the light fluctuates at the frequency of the electrical grid. That typically results in two large dark bands recorded on video. A simple solution is to film at half the frame rate of the AC electrical grid -- e.g. 25 fps for a 50 Hz system, and 30 fps for a 60 Hz system. However the bands may still be seen moving very slowly as there&#8217;s no synchronization between the AC grid and the recording camera.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;At home, I illuminate the layout using LED lights powered by a decent AC-to-DC 12 V adapter. The output is a stable 12 V that effectively produces no banding. Later I added a LED dimmer, and that&#8217;s when I noticed banding on the video output, as per the screenshot provided above. It turns out that the dimmer works by creating a saw-tooth pattern at ~675 Hz. This is nice for the human eye yet is unfortunately very visible on video as this creates a lot of small darker bands.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &quot;solution&quot; here is, well, simply set the dimmer to full when filming. And I typically end up filming everything twice because I always forget the dimmer issue, and only once I&#8217;m done I realize all my footage is worthless and I need to start it all over with the dimmer set to full brightness.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Film Editing&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I used &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://lwks.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Lightworks Pro&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the past for editing; these days I&#8217;m using &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.blackmagicdesign.com/products/davinciresolve&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;DaVinci Resolve&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;-- Lightworks has radically awesome fast editing capabilities, but Resolve wins with integrated Fusion effects and motion stabilization. On the color grading side, they are both similar given my very limited needs. Both have a reasonably steep learning curve, yet nothing too drastic. Once learned, they are really easy to use. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I set the Mobius Maxi 4K to record in MP4, with a max length of 10 minutes. When the camera reaches that time limit, it automatically creates a new video clip. The transition is seamless once all the files are dropped in the video editor. The editor seems to handle the MP4 container better than MOV, even though they both contain h264.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The workflow I use in DaVinci Resolve is fairly minimal:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Create a 1920x1080 30 fps project, and change the image import setting to center-crop.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Drop the 4K raw footage. Apply a Y translation of 60 to focus the view a tiny bit more on the rails than the ugly layout ceiling.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Color grading: contrast to 1.1, saturation to 70. Set white balance and temperature to taste.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I typically film with 2 or 3 runs: camera car behind the train, camera car in &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;front&lt;/span&gt;&lt;span&gt;&amp;nbsp;of the train &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;looking at the engine&lt;/span&gt;&lt;span&gt;. Optionally I&#8217;d do a pure &#8220;cab ride&#8221; video with the camera car in front of the train looking forward. Another option is cut the train and place the camera car behind the engine, as I did for the UP Turbine (see below). That means for the 15~20 minutes it takes to do a full loop at Randall, I typically record at least one hour of video.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What I&#8217;ve been doing lately is use the multi-angle feature of DaVinci Resolve: recombine each clip and make a front vs back &#8220;camera angle&#8221;, then create compound clips and merge them into a multi-angle clip. At editing time, I can then switch cameras. It&#8217;s a bit more complicated than that because the segments never end up being perfectly synchronized, but overall it does simplify a bit the final editing. The only drawback is that the compound clips are locked into the project resolution (1920x1080), so once we have the multi-angle clip it&#8217;s no longer possible to pan around in the original 4K medium.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here are a couple videos I made using the Mobius Maxi 4K camera:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/149iXxyDCIQ&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/-Pq07FW9Erk&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;More &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLjmlvzL_NxLr6EP-oa-RcA6YhSTHtBBFr&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;videos are available here&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Follow up read&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-06-04_davinci_resolve_plugin_for_t_4126bb12.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;A custom DaVinci Resolve Plugin to remove the draw-bar.&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-01-02T00:00:13-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Mobius Maxi 4K</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2023-01-01_mobius_maxi_4k.html"/>
<id>https://www.alfray.com/trains/blog/train/2023-01-01_mobius_maxi_4k.html</id>
<category term="video" label="Video"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;ve done a number of &#8220;cab ride&#8221; videos at the Randall Museum layout over the last few months using a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3wkNceb&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Mobius Maxi 4K&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;camera. Here&#8217;s a summary of the pros and cons of this camera, and the setup I use for filming.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the past, I&#8217;ve done my cab ride videos mostly using a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2rGJM2x&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Mobius v1 Action Cam&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. I&#8217;ve also tried the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2018-04-21_mobius_action_cam_vs_runcam_2.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Runcam 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, the &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2DXhyt4&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SQ12&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, and the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2018-12-09_sq23_mini_camera_for_cab_rides.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SQ23 camera&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, so I&#8217;ll compare it to these as well.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:233.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_fb9225fb6a3366d8572927e28deb4b4fbbcbdf73c189fc7385570eeb386ba2f6i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:308.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_d9f67e79e93a81a2cca5127753b30070496484238e1b1b6108a3532748b89f7di.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;The Mobius Maxi 4K (left) vs the Mobius v1 (right)&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Size&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The Mobius Maxi 4K fits perfectly on an HO-size gondola or flat car, and fits in the NMRA HO gauge with lots of room to spare:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:418.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_a8e2c839aa1ce6f18991a21f7d38d8a74c6912afd1244f73a90031bd53c58a97i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:248.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_48ee922b9086500d598c6fd317b7d0bc757c2a974d2d21dc6512a54c141cb388i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Comparison&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The previous Mobius &#8220;v1&#8221; Action Cam that I was using was a 1080p camera. I liked it back then because the form factor was good -- at 1 inch wide, it fit perfectly on a HO flat car (as shown above with the Maxi 4K). Back then the only suitable alternative was the older GoPros which were much larger. The Mobius v1 camera view has some barrel distortion, and I always used to center-crop the image to 720p. That removed all the barrel distortion. Eventually I outgrew that resolution -- nowadays I want 1080p content -- which means I need a larger resolution and crop into it. The Maxi 4K fits that perfectly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In between I tried other cameras, such as the Runcam 2. Initially I was attracted by the wifi connection aspect of that camera -- one problem with the Mobius v1 is that there&#8217;s no way to know what the view of the camera looks like beforehand, so it&#8217;s impossible to set it up correctly. The Runcam 2 would have fixed that except I had a lot of issues with it (unreliable sound, unreliable wifi connection, bad lens alignment).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The Mobius Maxi 4K Is fairly similar in size and behavior to the Mobius v1, adds 4K video which I can crop to 1080p, and adds the optional wifi I was lacking. In short, after having used it for around 6 months, it&#8217;s pretty good at what it does and it&#8217;s my go-to camera for cab rides now.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Features&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Comparing the Mobius Maxi 4K to previous cameras I&#8217;ve tried:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2018-04-21_mobius_action_cam_vs_runcam_2.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Runcam 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: The Runcam was &#8220;almost&#8221; a good replacement for the Mobius v1, except it was &#8220;death by a thousand cuts&#8221; -- the sound recording volume was bad, the lens was initially poorly focused, the wifi was unreliable. And it was only a 1080p camera, thus in that regard it did not add much more than the Mobius v1 itself.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;T&lt;/span&gt;&lt;span&gt;he &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2DXhyt4&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SQ12&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2018-12-09_sq23_mini_camera_for_cab_rides.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SQ23&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;cameras had an attractive form factor (a little cube); their major flaws was that they were really 720p @ 25 fps cameras advertised as 1080p @ 30 fps, using interpolation to make the image bigger and a 2:3 pulldown to inject duplicate frames to produce a fake 30 fps stream. So in essence, a full marketing lie.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What I like about the Mobius Maxi 4K:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The form factor is excellent for my usage. It fits neatly on an HO-sized flat car or gondola. More on this in the next post.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It has a low height profile, which works very well for this application, unlike GoPro-like cameras which tend to be more vertical. The Mobius Maxi 4K has tunnel clearance, and fits in the NMRA HO profile gauge.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The &#8220;native&#8221; resolution is 3840 x 2160, aka &#8220;4K&#8221;. To be clear, I do &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;produce 4K videos! I only produce 1080p videos, so why bother?&lt;/span&gt;&lt;span&gt;&amp;nbsp;The larger resolution means I can center-crop the video in the editor to extract the center 1080p portion of it, without rescaling. Combined with the integrated Lens Distortion Correction (LDC), this essentially removes all the barrel distortion in the final video.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Because I extract 1080p from a 4K image, I can pan right-left for a better view in curves at editing time.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Interaction with the camera is done using 3 buttons at the top which are fairly intuitive. They kept the same buttons as with the Mobius v1, so that helps a lot in familiarity: power button (on/off/wifi), recording button, and mode button (2 banks of settings can be used, more on that later).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The camera records to an SD Card. It has USB C, and with a Windows 10/11 computer we have direct access to the files.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There is now wifi support, and an app can be used on Android or iPhone to view the video. To be clear, the mobile app is rather meh, but it does get the job done to get a view from the camera.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Configuration can still be done using the external Windows-only &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.mobius-cam.com/en/mobius-maxi-4k-c-29_35/mobius-maxi-4k-camera-dashcam-version-with-super-capacitor-p-256&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;mSetup app&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;as before. This is a very simple &amp;amp; well-done app, and it really gets the job done to allow each and every feature to be controlled easily. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;My video recording sessions typically involve running the camera for one hour continuously, and the battery handles that just fine.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now the downside. There are a few minor issues and there are a number of a features that I do not use on the Mobius Maxi 4K, because they are irrelevant to me, or do not make sense:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The 4K mode is 30 fps. Forget the advertised 60 fps. There&#8217;s a 2.7K (2704x1520) @ 60 fps mode, which would be very appealing for my type of videos. But that&#8217;s a lie in the sense that the recorded stream is &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;still a 30 fps video where each frame is duplicated twice!&lt;/span&gt;&lt;span&gt;&amp;nbsp;Not only is this a pointless feature, but it actually totally ruins the motion stabilization algorithm in DaVinci Resolve. Thus for my usage, only 30 fps should be used.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There&#8217;s an Electronics Image Stabilization option but I can&#8217;t use it in 4K 30 fps because it requires to turn Lens Distortion Correction off.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There&#8217;s an Auto Low Light feature that is great to capture more light e.g. in dark tunnels, but unfortunately the camera does that by switching the recorded stream from 30 fps down to 15 fps, and then duplicating every frame. Not only does it look more choppy, but, again, that totally ruins the motion stabilization algorithm in DaVinci Resolve so I can&#8217;t use it.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Wifi, as with the Runcam 2, uses a lot of power out of the small battery, so it&#8217;s not really a good suitable recording mode. I sometimes enable it to set up the camera, then turn the wifi off and record on the sdcard.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;I don&#8217;t know if it&#8217;s due to the limited Android app or the camera, but I cannot record on the sdcard while the Android app records via the wifi. Given the workflow above, that&#8217;s not a big issue, yet it&#8217;s important to know that limitation.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The recorded video is a bit on the &#8220;flat&#8221; side. I really need to boost color saturation &amp;amp; contrast in DaVinci Resolve. The white balance is fairly correct even with the inconsistent lighting we have on the model railroad.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Be very careful with cheap AC-based LED drivers as they easily tend to produce banding. I&#8217;ll expand on that in the next post.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;From the Mobius v1 experience, eventually the battery will degrade and not last as long -- this tech of battery tends to last about 3 years if left to deplete. The v1 contains a small LiPo battery. On the plus side, it&apos;s a fairly common type of battery and one can easily find replacements for around $10 on Amazon or eBay.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Settings&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Like the Mobius cam v1, these are 3 modes: video 1, video 2, and photo (e.g. time lapse). I never use the photo/time lapse mode. I do use video modes 1 &amp;amp; 2 to customize the sound microphone volume: I use a default recording audio volume of 75%. It works well when the camera is at the back of the train or the engine, yet it results in a lot of clipping when next to an engine with a very loud sound reflecting in windows or tunnels. For that case, I have the other video mode with audio recording level set at 50%.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-left:auto;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(252, 229, 205);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;Mode 1 (orange)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(207, 226, 243);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;Mode 2 (blue)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;50 Hz NTSC, gravity off, power off 30s&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;-----&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;Timestamp Off, Rec Indicator On, No rotate.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;background-color:rgb(252, 229, 205);font-weight:700;vertical-align:baseline&quot;&gt;Audio Volume 50%&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Loop Off (&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;stops when full&lt;/span&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;).&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700;vertical-align:baseline&quot;&gt;Format MP4&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;FOV Wide&lt;/span&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;, WDR On.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;4K&lt;/span&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;&amp;nbsp;30 fps (3840 x 2160)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;Video Quality High&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;Video Len 10 min&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;-----&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700;vertical-align:baseline&quot;&gt;Auto Low Light OFF&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;Slow Mo Off, Motion Detect Off, Lapse Off&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;EIS Off (cannot be used with LDC)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;LDC Lens Distortion ON (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;for both modes&lt;/span&gt;&lt;span style=&quot;font-weight:700;vertical-align:baseline&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Output &lt;/span&gt;&lt;span style=&quot;font-weight:700;vertical-align:baseline&quot;&gt;Gyro Data off&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;50 Hz NTSC, gravity off, power off 30s&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;-----&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;Timestamp Off, Rec Indicator On, No rotate.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;background-color:rgb(207, 226, 243);font-weight:700;vertical-align:baseline&quot;&gt;Audio Volume 75%&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Loop Off (&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;stops when full&lt;/span&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;).&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700;vertical-align:baseline&quot;&gt;Format MP4&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;FOV Wide&lt;/span&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;, WDR On.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;4K&lt;/span&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;&amp;nbsp;30 fps (3840 x 2160)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;Video Quality High&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;Video Len 10 min&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;-----&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700;vertical-align:baseline&quot;&gt;Auto Low Light OFF&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;Slow Mo Off, Motion Detect Off, Lapse Off&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;EIS Off (cannot be used with LDC)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;LDC Lens Distortion ON (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;for both modes&lt;/span&gt;&lt;span style=&quot;font-weight:700;vertical-align:baseline&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Output &lt;/span&gt;&lt;span style=&quot;font-weight:700;vertical-align:baseline&quot;&gt;Gyro Data off&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;height:11pt;text-align:left&quot;&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;To adjust the settings, use the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.mobius-cam.com/en/mobius-maxi-4k-c-29_35/mobius-maxi-4k-camera-dashcam-version-with-super-capacitor-p-256&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;mSetup app&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;by finding it here:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Go to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.mobius-cam.com/en/mobius-maxi-4k-c-29_35/mobius-maxi-4k-camera-dashcam-version-with-super-capacitor-p-256&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;this reseller page&lt;/a&gt;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;In there there&#8217;s a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://mobiusactioncam.com/wp-content/uploads/downloads/maxi4K/MM4K%20User%20Manual%20EN.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;link to the user manual&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Scroll down and there&#8217;s a &#8220;Windows Software&#8221; link to the mSetup app.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;There are links to the &#8220;iSmart DV2&#8221; app that can be used on either Android or iPhone to use the camera over wifi.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The mSetup app can also be used to update the firmware on the camera.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-01-02_cab_ride_videos_with_the_mob_a8befb95.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;In the next post&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, we&#8217;ll look at how I use that camera. I have a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLjmlvzL_NxLr6EP-oa-RcA6YhSTHtBBFr&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;number of videos on my channel&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;using this camera, here are some of them:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/LjKOmGvScYE&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/k6txws5ue-U&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Follow up read&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-01-02_cab_ride_videos_with_the_mob_a8befb95.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;How I use this camera using a custom camera-car.&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2023-01-01T00:00:36-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Shell Removal: HO Walthers Mainline SD70ACe</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2022-10-09_shell_removal_ho_walthers_ma_aaa6a775.html"/>
<id>https://www.alfray.com/trains/blog/train/2022-10-09_shell_removal_ho_walthers_ma_aaa6a775.html</id>
<category term="train" label="Train"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;m preparing two &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/randall/2022-10-08_issues_with_the_walthers_mai_53cea6e7.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;new Walthers Mainline SD70ACe&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to be the main Passenger Automation engines at the museum. These are &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/emd-sd70ace-esu-r-sound-dcc-union-pacific-r-8330-armour-yellow-gray-red-sill-u-s-flag-high-headlig&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Walthers UP #8312 and UP #8330, HO scale&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, with ESU LokSound decoders. There&#8217;s some kind of drive noise issue out of the box so I need to remove the shell of the engines to investigate.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Removing the Shell on the Walthers Mainline SD70ACe&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That&#8217;s an adventure. Well, not quite, because I&#8217;ve done similar engines. Walthers is very nice and provides documentation that &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;clearly&lt;/span&gt;&lt;span&gt;&amp;nbsp;explains how to do that: remove the couplers, remove 4 screws somewhat tucked under the truck frames, no need to remove the fuel tank. Seems fairly standard procedure.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Removing the couplers&lt;/span&gt;&lt;span&gt;&amp;nbsp;is easy. Tip: hold the coupler boxes by their sides and it&apos;s fairly easy to keep the entire coupler box intact, and neatly put it aside as-is without the whole assembly disintegrating in the process. That was much appreciated.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now when the documentation says to &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;remove the 4 screws under the chassis&lt;/span&gt;&lt;span&gt;, they meant the 6 screws. There are two on the inside part of the trucks next to the fuel tank, and two by each coupler. In retrospect I think that&#8217;s what the doc was trying to say, but it wasn&#8217;t super obvious when I read the first time. It&#8217;s easier to see it in a picture:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:328.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_5a92cde360e619662794707cf4bac54e449fcea7a735ffb6914b61e7af078415d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Tip&lt;/span&gt;&lt;span&gt;: Not all the screws are the same head shape or the same length, so store them in a way you remember where each one came from.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As for the fuel tank, it does not need to be removed. There&#8217;s a benefit to removing it though. Once removed, it exposes the metal well for the motor, which gives us a very good place to grab the chassis when trying to gently remove the top shell.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To remove the shell, I do the usual little dance: try to get one side a bit loose -- front around the cab, and back around the rear vent fan. In this one, there&#8217;s clearly very tight tolerance around the cab so I gently pull the sides outwards, and that helps lift the shell. That&#8217;s where removing the fuel tank is helpful. Once I get one side slightly up by e.g. a quarter of an inch, I then work on the other end, in order to move the shell up more or less horizontally.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Finally I get the shell loose, and move it gently on the side, as all the lighting wires are attached to the cab:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:253.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_99c84e0da67796fcf6830770b60cf38e3280a1c3b4ea0a17c5728d6608e76481i.jpg&quot; style=&quot;height:595.43px;margin-left:0.00px;margin-top:-168.56px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:200.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_3146974dfa24c9635cd855d4cc36f3aab57d2b7bd3cb7004d1af57a12befbe8ci.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Once open, the design looks fairly clean.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When I tried the engine, I thought the front headlight was quite weak. We can see the cause of that here: the front headlight LED is mounted on the chassis, &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;behind&lt;/span&gt;&lt;span&gt;&amp;nbsp;the cab. There&#8217;s a clear plastic light guide catching that light and piping it to the front headlight above the nose. That&#8217;s the issue. That light guide doesn&#8217;t propagate a lot of light, and we can see some bleeding in the cab. Obviously this would have been more efficient with a LED mounted in the cab, yet likely more complicated to install in the factory.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Another design issue is with the speaker pointing downwards. I tend to think these give a fairly weak sound. We can clearly see that there are 12 little holes drilled in the chassis in front of the rear worm gear and that&#8217;s all the sound has to get out of the engine before it &#8220;reflects&#8221; on the track. It&#8217;s not much. The chassis would have allowed plenty of space to put the speaker pointing upwards, although that would have required some openings in the top radiator fans.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The decoder reads &#8220;ESU 5.1.R0&#8220;. That seems a tad different from the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.esu.eu/en/products/loksound/loksound-5-loksound-5-dcc/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;regular LokSound 5&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;I&apos;m used to because it lacks the solder pins at the end of the board, so I will assume it&apos;s an OEM-specific version.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Update&lt;/span&gt;&lt;span&gt;: The decoder is an &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;ESU &#8220;Essential Sound Unit&#8221;&lt;/span&gt;&lt;span&gt;. It is fully supported under JMRI 5.0 Decoder Pro. This is essentially a &#8220;limited&#8221; OEM-specific version of the ESU LokSound 5 decoder with a simplified feature set, notably a limited function map page. Both Walthers and Scale Trains use these &#8220;Essential Sound Unit&#8221; decoders.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If you use something fancy like a ProtoThrottle, these decoders can be a problem. However you just need basic running capabilities like I do, these decoders are just fine. On the plus side, because their function map is limited it only takes Decoder Pro a few minutes to read it (vs 30+ minutes for a full LokSound 5 decoder with its thousands of CVs) &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;and&lt;/span&gt;&lt;span&gt;&amp;nbsp;the function page is IMHO a lot easier to program -- maybe it&#8217;s limited but it offers just what I need.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;According to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://groups.io/g/Loksound/topic/75844425?p=Created,,,20,2,0,0&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;this 2020 post from the LokSound group.io forum&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, earlier firmware of these decoders lacked the memory function, which was then restored in a later firmware version. The firmware is upgradable via a LokProgrammer.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Because these decoders are OEM-specific, there is no documentation for it on the ESU web site. Instead the OEM (Walthers, or ScaleTrains) will have a list of CVs on their product page. The downside is that it&#8217;s a cryptic list. But for example here I need it to change the horn.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2022-10-09T00:00:54-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">An Update on the Walthers Mainline SD70ACe</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2022-10-09_an_update_on_the_walthers_ma_49a0f7ec.html"/>
<id>https://www.alfray.com/trains/blog/train/2022-10-09_an_update_on_the_walthers_ma_49a0f7ec.html</id>
<category term="train" label="Train"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;m preparing two &lt;/span&gt;&lt;span&gt;new Walthers Mainline SD70ACe to be the main Passenger Automation engines at the museum. These are &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/emd-sd70ace-esu-r-sound-dcc-union-pacific-r-8330-armour-yellow-gray-red-sill-u-s-flag-high-headlig&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Walthers UP #8312 and UP #8330, HO scale&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, with ESU &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;LokSound&lt;/span&gt;&lt;span&gt;&amp;nbsp;decoders.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;ve had some quality surprises with these engines new-out-of-the-box, so I&#8217;ll document that here.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The TL;DR is that I&#8217;m sending them back to Walthers and they will fix what are known issues with them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Tip&lt;/span&gt;&lt;span&gt;: If you have engines of the same run (Walthers Mainline DCC &amp;amp; Sound SD70ACe 910-19865 up to 910-19876), please reach out to Walthers&#8217; customer support. They have been very courteous and helpful in dealing with the issues listed here, so please give them a chance to fix things (assuming you have any issue of course). Walthers &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;should&lt;/span&gt;&lt;span&gt;&amp;nbsp;have sent your retailer a note, and your retailers &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;should&lt;/span&gt;&lt;span&gt;&amp;nbsp;have contacted you about potential defects in that specific product run. In my case it turns out that there was a gap in that communication pipeline and it never happened so I had to figure most of this myself even before reaching out to their customer support.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In my case, the affected parts were Walthers Part# 910-19873 and Walthers Part# 910-19874.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Out of the Box&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Disappointedly, out of the box, the engines already clearly showed issues that would require some work:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The nose numbers plates were loose in the box. Needs to be glued.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;One of the engines&#8217; front snow plow was also loose in the box. The other one was still attached.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The ditch lights have unequal intensity.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;They make a weird noise when running&#8230; something&#8217;s definitely very wrong in the rear truck.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:369.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_c2bc51857fca26d96deef577f5527b16482534efc112b5856f220b5e9ca03faei.jpg&quot; style=&quot;height:483.13px;margin-left:0.00px;margin-top:-48.91px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;UP 8312 and UP 8330 came with a snowplow and the number plates fallen in the box.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s discuss this below.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Issue 1: Cosmetic Parts Issues&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Out of the box, I was disappointed to see both engines were lacking the nose number plate/headlight. These were in the box. One of the snowplows was also off. I&#8217;ll need to glue them both back correctly -- the last thing I want is for a loose part to come off when running in automation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:296.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_44c61d80c9a0c0926bb2d031a6f5ca91335331039ddfd1342c51c6c5cc88f896i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;8330&#8217;s ditch lights are very uneven. Notice the lack of snow plow and number plate&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For the snow plows and the number plate, that&#8217;s easy. All I have to do is glue them back in place. How hard can that be?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Jim has a bottle of &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3EAhbmT&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Zap Thin CA&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(cyanoacrylate glue, a.k.a. super glue) so I grab that and very quickly realize that thing is dripping&#8230; on my fingers. Oh, that&#8217;s not good! I quickly made sure to separate all my fingers before I got them stuck together, rushed to the bathroom to wash my hands with lots of warm water and soap. That leaves a hard deposit on CA on a lot of skin, which I&#8217;m not fond of, and it takes several days to break down.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Tip to get rid of cyanoacrylate glue&lt;/span&gt;&lt;span&gt;: At home, use vegetable oil or mineral oil. I don&apos;t have any at the museum, but I have mineral spirit&lt;/span&gt;&lt;span style=&quot;vertical-align:super&quot;&gt;(*)&lt;/span&gt;&lt;span&gt;&amp;nbsp;which is also good to break it down. Soak the hardened CA deposit with the mineral spirit and rub it a few minutes, then wash hands again because mineral spirit &lt;/span&gt;&lt;span&gt;is not&lt;/span&gt;&lt;span&gt;&amp;nbsp;the best thing to keep on the skin. The mineral spirit degrades the CA and eventually the hard CA layer will break down fairly fast (it was gone in an hour). Don&#8217;t try to pull it off, just let it break loose over time.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;span&gt;(*) This is California so we don&#8217;t have &#8220;real&#8221; mineral spirits here. We have this &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.homedepot.com/p/Klean-Strip-Green-1-qt-Odorless-Mineral-Spirits-Substitute-QKGO75CA/204831721&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;&#8220;odorless&#8221; low-VOC substitute&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;that is, however, as good as the real thing to remove paint and CA from your fingers.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Once I&#8217;m done of this sticky mess, I went back to gluing the parts but this time wearing latex gloves and applying the cyanoacrylate glue with a small toothpick -- that Zap Thin CA is very very liquid and there&#8217;s no way to get it into the desired spots otherwise. In no time, I had the two engines with their accessories restored properly:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now we can deal with the ditch lights.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;These are implemented using a tiny square LED that is inserted in the light housing from the bottom, from under the walkway. We can see the issue clearly on this close up I took before adjusting them:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:277.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_47adaa43ab28a6e7b8654ef69afa39160fd1d3dcc1f4f7a988d5f464ace57d0ad.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In that picture we can clearly see the two LED wires on the right side. When the lights are turned off, I &lt;/span&gt;&lt;span&gt;could&lt;/span&gt;&lt;span&gt;&amp;nbsp;clearly see the LED inside via the transparent lens. In this case, the left light was too high and the right light was too low. With thin needles I can adjust them up and down, and then once done I can fix them in place using &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://gesealants.com/products/advanced-silicone-2-window-door-sealant-squeeze/2709128&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;GE Clear Advanced Silicone II&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;-- I use the GE Silicone II, as it doesn&#8217;t become acidic like the GE Silicone I does&lt;/span&gt;&lt;span&gt;. The silicone dries clear and remains flexible. This is better than CA glue for this case as it means I can remove it later if I need to.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is the end result once the cosmetic issues have been fixed:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:274.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_c9b91e0f9a11ce68f64fb22152c6701a1eeda15f19f0053aa2dd07bfbc266e73i.jpg&quot; style=&quot;height:596.28px;margin-left:0.00px;margin-top:-170.79px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note that the headlight in the number plate is not very bright. That&#8217;s an unfortunate side effect of the shell design -- the light is recessed &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;behind&lt;/span&gt;&lt;span&gt;&amp;nbsp;the cab and shines through a plastic light conduit. These setups never provide full illumination.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Removing the Shell on the Walthers Mainline SD70ACe&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now it&#8217;s time to fix the prominent and worrying gear noise issue on the rear truck, which means I need to remove the shell.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Removing the shell was its own little adventure and that was too much to explain here so it&#8217;s all detailed in a separate page: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2022-10-09_shell_removal_ho_walthers_ma_aaa6a775.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Shell Removal: HO Walthers Mainline SD70ACe&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Issue 2: Rear Truck Noise&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now we can deal with the core issue&#8230;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When running the engine on the balloon track, I heard a &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;very strong &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;font-weight:700;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;gear&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;&amp;nbsp;noise&lt;/span&gt;&lt;span&gt;&amp;nbsp;from the rear truck:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I was hoping it wasn&#8217;t a broken gear, as this is impossible to replace unless I request exchanges for the entire engine. But then they &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;both&lt;/span&gt;&lt;span&gt;&amp;nbsp;had &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;exactly&lt;/span&gt;&lt;span&gt;&amp;nbsp;the same issue, and it would be really weird for 2 new Walthers engines to come with broken gears. Or at least I hope so.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Luckily the issue was both obvious, yet totally surprising. I was not expecting to see this:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/wJsedfqOYTc&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:366.48px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_77c69e85a96e4464d6c969f5d3969005f7295da2ea728c5251efe95415999796d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So yeah, the speaker is loose and doesn&#8217;t hold in place in the speaker baffle. Because it points down towards the track, the speaker is just falling and resting on the drive shaft. The noise I was hearing is the drive shaft socket rattling on the speaker at every single drive shaft rotation. Since it&#8217;s an oval speaker, that means it&#8217;s hitting just the end of the speaker membrane, where it is glued on its support. Amazing.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;m glad I opened the engine right away and didn&#8217;t try to run it too long on the track. That cannot be good for the speaker. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When I build custom-made speaker baffles for DCC conversions, I generally use &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://gesealants.com/products/advanced-silicone-2-window-door-sealant-squeeze/2709128&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;GE Clear Advanced Silicone II&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to hold the speaker in the baffle. When the silicone cures, it holds well to the plastic, and it&#8217;s still removeable. Unfortunately here I don&#8217;t think I would have been able to easily apply it since there&#8217;s not enough clearance to put a thin layer between the speaker and the baffle. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So instead I went for kapton tape to hold the speaker in place. I cut a thin strip of the tape I have at hand and carefully inserted it at both ends of the speaker:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:328.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:797.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_670d96c529bd7d528354325f86113a76321343aaefa7e6aae7225c09097eb7bdi.jpg&quot; style=&quot;height:597.00px;margin-left:0.00px;margin-top:-195.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:326.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:797.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_097619a260ef44bcd5633e958ed9114110f3c67cc8b1a9e63de980ca9b5c18b2i.jpg&quot; style=&quot;height:597.00px;margin-left:0.00px;margin-top:-139.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s a bit hard to see on the picture, yet now there&#8217;s half a millimeter of clearance between the drive shaft socket and the speaker. No more rattling.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;After this fix, and after grumbling for 10 minutes while trying to put the shell back on, I had an engine running &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;seemingly &lt;/span&gt;&lt;span&gt;silently and very smoothly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Then I proceeded with the other engine which had &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;exactly&lt;/span&gt;&lt;span&gt;&amp;nbsp;the same issue, a loose speaker resting on the drive shaft and hitting the shaft socket at each rotation. I wonder how many people have that defect and can&#8217;t hear it or just think it&#8217;s part of the DCC sound effect.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Speaking of which, one final note: this is one of these designs with the speaker pointing downwards. I tend to think these give a fairly weak sound. We can clearly see that there are 12 little holes drilled in the chassis in front of the rear worm gear and that&#8217;s all the sound has to get out of the engine. It&#8217;s not much. The chassis would have allowed plenty of space to put the speaker pointing upwards, but then we know why this isn&#8217;t done here: because it would require openings in the top of the plastic shell, and that&#8217;s a lot more tooling.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;But wait, there&#8217;s more&#8230;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;ESU LokSound Auto-tune&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The ESU LokSound decoder has a neat feature: an &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dccwiki.com/LokSound_Auto_Tune&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;&#8220;Auto Tune&#8221; procedure&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to recompute the BEMF &amp;amp; load compensation for the engines. I&#8217;ve used it before and it&#8217;s great to get very good crawling speed out of these engines.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Normally the procedure is to turn all functions off, set CV 54 to 0, then send an F1 command. The engine runs for a few feet and adjusts its BEMF values. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Except when I tried that I got&#8230; nothing. It&#8217;s as-is the feature was not present in these engines. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s worth noting that these engines use an &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;ESU &#8220;Essential Sound Unit&#8221;&lt;/span&gt;&lt;span&gt;&amp;nbsp;decoder. This is a simplified version of the ESU LokSound 5, so it&#8217;s possible they do not contain the programming necessary to perform the LokSound Auto-tune.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;OK fine, I set back CV 54 to its default factory value of 50. There&#8217;s a bit of a mystery here, which I don&#8217;t like, but let&#8217;s move on.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Issue 3: Decoder Issues&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s finally break-in these engines. I put them both on the mainline on parallel tracks. #8312 starts moving smoothly while #8330 does&#8230; nothing? Then I realize even its headlight doesn&#8217;t turn on. Nor the sound. OK fine there&#8217;s no track power, right? Nope, I try with one of the DCC flag men and there&#8217;s definitely power on that track.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I reach to move the engine when I realize, outch, &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;the hood is hot&lt;/span&gt;&lt;span&gt;. Huh that&#8217;s not a good sign. That&#8217;s exactly where the DCC decoder is located. It&#8217;s essentially overheating.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I quickly take the engine off the track, and back to the programming track, where I also notice that it does not indeed move.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Back on the bench, I &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2022-10-09_shell_removal_ho_walthers_ma_aaa6a775.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;remove the Walthers Mainline SD70ACe shell&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;again&lt;/span&gt;&lt;span&gt;. Although the ESU LokSound is a bit warm, there is nothing &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;obvious&lt;/span&gt;&lt;span&gt;&amp;nbsp;that could signal a short. At least no blackened tracks on the DCC decoder board, and no wires are exposed. I really see nothing even remotely noteworthy. I try the engine with the shell open on the programming track and it seems to work just fine. It responds to DCC commands for lights and speed, which it did not when it was overheating.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;No idea what happened, but it seems to be working now. I carefully put back the shell, making sure I&#8217;m not pinching any wire. Then I try the engine again on the programming track and it works fine. There&#8217;s a bit of a mystery here, which I don&#8217;t like, but let&#8217;s move on.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:220.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_75b9100708767e5e76fb2b0dc669caf52a3c7d691a563ab5d09e27c2a8f73ffdi.jpg&quot; style=&quot;height:597.00px;margin-left:0.00px;margin-top:-149.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Second Test Run, b&lt;/span&gt;&lt;span&gt;ack on the mainline: I try both engines and they seem to be pretty well speed matched; running them on parallel tracks, they seem to have matching speeds. I go back and forth a few times, and suddenly I realize I have no control over #8312. It starts making a weird continuous noise like a dynamic brake noise, and I can&#8217;t stop the engine, nor does it respond to any other DCC command. Eventually the engine overruns the end of the spur on a reversed turnout, shorting in the process, and that stops it. That seems to reset it and I have control again.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That has to be a fluke, so I do a few more back and forth runs on the parallel track at different speeds and again, #8312 locks up and runs without responding to DCC commands. Losing power again resets the engine.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Finally I decide I&#8217;ll just run the engines along the entire mainline at a middle speed (16 out of 28) which looks like a decent moving speed. Since both engines seemed fairly well speed matched, I consist them together with the NCE controller, and run them on the mainline, albeit with a couple feet of separation. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Off they go after Stockton Station and bam, they haven&#8217;t even reached the first curve at Sonora that again &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;both&lt;/span&gt;&lt;span&gt;&amp;nbsp;engines make the weird dynamics noise and I realize I have no control over them at all. This time it&#8217;s both of them, so it&#8217;s not an isolated incident anymore.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/kuykpcKpcdE&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is getting very frustrating and eerie so at that point I just pull off the engines from the track and stick them on the workbench. That&#8217;s when I started contacting Walthers and learned there&#8217;s a known DCC decoder issue with these engines that requires a &#8220;reprogramming&#8221;. Need to send them the engines for them to fix them, which Walthers takes care of. The speaker defect is apparently also a known issue.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;And now the conclusion&#8230;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Updates&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;2022-11-13&lt;/span&gt;&lt;span&gt;: The saga with the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/randall/2022-10-08_issues_with_the_walthers_mai_53cea6e7.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;new Walthers Mainline SD70ACe&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;comes to a very satisfactory end&lt;/span&gt;&lt;span&gt;: I got the engines back from Walthers. From what I can tell, their support team did exactly what they said they would do, namely change the firmware in the &lt;/span&gt;&lt;span&gt;ESU &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;Loksound&lt;/span&gt;&lt;span&gt;&amp;nbsp;&#8220;Essential Sound Unit&#8221; decoders. That has totally fixed the running issues. I spent some time this week-end preparing them. They are now ready to be used as replacements for automation.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;I&#8217;d like to thank all the support team at both &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline line-through;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.trainworld.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Trainworld&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;&amp;nbsp;and &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline line-through;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.walthers.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Walthers&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;&amp;nbsp;who have been very friendly and helpful in resolving this matter&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Updates&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;2023-02-19&lt;/span&gt;&lt;span&gt;: UP 8330 is now the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/randall/2023-02-19_up_8330_on_the_mainline_and__0477879b.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;main automation engine&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;2023-03-14&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/randall/2023-04-14_up_8330_unstoppable.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;UP 8330 has had one more occurrence where it totally failed to stop&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and became unresponsive to DCC commands.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;2023-07-14&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/randall/2023-07-14_up_8312.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;UP 8330 has stopped working&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and the decoder is not recognized.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;2023-09-09&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/randall/2023-09-09_up_8330_is_working_again.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;New ESU decoder replacement from Walthers&#8217; support&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. UP 8330 is now functional again.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;2023-09-20&lt;/span&gt;&lt;span&gt;: No that didn&#8217;t work. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/randall/2023-09-16_swapping_up_8312_for_up_8330_da11ebc4.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;UP 8330 ran for 2 days&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;before stopping responding again.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;2023-12-02&lt;/span&gt;&lt;span&gt;: I can&#8217;t get UP 8312 to respond to any command at all; UP 8330 magically fixed itself so I put it back in automation and there, again, it only worked 2 days.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;2024-02-09&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/randall/2024-02-09_walthers_up_8312_back_in_automation.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Brand new LokSound 5 decoder to fix UP 8312&lt;/a&gt;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&amp;nbsp;replacing the Walthers-provided &#8220;ESU Essentials&#8221; decoder that is simply just unreliable.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;2024-06-05&lt;/span&gt;&lt;span&gt;: And another &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/randall/2024-06-05_up_8330_on_the_mainline_automation.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;LokSound 5 decoder to fix UP 8330&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, replacing the Walthers-provided decoder&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;In the span of 6 months, even with brand new LokSound 5 decoders, I&#8217;ve still had the issue of the engines starting in automation and then totally failing to stop and just keep rolling and rolling, ignoring all stop commands till they are powered off. There&#8217;s clearly a reliability issue with LokSound 5 decoders over the board.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;2024-12-18&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/randall/2024-12-18_mainline_automation_woes.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;UP 8330 and UP 8312 are out of order&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;as they both developed some kind of mechanical &#8220;broken gear&#8221; noise in one of their trucks. The problem appeared first on UP 8330, so I switched to UP 8312 which&#8230; developed the same issue. This is getting so frustrating.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s been more than a year and this TrainWorld / Walthers purchase has been nothing but a waste of money and a waste of my time.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I have to point out that neither TrainWorld nor Walthers have been willing to reimburse me for the obviously defective engines, each one pointing fingers to the other -- Trainworld: &#8220;see with the manufacturer for support&#8221;; Walthers: &#8220;see with the seller.&#8221; -- thank you both for leaving me with some crappy headache.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The bottom line is that TrainWorld lost my business, essentially forever. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Walthers also lost my business. It&#8217;s not just an issue with these UP SD70ACe engines -- I bought another GP9 from them, and there have been issues right off the bat with the ESU LokSound 5 decoder. Orion got two from the same batch of GP9 -- one had the hood &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;melted&lt;/span&gt;&lt;span&gt;&amp;nbsp;by the ESU decoder, and the other one seems to have a bad motor after a couple hours of use. Sure the engines are very detailed and pretty, but mechanically they are sub-optimal. Not good designs at all.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;</content>
<updated>2022-10-09T00:00:06-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: An Update on Implementation</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2022-08-03_conductor_2_an_update_on_imp_dbef7ce8.html"/>
<id>https://www.alfray.com/trains/blog/train/2022-08-03_conductor_2_an_update_on_imp_dbef7ce8.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Although I haven&#8217;t posted anything here lately, I&#8217;ve spent most of the summer time completing the implementation of the engine for &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. The new kotlin engine is working well, with a suitable battery of unit tests, and I have a functional simulator to exercise the engine before I try it at the museum. I also converted the latest Conductor 1 script to the new Conductor 2 DSL. It&#8217;s all in the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/tree/dev&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;git repo under the dev branch&lt;/a&gt;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/tree/main/jmri/conductor/engine2k/src&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;conductor/engine2k/src&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: The new Kotlin-scripting based engine.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/tree/main/jmri/conductor/simul2k/src&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;conductor/simul2k/src&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: The new simulator.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;We can compare the Conductor 1 vs Conductor 2 scripts right here:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/blob/main/jmri/conductor/src/test/resources/v2/script_v47_8749%2B1072%2BBL4070.txt&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;script_v4.txt&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: Script v47 using Conductor 1 ANTLR-based language.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/blob/main/jmri/conductor/engine2k/src/main/resources/v2/script/script_v10.02.conductor.kts&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;script_v47_v2.conductor.kts&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: Script v47 using Conductor Kotlin-based language.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:528.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_abe1a07d11e15556037eeb049ea18a730b2f96e11ea318f80027613d528cb846i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Todo list so far:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Block sequence management.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Implement regular timers.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Implement after-timers.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Remove the need for &#8220;reset timer&#8221; that can&#8217;t work in 2k.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Simulator: display sensors, blocks, turnouts + simulation toggle.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Simulator: display engines + location on track (current node + direction).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Simulation: Simulate engine movement.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Implement Throttle to JMRI. Daggerize.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Implement Sensors / blocks. Daggerize.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Blocks are a copy-paste of Sensors right now.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Implement Turnouts. Daggerize.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Support error recovery mode.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Store current state / reload.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Compute start state + recovery method.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Throttle customization for light, bell, sound. Done via functions for now.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#10060; Timeout detection (from node to node).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#10060; &#8220;Flaky sensor&#8221; detection and compensation.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;Actual deployment:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Integration with JrmiProvider.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Throttles, Sensors, Turnouts.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; KV Server.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; Export variables in onExecHandle.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; ZeroConf advertising.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; JSON Server.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#9989; GA export.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are only two items left to complete on the list. More importantly, this is now ready for actual trial at the museum.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2022-08-03T00:00:12-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Route sequence graph in Kotlin DSL</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2022-04-26_conductor_2_route_sequence_g_361ba15e.html"/>
<id>https://www.alfray.com/trains/blog/train/2022-04-26_conductor_2_route_sequence_g_361ba15e.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Going to change the way a route sequence graph is defined in &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;from:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;nodes = listOf(&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp; &amp;nbsp; listOf(B311_start, B321_fwd, B311_rev),&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp; &amp;nbsp; listOf(B321_fwd, B330_fwd, B321_rev, B311_rev),&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;to:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;nodes = listOf(B311_start, B321_fwd, B311_rev)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;branches += listOf(B321_fwd, B330_fwd, B321_rev, B311_rev)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The current one being either a single-list or a list-of-lists is clumsy, yet more importantly it does not define what a graph really represents. In our sequence, we really have a main linear path, and then some additional &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;extra&lt;/span&gt;&lt;span&gt;&amp;nbsp;branches. That&#8217;s really what the list-of-list represents, and all lists are not equal:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The main linear sequence contains all the nodes to go through, from start to finish. The first node is the implicit starting node. All nodes are &#8220;new&#8221; and inserted in the graph.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A branch is &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;grafted&lt;/span&gt;&lt;span&gt;&amp;nbsp;on an existing graph between &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;existing&lt;/span&gt;&lt;span&gt;&amp;nbsp;nodes. The start and the end nodes of the branch are not new nodes -- at the contrary, they must exist already.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;Since these lists have different semantics, they should be defined using different keywords.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For the branches, we can use a more natural &#8220;branches +=&#8221; syntax to add them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Graph representation in memory?&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Graph is directed. We don&#8217;t need distance/cost.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;We don&#8217;t need node vs vertex objects, only nodes.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Do we need single or bidirectional? &#8658; have from+to, either being optional.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;[from?] &#8594; [this] &#8594; [to?]&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Using linked list with 0/1 incoming node + 0+ outgoing nodes.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Start node has no &#8220;from&#8221; (in main sequence or branch).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;End node has no &#8220;to&#8221; (in main sequence or branch).&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2022-04-26T00:00:31-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Kotlin DSL vs Groovy DSL</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2022-04-25_conductor_2_kotlin_dsl_vs_groovy_dsl.html"/>
<id>https://www.alfray.com/trains/blog/train/2022-04-25_conductor_2_kotlin_dsl_vs_groovy_dsl.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Over the last few months, I re-implemented my &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;prototype entirely. The initial Groovy DSL project lacked a clear structure, so I scratched it. And since I was rewriting it from scratch, I explored using a Kotlin DSL instead.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The verdict is to go with the Kotlin DSL approach.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Highlighting the pros and cons:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Pro for Groovy: I much prefer the parenthese-free syntax available in a Groovy DSL.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Groovy makes for a really elegant DSL.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Cons for Kotlin: The DSL syntax is more clumsy, requiring parentheses for function calls, etc.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Generally speaking the Kotlin syntax is a lot more arcane (which is probably why a lot of people think it&#8217;s &#8220;cool&#8221;... it&#8217;s not).&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Cons for Groovy: I cannot find a way to avoid leaking implementation classes into the DSL.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;I want to expose only pure interfaces, yet somehow I can always manage to trivially work around an interface and find its underlying &#8220;private&#8221; method or properties in a script. The Groovy runtime happily gives me access to &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;everything&lt;/span&gt;&lt;span&gt;. It&#8217;s ironically too flexible.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;In Kotlin, I can use &#8220;internal&#8221; classes to hide them effectively and the compiler prevents me from using them in the script.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Pros for Kotlin: I get a lot more compile-time errors and warnings, and the IJ integration with KTS is supreme.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Cons for Kotlin: The entire KTS feature is marked &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;experimental&lt;/span&gt;&lt;span&gt;&amp;nbsp;and even Kotlin advocates/fanboys online admit that it&#8217;s not well maintained/supported. That&#8217;s a risk to take.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So far the cons is a bit more clumsy syntax with more parentheses, yet that is consistent.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There&#8217;s a noticeable loading time when loading the script -- likely a compilation phase -- however that will only be done once at startup so it can be acceptable. I need the full-size script to understand if that time is linear or becomes unreasonable.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One of the reasons for choosing Kotlin is that so far the DSL interface is more easily sanitized. With Groovy, too much of the implementation leaks into the DSL with no obvious way to prevent access. With Kotlin only whatever is exposed in an interface is accessible (although of course reflection could be used, but we are not to prevent that).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Loading time:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Groovy DSL: 2.9s&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Kotlin DSL: 12s&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2022-04-25T00:00:12-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Dead Spot Detection Car for DCC</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2022-03-15_dead_spot_detection_car_for_dcc.html"/>
<id>https://www.alfray.com/trains/blog/train/2022-03-15_dead_spot_detection_car_for_dcc.html</id>
<category term="train" label="Train"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s my latest DIY experiment: a homemade &#8220;dead spot detection car&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:184.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_e4569c8e6cd16443b8b0c49e2fc51e418281c23914f863297bf743941eda6035i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:329.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_53fe041ed046359f4e2d3f0bb26c1212aa3077a74d5b5ab937bfdeb8c48a79afi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s a schematic and a rough explanation of how it works:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:218.14px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_9166267d8998b97d4eec8acf0ad38718647976151e8d6336785aee7e43c17c12d.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is designed to work exclusively on DCC track. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The goal is to help operators detect dead spots on the track, either by rolling the car manually or by pushing it with an engine as seen above. They need to move it till the front green LED turns off. That will allow us to determine where the break in the track continuity is located. Then using the yellow LEDs, we can determine if the break is in only one rail or both rails.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This isn&#8217;t just about breakage in the rails, either. The original motivation was to help me find issues with unpowered frogs on the layout&#8217;s turnouts. In this case by moving the car manually over a turnout, we should be able to see a green LED go off when the frog or the closure rails are not powered correctly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When building this, LEDs polarity does matter as shown in the following electrical schematic:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:285.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:576.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_35492acd669b808b24feddc794a65e6f30ccd3c600c94cf8fbdbe639969056aai.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Each diode has a 10 k&#8486; current-limiting resistor and a 100 nF capacitor for smoothing (ceramic with 104 marking).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The polarity of the LEDs relative to each other does matter -- both green LEDs must point in the same direction relative to the track, and the yellow LEDs must share a common cathode with their counterpart green LED.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The two green LEDs measure the voltage across opposite sides of the front or rear truck respectively. When the track is powered in DCC, rails A and B always have opposite polarities and thus the LED illuminates. Since DCC is a form of &#8220;alternating&#8221; voltage, the LED will illuminate regardless of the direction of the car (which is why this can work in DCC yet it won&#8217;t work in DC).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In summary:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Correct: The green LED illuminates if &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;both&lt;/span&gt;&lt;span&gt;&amp;nbsp;rails have the &#8220;correct&#8221; DCC signal for that specific truck (front or rear).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Incorrect: The green LED will be off if both rails have no voltage or have the same voltage.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;When moving the car across a block boundary with one block turned off, at some point one of the green LEDs will turn off while the other one stays on. That allows us to trivially find the block or the dead spot boundary.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The two yellow LEDs measure the voltage across diagonals between the front and rear truck. In normal conditions they should also both illuminate when the front and rear truck are powered correctly. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Randall uses an old DC common rail design, which means every single rail from one side is connected together. When we reach a block boundary and the block is turned off, actually only the &#8220;positive&#8221; rail is cut off. In that case, one of the yellow LEDs will stay lit whereas the other one will turn off. If both yellow LEDs turn off, that means the common rail is also cut off, which is not expected on an old-style layout such as the Randall one.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In summary:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Correct: Two yellow LEDs on.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Incorrect: One yellow LED off and one yellow LED on means only one rail (on the side that is off) has no power.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Incorrect: Both yellow LEDs off means no power on both rails for one of the trucks.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Example in usage:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:209.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_fb79ae1e234bf6f0d66fcfd624e13c0a3dabbba1b09bbb827fde5c03f85c4253i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the picture above, the car is sitting on the transition between blocks B21 and B30. They are both powered, is which is why both green LEDs are lit, as well as both yellow LEDs.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:212.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_a1647baa677c570da3dbfb1641641079b177c0256b922c1a5a96b9c3d19aee66i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In this new picture above, block B21 has been toggled off. The front truck is no longer powered and thus the front green LED is turned off. However toggling B21 off only cuts the outer rail (bottom one of this picture), which is why the bottom yellow LED is now off. Since the top rail is the common rail, it is still connected and thus the top yellow LED is still lit. That&#8217;s &#8220;working as expected&#8221; for this common rail design.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If the top yellow LED were off too, we would know there&#8217;s a connectivity issue in the common rail side.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Update 2022-05-12&lt;/span&gt;&lt;span&gt;: A one-page user manual has been posted here (PDF to download):&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/randall-documentation/blob/main/manuals/Randall%20Dead-Spot%20Detection%20Car%20%5B2022-05-12%5D.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Randall Dead-Spot Detection Car [2022-05-12].pdf&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2022-03-15T00:00:07-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Sequence Manager and Block Graph</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2022-02-13_conductor_2_sequence_manager_01d550b5.html"/>
<id>https://www.alfray.com/trains/blog/train/2022-02-13_conductor_2_sequence_manager_01d550b5.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is organized around the concept of routes, and each route as &#8220;manager&#8221; which defines its behavior. Upfront, I envision 3 types of route managers: idle (does nothing), sequence (aka shuttle mode), and window (a &#8220;free&#8221; algorithm better suited for continuous runs).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Right now we&#8217;ll focus on the sequence manager, for shuttle operations.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When exploring the DSL concept for the Conductor 1 extension, the suggestion is to have a block &#8220;list&#8221;, and a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;separate&lt;/span&gt;&lt;span&gt;&amp;nbsp;set of rules didcating action rules when the train &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;enters&lt;/span&gt;&lt;span&gt;&amp;nbsp;specific blocks. It&#8217;s important to realize there&#8217;s a disconnect as the rules are not strictly attached to the blocks in the block list. We track the active block in the block list, which has no rules attached to it. So how do we find the corresponding actions? Since this is a shuttle, we only need to know the block and engine direction to know which set of rules to apply.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;By comparison, when I started exploring the Groovy DSL, I used the &#8220;other&#8221; obvious implementation: the route is a list of blocks &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;and&lt;/span&gt;&lt;span&gt;&amp;nbsp;their travel direction &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;and&lt;/span&gt;&lt;span&gt;&amp;nbsp;their associated action rules. In this case, since we track the active block in the list, it is obvious which rules should be applied.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One thing I realized, as discussed in a previous post, is that specifying the travel &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;direction&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the block list is irrelevant. In short, that&#8217;s because we always progress linearly in the block list, no matter what, and the travel direction is the result of throttle actions, it is not controlled by the manager. The manager expects the script to do &#8220;the right thing&#8221; and correctly control the train to move from the currently active block to the expected next block. We will use the next block&#8217;s sensor as a signal that has happened, however we will not use the travel direction. Thus if that information is useless to the manager, it should not be specified in its block list.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s important to realize this is due to our underlying sensor structure -- we use track block sensors which detect presence at certain points but not direction. It&#8217;s possible we could have a different command station that can use an enhanced DCC/LCC protocol to detect both the location and the direction of a train. In that case, would it be relevant to have the direction? If we ever get there, we&#8217;ll likely want to have a dedicated manager handling this. There&#8217;s another problem with encoding the direction in the graph, which we&#8217;ll discuss below.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In that case, that means the block list can be described as a list of blocks and their associated rules. The rules are executed as long as this is the active block -- exactly as if each rule were prefixed with a &#8220;block active&#8221; condition. That applies to any time-delayed action. If the script needs any timed action to be executed after the train has left the block, that rule must be someone coded outside of the block&#8217;s rules.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The Groovy DSL version where the block list also describes the actions for each block has pros and cons. The pro side is that it&#8217;s easier to see which rules would be applied to that &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;active&lt;/span&gt;&lt;span&gt;&amp;nbsp;block. The cons side is that it makes the block list hard to read since it&#8217;s interseeded with all the action rules. It removes the concise &#8220;block order&#8221; declaration from the Conductor 1 syntax.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Problem 1: It&#8217;s a graph, not a list&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now we have not addressed the one elephant left in the room. In the previous post, I made a point of explaining we need a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;graph&lt;/span&gt;&lt;span&gt;, not a linear list. Thus we need to tackle the issue of describing that in a text file. How?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Whether we&#8217;re dealing with Conductor 1&#8217;s simple block list, or the Groovy DSL with blocks and their actions, a list is an easy construct: a couple square brackets and a comma-separated list of whatever items we need. The syntax is easy. A graph in a text file is a bit more dubious to represent. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;My immediate thought was &#8220;graphviz dot language&#8221; (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://graphviz.org/doc/info/lang.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://graphviz.org/doc/info/lang.html&lt;/a&gt;&lt;/span&gt;&lt;span&gt;). Here, a directed graph look like this:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;A -&amp;gt; B&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;B -&amp;gt; {C, D}&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I haven&#8217;t exactly used graphviz a lot. The syntax was OK and intuitive, even though not the most readable as things get a bit terse when the graph grows many branches.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In our case, we have the issue that our graphs are going to be mostly lists, so maybe we should optimize the syntax for the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;simple&lt;/span&gt;&lt;span&gt;&amp;nbsp;case. Going back to the previous example:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:186.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:380.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_e76ea7502fb894951362db1b98e9f2b2c4d3e5d12a315b0154c1f64aa6e44ce1d.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;An obvious clear way would be to write it as such:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;B311 -&amp;gt; B321 -&amp;gt; { B330, B311 }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;B330 -&amp;gt; B321&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We could try to express the fact that our route is &#8220;mostly&#8221; linear, by trying to express that we have an &#8220;optional&#8221; sub-route, kind of like a regexp, but it gets clunky:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;B311 -&amp;gt; B321 -&amp;gt; { B330 -&amp;gt; B321 }? -&amp;gt; B311&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Or maybe we can simply do this:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;B311 -&amp;gt; B321 -&amp;gt; B311&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;B321 -&amp;gt; B330 -&amp;gt; B321&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The way to read the latter is to construct the first &#8220;linear&#8221; graph, and then &#8220;merge&#8221; the branches from the second one. The latter syntax as the advantage that it can easily be represented using the semantic of comma-separated list in most text-based languages:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;Route.blocks = [ [ B311, B321, B311 ],&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;[ B321, B330, B321 ] ]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Ironically if we do that, we then need to forgo the ability to declare action rules right in the block graph declaration, and we&#8217;re back to Conductor 1&#8217;s paradigm of separating the graph description and the rules. That&#8217;s because in this case, we have specific blocks appearing multiple times. We could of course only declare action rules for one of these instances (or merge them together), but that would likely be confusing. A script writer could easily be confused and think there are 3 instances of B321 which could be active, each with their set of rules, yet in fact all these would be merged together.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Problem 2: Nodes in the graph are ambiguous&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s test the limits of that syntax. What if I want to write a &#8220;shortcut&#8221; in my shuttle. Say I have 5 blocks but sometimes I can throw a turnout and bypass multiple blocks? E.g. something like this:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;B01 -&amp;gt; B02 -&amp;gt; B03 -&amp;gt; B04 -&amp;gt; B05 -&amp;gt; B04 -&amp;gt; B03 -&amp;gt; B02 -&amp;gt; B01&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;B01 -&amp;gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; B04 -&amp;gt; B05 -&amp;gt; B04 -&amp;gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; B01&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here we have maybe a double track and one side has 2 blocks which the other one doesn&#8217;t yet they go to the same place. We can rewrite it as such:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;Route.blocks = [ [ B01, B02, B03, B04, B05, B04, B03, B02, B01 ],&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;[ B01, B04 ],&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;[ B04, B01 ] ]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There is one obvious problem though, which is that we have 2 occurrences of B01 and B04 in our graph, and that does not indicate which ones we branch from&#8230; is that the leading one or the reversing ones?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That&#8217;s where ironically having the engine direction in the block graph would help us distinguish them:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;Route.blocks = [ [ B01.fwd, B02.fwd, B03.fwd, B04.fwd, B05.fwd,&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;B05.rev, B04.rev, B03.rev, B02.rev, B01.rev ],&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;[ B01.fwd, B04.fwd ],&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;[ B04.rev, B01.rev ] ]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note aside, this shows one issue with encoding the direction in the graph, namely that the reversing block in shuttle mode is going to have at least 3 states: forward, stopped, and reverse. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;And that can also be the case for other blocks -- for example imagine a mid station on the shuttle route where the engine enters the blocks and stops before continuing. Do we want to encode the fact the engine is stopped? E.g. is the graph &#8220;B.fwd, B.stopped, B.fwd&#8221;? That&#8217;s why not encoding the direction may make the programming easier -- and in fact in the Conductor 1 test I did with the new syntax, that was simply handled by having the one block in the block list, and then 2 or 3 rules for &#8220;Block forward vs Block stopped vs Block reverse&#8221; yet there were some clear confusion in that case, so we&#8217;ll need to re-evaluate that further. The confusion is that we know the train is in &#8220;block B&#8221;, but we need rules for &#8220;enter block B forward&#8221; as well as &#8220;enter block B stopped&#8221; because in the prototype, changing direction also meant re-entering the rule set as it is defined for &#8220;block + direction&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The bottom line is that right now I&#8217;m not satisfied with either the mode from Conductor 1 (linear block list with separate rules), or the mode from the Groovy DSL (linear block list that includes rules). Let&#8217;s resume the limitations which are not solved yet:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It cannot be a linear block list, it has to be a directed cyclic graph.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;One thing I had envisioned at the beginning of Conductor 2 and not present here is &#8220;automating&#8221; transitions in the graph by indicating which turnouts sit on the edges between the nodes. We can agree that it is &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;the role of the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;sequence&lt;/span&gt;&lt;span&gt;&amp;nbsp;manager to align any turnout.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The direction &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;through&lt;/span&gt;&lt;span&gt;&amp;nbsp;a node is irrelevant as far as tree traversal is involved.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;But&#8230; for automated security checks, the direction of the engine when &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;entering&lt;/span&gt;&lt;span&gt;&amp;nbsp;a graph node is actually a good clue that we&#8217;re progressing as expected.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Rules separated from the graph nodes can be confusing to read, whereas rules within the graph node description make the graph confusing the read.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Problem 3: Does direction matter?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So here&#8217;s a thought which is somewhat underlined above: we don&#8217;t need the engine direction to be &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;constant&lt;/span&gt;&lt;span&gt;. E.g. &#8220;B04.fwd&#8221; is just an indication of the desired state when &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;entering&lt;/span&gt;&lt;span&gt;&amp;nbsp;the block. A good part of having the sequence is to have automatic validation and early error detection. We&#8217;ll detect timeouts -- too long to change blocks is an error. Similarly, when the next &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;expected&lt;/span&gt;&lt;span&gt;&amp;nbsp;block(s) activate, we can check the engine direction and use it as a signal we&#8217;re on the right part of the graph. That makes sense for a shuttle sequence manager -- we expect to enter in one direction in one block, and later we expect to enter it in the reverse direction.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Limiting the direction to only the enter event thus clears out the issue of reversing blocks -- we only care how we enter that block. It also solves the problems with mid stations -- a train can have any number of stops or even directions changes once inside that block.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That would also solve the issue with the Conductor 1 prototype: if we have a block graph listing &#8220;B04.fwd&#8221;, we can have a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;unique&lt;/span&gt;&lt;span&gt;&amp;nbsp;rule set for &#8220;B04.fwd&#8221;. It does not mean that the train can only go forward in that rule set. In fact at that point &#8220;B04.fwd&#8221; becomes a semantic label that just happens to link a specific graph node with a specific rule set.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now I see how I could make the graph more generic: we define a pattern for the graph nodes, which is &amp;lt;sensor&amp;gt;.&amp;lt;direction&amp;gt;.&amp;lt;extra-id&amp;gt;. The &#8220;extra id&#8221; exists to make node labels unique. Say for example we want to automate a shuttle that goes back and forth thrice between 2 mid stations, we could write it as such:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;B1.f -&amp;gt; B2.f -&amp;gt; B3.f -&amp;gt; B2.r -&amp;gt; B3.f -&amp;gt; B2.r -&amp;gt; B3.f -&amp;gt; B4.f -&amp;gt; &#8230;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That would represent a train that goes from B2 to B3 and back and forth twice before continuing. Even though we have directions, the graph labels are not unique, so we can add indices or any semantic names:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;B1.f -&amp;gt; B2.f.1 -&amp;gt; B3.f.1 -&amp;gt; B2.r.2 -&amp;gt; B3.f.2 -&amp;gt; B2.r.3 -&amp;gt; B3.f.3 -&amp;gt; B4.f -&amp;gt; &#8230;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &#8220;.2&#8221; and &#8220;.3&#8221; indices are purely semantic and could be words or anything else. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The next step is that rules would be defined for each of these labels. If rule sets need to be shared, we should be able to say that e.g. &#8220;B2.r.2&#8221; and &#8220;B2.r.3&#8221; do the same thing.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now that we agree that these are labels, we can argue again on having the travel direction in the node name. Is it useful? Let&#8217;s consider this:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Option 1: The node name is &#8220;free&#8221; as long as node names are unique.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Option 2: The node name is an encoding of &amp;lt;Sensor[.direction][.unique_id]&amp;gt;.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;If we do option 1, we need to indicate the Block/Sensor somewhere else -- that can be a property in the node rules. If we do indicate the direction, it is optional and used only to clear ambiguity; if we want to use it to enforce a sanity check when entering the node, then it could also be a property in the node rule. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Problem 4: How do events work?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The previous section points to using a &#8220;graph description&#8221; which describes the graph followed by individual rule sets for each graph node. Each node must have a unique-enough name that can be referenced in the rule set.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;At that point, vocabulary must matter: a &#8220;block&#8221; describes a physical entity backed by a sensor, whereas a &#8220;node&#8221; represents one entity in the graph. Since we are building shuttle sequences, some blocks will appear either once or multiple times in the graph, and each time they will be represented by different nodes each with their unique label. Rule sets are associated with a specific node.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As far as describing events, there are 2 possibilities:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;In the initial groovy DSL, each node&#8217;s rule set was a closure attached to a &#8220;block.direction&#8221; verb. The closure itself contained 2 kind of statements:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Actions (throttle actions, etc).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#8220;After&#8221; delayed rule blocks.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Block-related events: onStart, onEnter.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;In the Conductor 1 revamp, I experimented with a different syntax:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[Enter | Block] &amp;lt;SensorName&amp;gt; &amp;lt;Direction&amp;gt; { rules }&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The first groovy DSL was a bit ill-defined. For example, what does it mean to put actions directly in the rule set? When are they executed? The block related events were supposed to clarify that:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;onStart is executed when the route starts. Only one block rule can contain onStart, and it becomes the &#8220;default&#8221; initial starting point of the graph. But what happens if that&#8217;s not how the graph has been defined? This can be inconsistent.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;onEnter is executed only when a train enters the block. So what happens to &#8220;after&#8221; delayed actions in an onEnter rule?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;onExit was implicitly defined yet not used.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To be clear, the original intent was that the Groovy DSL scope would have properties and action executed when &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;entering&lt;/span&gt;&lt;span&gt;&amp;nbsp;the block. So for example &#8220;speed = N&#8221; or any unqualified &#8220;after&#8221; delayed timer was meant to be equivalent to placing them in an &#8220;onEnter&#8221; scope. Except I them moved to a syntax where I had essentially: &#8220;speed = N&#8221; (set the speed when entering the block), onEnter { initial actions }, after { delayed action }.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &#8220;speed = N&#8221; is basically a shortcut to writing &#8220;onEnter { speed = N }&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The Conductor 1 revamp tried to clarify this a bit:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There&#8217;s no such thing as an &#8220;onStart&#8221; &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;inside&lt;/span&gt;&lt;span&gt;&amp;nbsp;a node rule. Instead there&#8217;s &#8220;onActivate&#8221; at the route level. That&#8217;s more logical. There can be only one of these -- we could however accept for convenience there can be multiple and they get all executed in sequence.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A &#8220;Block N rule&#8221; means the rule(s) is evaluated any time the train is in that block -- or more precisely anytime that node is the active one in the graph.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An &#8220;Enter N rule&#8221; means the rule(s) is evaluated &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;once&lt;/span&gt;&lt;span&gt;&amp;nbsp;when a node becomes active in the graph.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There is no &#8220;Exit&#8221; rule, although there could be -- in that case it would be evaluated &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;once&lt;/span&gt;&lt;span&gt;&amp;nbsp;when a node changes from active to trailing.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Exiting the block clears the &#8220;Enter executed once&#8221; flag; similarly entering the block clears the &#8220;Exit executed once&#8221; flag (so we could have a system where a train flip-flops between 2 nodes)..&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#8220;Block&#8221; and &#8220;Enter&#8221; can be thought of as prefixes or shortcuts to writing &#8220;if node N is active&#8221;. There could be any number for the same node and they are evaluated in order.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Semantically, we can imagine all these rules sets could be &#8220;unrolled&#8221; and written line after line all with a prefix test condition of &#8220;is block active&#8221;. &amp;nbsp;When we think of it that way, it means that any &#8220;after &#8220;delayed action will only execute if the train is still in the block when the timer expires and triggers. With some nuances.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;After delayed evaluated:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;For &#8220;Block&#8221; rules, as long as the train is in the block. As soon as the train leaves the blocks, the after timers are canceled.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;For &#8220;Enter&#8221; rules, they get triggered once and still execute if the train is in the block when the timer expires. We can think of them as having their own &#8220;execute once&#8221; flag. &amp;nbsp;As soon as the train leaves the blocks, the after timers are canceled.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;For &#8220;Exit&#8221; rules, they get triggered once and still execute if the train is &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the block when the timer expires. We can think of them as having their own &#8220;execute once&#8221; flag. &amp;nbsp;As soon as the train re-enters the block, the after timers are canceled.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I believe that makes the &#8220;after delayed&#8221; timers more explicit. They are tied to the &#8220;scope&#8221; of the block being active. If an action must be performed whether the train is or isn&#8217;t in the block, then a global timer should be triggered and used.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Whether I use a Groovy DSL or the Conductor 1 revamp, this model is clearly the way to go.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One thing that we&#8217;ll not reuse from the Conductor 1 revamp is how the direction was used in the node definition. E.g. in Conductor 1, I had rule sets prefixed with e.g. &#8220;Enter B320 Forward&#8221; or &#8220;Enter B320 Stopped&#8221;... the direction condition was to be the &#8220;live&#8221; one at evaluation time, which leads to a confusion when I need to create a move-stop-at-station-continue script as in this case we get &#8220;B320 Forward / B320 Stopped / B320 Forward&#8221;. As discussed in the previous section, this is not descriptive enough. Instead the rule sets are going to be prefixed with a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;unique&lt;/span&gt;&lt;span&gt;&amp;nbsp;name that matches the graph description, so for example we&#8217;ll call that node &#8220;B320.fwd&#8221; to indicate this is an action when we enter the B320 in forward mode, regardless of what happens after it has been entered. Once the node is active, it remains active as long as the same block is active.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We still have 2 models to choose from:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;In the Conductor 1 revamp, we have all rule sets in parallel at the top level. E.g. &#8220;Enter B320 forward&#8221; and &#8220;Block B320 forward&#8221; are two separate definitions.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;In the old Groovy DSL, we have scoped rule sets with everything per node. E.g. in this case we would have one scope for &#8220;B320.forward&#8221; containing an &#8220;onEnter&#8221; event and one an &#8220;onBlock&#8221; event.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That latter scoped syntax seems more appropriate for a Groovy DSL. The only difference is:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The &#8220;speed = N&#8221; property was supposed to be a shortcut to writing &#8220;onEnter speed = N&#8221;. But then when it&#8217;s followed by an onEnter block, it seems odd. So might as well write the full onEnter version.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Same for the after delayed timer.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Basically all rules should appear inside either &#8220;onEnter / onBlock / onExit&#8221;, to make it clear what&#8217;s happening -- and the onExit block will not even be implemented at first as it didn&#8217;t seem very useful.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The only property I&#8217;m considering is to indicate the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;entering&lt;/span&gt;&lt;span&gt;&amp;nbsp;direction, and even that seems pointless. We don&#8217;t need it.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s recap what was said on the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;node&lt;/span&gt;&lt;span&gt;&amp;nbsp;travel direction earlier and why we don&#8217;t &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;need&lt;/span&gt;&lt;span&gt;&amp;nbsp;it:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Travel direction within the block is not constant. A train can stop and go, or reverse. Thus knowing the &#8220;entering direction&#8221; is not a usable signal representative of &amp;nbsp;the train travel within the block.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;For error recovery, we need to understand which node to select in the graph to recover from a static starting point. Which means the train will be stopped and will not have a running direction. Thus knowing the &#8220;entering direction&#8221; of the node is not a usable signal..&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Progressing in the graph (going from one node to one of its edge nodes) is going to be based solely on which block becomes active next. The block sensor is all the information needed here, the &#8220;entering direction&#8221; is not a signal used in that decision.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The only case where we could potentially use the &#8220;entering direction&#8221; is to set up some kind of alarm mechanism, e.g. defaulting the run route if we detect a block becomes active with the train in a different direction than the one indicated in the node.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;That would be a severe error condition indicating either a drastic programming fault in the script, or indicating that the manager is out of sequence and the wrong node is active in the graph.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;If we really want to enforce that, we might as well have some kind of validation rule in the &#8220;onEnter&#8221; case. For example:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;onEnter { Throttle != Forward &#8594; ThisRoute.Error = true }&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2022-02-13T00:00:01-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Block Graph and Travel Direction</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2022-01-23_conductor_2_block_graph_and__20eaa2e5.html"/>
<id>https://www.alfray.com/trains/blog/train/2022-01-23_conductor_2_block_graph_and__20eaa2e5.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, each route has its dedicated route type, driven by a &#8220;route manager&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For our shuttle routes, we define an almost linear block list of blocks traveled.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Normal:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;B311 &#8594; B321 &#8594; stop/reverse &#8594; B321 &#8594; B311.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As seen above, to handle the rare case of the end-run overrun, we want to actually have a block graph.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:186.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:380.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_0cab5acc044a02465a62a52ff2a65b518fdfb5899c76b8282b4b1c8f8fbf744cd.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What we are not encoding here is the travel direction.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We are not encoding either which one is the startup point, not which one is the reverse point.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The argument is that we do not &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;have&lt;/span&gt;&lt;span&gt;&amp;nbsp;to because a/ we don&#8217;t really need the information, and b/ if we really needed it, we could infer it from the graph.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So let&#8217;s discuss that.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Why don&#8217;t we need the information? In a normal setup scenario, the train is initially already located at the starting block, and stopped. This is the first block in the list. We don&#8217;t need extra information to denote that it is the start of the list.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As the train travels from one block to the next one, the manager keeps track of the &#8220;current active block&#8221;. It&#8217;s the one that was occupied. At some point the manager will notice the block being unoccupied, and should mark it as a trailing block, and move to the next one. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;At the transition time, we can have 3 cases: 0 blocks occupied briefly, 1 block occupied (the next one), or 2 blocks occupied briefly.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;0 blocks occupied. That can happen at some jonctions, or when a block sensor flickers. The manager should keep the current block active till transitioning to the new one for sure.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;1 block occupied and it&#8217;s not the active one. Is it the next or one of the possible next ones? If yes, change that to be the new active block. If the new occupied block is not in the next list, we have an error situation.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;2 blocks occupied briefly can also happen. This is similar to the previous &#8220;normal&#8221; case. If the new block is in the expected list, make it the current one.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;Every time the current block changes, the old current block is marked as a trailing block, and the previous trailing block is unmarked.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We also need to account for sensor flakiness. Any &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;unexpected&lt;/span&gt;&lt;span&gt;&amp;nbsp;state change should not be accepted right away, and given a little bit of time to see if it goes away (e.g. 2 seconds). However we&#8217;ll treat any &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;expected&lt;/span&gt;&lt;span&gt;&amp;nbsp;state change as immediate to avoid delaying execution of events in the expected cases.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s worth noting that all that discussion about current block changing did not mention the travel direction. We don&#8217;t need to care -- the block list is linear and always executed from start to end. We only care about the &#8220;next block(s)&#8221;, never the previous ones.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The only case where we have an ambiguity is with abnormal startups: automation starts with the train already on the track in an &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;expected&lt;/span&gt;&lt;span&gt;&amp;nbsp;block, and we want to recover by bringing it back to the start point. The manager needs to know which one to make the current block since in a shuttle mode most blocks appear twice. But in fact that&#8217;s not even an issue since we know the recovery method is to bring the train to the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;end&lt;/span&gt;&lt;span&gt;&amp;nbsp;point. Thus the only logical choice is the last occurrence of the current occupied block in the list, since it&#8217;s the one closer to the end point.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Finally, we don&#8217;t need to know the running direction, but if we really wanted to, it could be deduced easily. Since these are shuttle routes, they start and stop at the same block, and they have one single reversing block. The reversing block is easy to find since it has the same block as both previous and next. The same applies to a reversing loop with more than one block: any time a block appears more than once in the graph flattened as a linear sequence, the second occurrence must have the reverse direction of the first occurrence of the same block.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2022-01-23T00:00:30-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Startup corrective behavior</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2022-01-22_conductor_2_startup_correcti_ce159044.html"/>
<id>https://www.alfray.com/trains/blog/train/2022-01-22_conductor_2_startup_correcti_ce159044.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One of the potential benefits of route management in &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is being able to fix the invalid start behavior. In conductor 1, we simply cannot start the mainline automation if the trains are not at the startup point. For the branch line, I do have some self correction. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The current approach is to not even try to activate the mainline if blocks are not occupied as expected. Instead we should move that check into each route activation handler.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One possibility when activating a route is to scan its expected blocks. If there&apos;s only one occupied, could it be our train?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Another possibility is to remember each route current block on shutdown and restore it at the next startup of the program. On first opening, the trains should be either at their last recorded point or at the expected startup point. If the last recorded point is not the startup one, we try to recover.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To do that we also need to remember the last active route. Make that persistent too.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To recover, we don&apos;t need to hardcode the behavior in the manager. Instead we create an OnRecover event handler:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;Route Passenger-Route {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;OnRecover &#8594; {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;AM Reverse&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We need to align all turnouts and simply start moving the engine. There is the issue of computing the currently active block. To do that we can traverse our block graph from the end till we get to the currently occupied block. We would still run the error rules described above, with only one block active and time limits to change blocks. That one becomes critical here; if the train is stalled or can&apos;t move, this will abort the recovery.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2022-01-22T00:00:41-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Error Management</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2022-01-22_conductor_2_error_management.html"/>
<id>https://www.alfray.com/trains/blog/train/2022-01-22_conductor_2_error_management.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We need to dwell a bit more on error management in &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. What is the current situation, versus what we really want?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In Conductor 1, error management is made ad-hoc by the script. For each individual route (branchlines vs mainline), there&#8217;s a timer, and the goal is that each shuttle should complete its travel within 5 minutes. The implementation is rather simple: the timer is started when the engine starts in either direction, and stopped when the engine reaches the target block. If the timer expires, the global state is changed to error, which stops everything for that route. There is nothing in the script to get out of that error state. A manual reset (via the tablets) is necessary.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In Conductor 2, the error management should depend on the route manager. Here we&#8217;re only concerned with the shuttle &#8220;sequence&#8221; manager. We can decide to keep it as simple as it was in Conductor 1 -- namely that the route must complete in a given time.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The other thing we can do is take advantage of the block sequence, since we know which blocks the train must travel. The manager also keeps track of the train progression so in theory it knows which blocks must be occupied and more importantly which ones must be free. So we can also take advantage of that. Thus, upfront, the rules would be something like this:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The current active block must be occupied.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There should not be any inactive block occupied.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This rule requires a caveat as a train traveling can temporarily occupy 2 blocks. To solve that, we add the notion of a &#8220;trailing&#8221; block, which is the block the train just exited -- it can be occupied, even though it&#8217;s not the active block.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;If the train is moving, it should change to the next expected block within a given time. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;That time should be configurable for each route. A large enough default (e.g. 5 minutes) would work, and we might want to tighten it per route.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;So in essence we change the timer from &#8220;overall route timer&#8221; to &#8220;to the next block timer&#8221;. Each time a train enters a block, we restart the timer. If a train is stopped, we must also stop the timer.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If the &#8220;next block timer&#8221; expires, the route enters error mode.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Script wize, the choice is to have a layered error management:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Each Route has its own error property: Self.Error.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The route script can set it to true:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Self.Error = True&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It cannot be set to false.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Each Route has an OnError event function that can be implemented.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The ActiveRoute also has an error property that is an OR combination of each sub-route&#8217;s error. Thus as soon as any route is in error, the larger ActiveRoute object is in error too.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A global condition &#8220;ActiveRoute.Error -&amp;gt; &#8230;&#8221; can be defined.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It is not possible to activate a Route or an ActiveRoute that is in error.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Errors are fatal like in Conductor 1. There is no clearing of the error except doing a full reset. That&#8217;s a simplification that could be easily lifted.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Since the route manager is going to enforce that only the expected blocks are occupied, we also may want to define 2 more properties for a shuttle behavior:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;We defined the expected route blocks to monitor.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;We also could define &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;unexpected&lt;/span&gt;&lt;span&gt;&amp;nbsp;route blocks&#8230; Blocks to monitor that the train should &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;reach.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;We also may want to define exceptions for these. For example in both Randall shuttles cases, it would be ok for the train to overrun its stopping blocks. In Conductor 1, there&#8217;s a rule that forces the train in reverse if that happens. This is, in essence, a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;recoverable error&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s worth keeping in mind that if we monitor non-route blocks, we don&#8217;t know for sure what is occupying them. The simplest option is to not monitor them as part of the manager, and let the script handle that. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For one thing, we miss the capacity to &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;pause&lt;/span&gt;&lt;span&gt;&amp;nbsp;the route. In an ideal world if an unexpected monitor block becomes occupied, it would be nice to be able to pause the automation while operators rectify the situation. We can expect operators to have that kind of awareness as they lack proper feedback from the automation. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The shuttle overrun case is worth handling. Currently the behavior would be to have block &#8220;X then Y&#8221; occupied. But if we overrun, none of the expected blocks will be occupied. The manager would need to know what is the overrun block and where it fits in the block sequence, as well as know when the situation has been rectified.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For example for the Freight route we have:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Normal:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;B311 &#8594; B321 &#8594; stop/reverse &#8594; B321 &#8594; B311.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Overrun:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;B311 &#8594; B321 &#8594; (B330 overrun) &#8594; B321 &#8594; B311.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;A possible syntax would be to describe this as:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Normal:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Self.Blocks = B311, B321, B311.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Overrun:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Self.Blocks = B311, B321 (overrun = B330), B311.&lt;br&gt;Or&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Self.Blocks = B311, B321, (recoverable B330 to B321), B311.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;The first example of syntax makes B330 an extra annotation to B321, whereas the second one adds a potential node in the graph.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What is important is to realize we&apos;re building a graph with 2 nodes out of B321.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:186.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:380.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_b4b11ad94227fc7dcb0a2d9ce16f416e706c5f83dd425c8c23247e321ab7f621d.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When viewed that way, B330 becomes a &#8220;normal&#8221; block in the sequence. That dictates it should not be treated as some exception, it&#8217;s just one of the two blocks that can be activated out of B321. The script engine just doesn&#8217;t know which one, and should accept both.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So we changed our linear &#8220;block list sequence&#8221; in a free &#8220;block graph&#8221;. That&#8217;s neat.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One important detail is that our &#8220;block graph&#8221; is not encoding the direction of the engine when changing between nodes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That is something we may want to consider. See below.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2022-01-22T00:00:25-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Reboot on the Reboot on Conductor 2</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2022-01-21_reboot_on_the_reboot_on_conductor_2.html"/>
<id>https://www.alfray.com/trains/blog/train/2022-01-21_reboot_on_the_reboot_on_conductor_2.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;project has been taking too long now. I still think there are good ideas in the design and the core foundation for it. The implementation has been taking forever due to a lack of clarity combined with some other projects taking precedence. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In between I have started an implementation in Groovy which is not quite satisfactory. It was merely a prototype to explore the DSL syntax and as such the project structure has not been carefully planned. It&#8217;s already hard to extend and I realize I&#8217;m not able to express the script logic as I want with it. The core issue is that the prototype tried to do too many things -- explore how to create a Groovy DSL, figure out the language I need, and at the same time the business logic of the script. So I have a bit of everything, and nothing concrete for each category. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So let&#8217;s reboot it. Let&#8217;s tackle it differently. Ignore the syntax. Focus on what the script business logic needs to work. I can express that &#8220;on the paper&#8221; using the ANTLR script language from Conductor 1. I&#8217;ll figure the DSL and engine structure from there.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Some thoughts here:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Stop using timers as functions. Introduce a real &#8220;Function Name -&amp;gt; { instruction }&#8221; syntax.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Functions are invoked by using just their name in an instruction sequence.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Unify the instruction format to be:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Object [ Action ] [ = Parameters ]&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Some objects may not have an action.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Some actions may not have parameters.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Parameter types: literals int or string, object names, lists, or dictionaries.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;When parameters are lists, unify to be a comma-separated one.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This changes:&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Enum lists need commas.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;GA-Event &amp;amp; JSON-Event need an = before their parameters.&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Uniformize &#8220;instruction sequences&#8221; to be:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A ;-separated list of instructions, with no end ;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A { ;-separated list } block, which allows nesting.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The { } block is itself an instruction so use { &#8230; } ; to have it in a list.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The { } blocks create sequences of instructions.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There is no scoping in the sense of limited variable scopes. All definitions are global.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Any place that currently allows an instruction sequence can use a block: -&amp;gt; { &#8230;} is the syntax.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;We introduce a syntax for &#8220;scoped variables&#8221;, or more exactly &#8220;object properties&#8221;. See below.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;We add the definition of a Route:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A route has properties: throttle, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;toggle&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;an enum state&lt;/span&gt;&lt;span&gt;, error.&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;These are accessed from within the route as &#8220;Self.&amp;lt;property&#8221;&amp;gt;&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;And outside as &amp;lt;RouteName&amp;gt;.&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;The &#8220;toggle&#8221; property is not used for now. Omit it.&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A route has a type / driver / route manager.&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The only types are the fixed-block manager (default), or idle.&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The default manager has these properties:&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There&#8217;s one active block, which is where the train should be / occupied.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It&#8217;s an error to have 0 or more than 1 block occupied.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The route has a &#8220;block list&#8221;. &lt;/span&gt;&lt;/li&gt;
   &lt;ul&gt;
    &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This indicates which block we&#8217;re starting from.&lt;/span&gt;&lt;/li&gt;
    &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Block occupation can only move from one block to the expected &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;next &lt;/span&gt;&lt;span&gt;one. Activating a different block results in an error.&lt;/span&gt;&lt;/li&gt;
   &lt;/ul&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;When a new block is occupied, the &#8220;enter block&#8221; instructions are executed.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;When the route is activated, the first block is &#8220;entered&#8221; with the engine in Stopped mode.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;To handle shuttle modes, the &#8220;enter block&#8221; is considered to be re-entered when the direction changes.&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The &#8220;idle&#8221; manager is a special one. It defines a route that controls no trains and does nothing.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Routes are either active or inactive. There&#8217;s a corresponding function executed: OnActivate, OnDeactivate.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Routes define a number of block instructions: &#8220;[ Block | Enter ] [ Sensor ] [Forward | Reverse | Stopped] -&amp;gt; { instructions }&#8221;&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The Forward/Reverse/Stopped refers to the current state of Route&#8217;s Throttle.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The Block/Sensor number refers to the Route&#8217;s &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;current&lt;/span&gt;&lt;span&gt;&amp;nbsp;block being occupied.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A &#8220;Block&#8221; definition means the instructions are evaluated &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;every&lt;/span&gt;&lt;span&gt;&amp;nbsp;time that this block is active with the engine in that current direction.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An &#8220;Enter&#8221; definition means the instructions are evaluated &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;once&lt;/span&gt;&lt;span&gt;&amp;nbsp;when that block is activated in the block sequence.&lt;/span&gt;&lt;/li&gt;
   &lt;ul&gt;
    &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;However if there&#8217;s an &#8220;After&#8221; instruction, it is started and continues to be evaluated if the block is still active with the right direction.&lt;/span&gt;&lt;/li&gt;
    &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Or said otherwise, any block change in the route cancels any pending timer.&lt;/span&gt;&lt;/li&gt;
   &lt;/ul&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Routes have &#8220;event&#8221; functions. For now:&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;OnActivate&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;OnDeactivate&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;OnError&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;We add the definition of an &#8220;ActiveRoute&#8221;:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ActiveRoute Route-Name = Route1 Route2 Route3&#8230;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This behaves as an enum that select one and only one of multiple routes.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There is no concept of &#8220;null&#8221; so we must define an empty &#8220;idle&#8221; route as the default. This has the side effect that the idle route can have OnActivate/OnDeactivate functions.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;By default the first route is the active one.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An ActiveRoute object has one instruction: Activate&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Route-Name = Activate Route2&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;We define a new instruction named &#8220;After&#8221;: &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Simple form:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;After [Int | Timer] -&amp;gt; { instructions }&#8221;.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Chained form:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;After [Int | Timer] -&amp;gt; { instructions 1 }&#8221;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Then After [Int | Timer] -&amp;gt; { instructions 2 }&#8221;...&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This is the same as starting a timer with the given delay.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The argument can be a literal number, or an integer variable, or a Timer variable.&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;For the 2 formers, an anonymous timer is created. For the latter, that timer is actually used.&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The instructions are carried away when the timer expires.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;If the &#8220;After&#8221; instructions are executed as part of a Route &#8220;Enter&#8221; definition, the instructions are only executed if the block is still active and the train is in the expected direction. &lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Once the instructions finish executing, they start the following &#8220;Then After&#8221; timer if present. This means they all form a chain, executed in sequence.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Question: Can we have an &#8220;After&#8221; instruction inside another &#8220;After&#8221; instruction? How does that behave exactly? &#8594; Upfront I&#8217;d say no we can&#8217;t. It seems pointless and illogical.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Doing this allows us to encode the same script as we have now, but with a lot of simplification in the script text.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On the scripting side, the &#8220;novelty&#8221; is adding generic support for functions and blocks of instructions. This is needed to be able to write the &#8220;After&#8221; blocks inside parent blocks.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The core structural change is the handling of the route and active route. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On one hand, we can use this as &#8220;syntactic sugar&#8221;, and think of them as macros that internally generate flat conditions lists. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However it would make more sense to fully develop the concept of the route manager. In this case the route manager tracks the block changes and schedules executing of the various instruction sequences.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;What won&#8217;t be back-ported from Conductor 2.02&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One difference with Conductor 2.02 is the throttle management for a route. In v2.02, instructions inside a route implicitly used the throttle for that route. Here the throttle is externally defined and the instructions just act on a global throttle object. That lets the script be more flexible, e.g. the AM route can also act on the SP throttle to e.g. stop the sound.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One thing I&#8217;m not carrying over from Conductor 2.02 is the notion of virtual blocks. These seem pointless in this context. Blocks are purely mapped to a sensor each as in Conductor 1.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2022-01-21T00:00:22-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">How do the Electroluminescent (EL) Displays Work?</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2021-07-04_how_do_the_electroluminescen_1afa26de.html"/>
<id>https://www.alfray.com/trains/blog/train/2021-07-04_how_do_the_electroluminescen_1afa26de.html</id>
<category term="train" label="Train"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;We&#8217;re in the process of adding a Miller Engineering animated sign on the layout, and later I want to revive the 2 broken ones (the theater one and the motel one). So naturally I wonder how they do work&#8230; What&apos;s the tech behind it?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:341.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_998fbecfe1e49dc64a17e93c6dceebe2b3378bb2cc306c12f030bf0e3eb15831i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Looking at the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://microstru.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Miller Engineering&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;site, they have an &#8220;experimental&#8221; section, which partially replies to that question:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://microstru.com/collections/experimenter-kits&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://microstru.com/collections/experimenter-kits&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So these are listed as &#8220;electroluminescent&#8221; (a.k.a. EL) displays. The Miller ones come with a little control board, and they are typically powered by a 4.5 V DC power supply or 3 x AAA batteries. They call the board an &#8220;inverted&#8221;, and it features an obvious transformer, so that gives us a fairly good clue on what it does (i.e. that&#8217;s a voltage booster).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:176.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:369.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_be4fb4f9cf76b5ab9ae9b2cd43b34cf7e4ef84486f92176afcc2de336e9ac1bei.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I could not find a direct example of how specifically Miller Engineering billboards sign work on the net. However there&#8217;s a similar thing called an &#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Electroluminescent_wire&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;EL wire&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221; which &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;may be&lt;/span&gt;&lt;span&gt;&amp;nbsp;the same tech and is used for DIY purposes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Adafruit has a pretty good technical description of the EL wire here: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.adafruit.com/el-wire/using-el-wire&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;[Adafruit] Using EL Wire&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Another site I found explains how to build a DIY power supply for an EL wire: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.codrey.com/electronic-circuits/el-wire-lamp-driver-inverter/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;[Codrey] &amp;nbsp;EL Wire Lamp Driver Inverter&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This explains these &#8220;EL wires&#8221; need a perfect AC (no DC component); they need a fairly high voltage (50-130V), and a frequency in the 60 Hz to 2 KHz range. The higher the voltage/frequency, the brighter they are (and the shorter they last).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;An important teaching from the Adafruit site &lt;/span&gt;&lt;span&gt;is that the EL wire needs to be modeled as a capacitor with a resistance leakage:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:141.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:412.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_5186db0bfed2e812b537a78820c276794cfa64cb7472f637ebe3b703b6e711e2i.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-style:italic&quot;&gt;(schema source: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-size:9pt;font-style:italic;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.adafruit.com/el-wire/using-el-wire&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;[Adafruit] Using EL Wire&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-style:italic&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Using a longer wire just adds R-C components in parallel.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It also means the output cannot be measured without any load, and actually running the inverter without load may generate too high voltages that may damage the output transistors or transformer.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The Codrey web site has a schematic to build a DIY power supply. It uses an NE555 to make a 2 kHz driving a transistor and an audio transformer. Output voltage is not given, it is assumed around 100 V based on text.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:398.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:624.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_904a557723091d1e008a1a3dfc40b9032e2e3091e5a04ca9562419f1a8c98ecdi.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-style:italic&quot;&gt;(schema source: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-size:9pt;font-style:italic;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.codrey.com/electronic-circuits/el-wire-lamp-driver-inverter/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;[Codrey] &amp;nbsp;EL Wire Lamp Driver Inverter&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-size:9pt;font-style:italic&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Which leads me to the Cracker Jack display at Randall or the &#8220;dead&#8221; motel / theater displays. I suspect on the theater and the motel sign that the display themselves are likely good, it&#8217;s probably the control board that died. On the motel sign I measured the power supply at 8 V instead of the expected 4.5 V. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I don&#8217;t have schematics for the Miller Engineering control board, but from a quick observation there&#8217;s an 8 pin microcontroller in there, the transformer to boost the voltage, and transistors to select which display elements get turned on. Which means I could hack one. Assuming it&#8217;s the microcontroller which died and the rest of the electronics is fine, I could control it using an arduino. That would be a fun thing to do with these two displays which are otherwise considered dead.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To be clear, I could likely &#8220;just&#8221; get some new control boards from &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://microstru.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Miller Engineering&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;-- and I will likely end up doing just that as explained below. However in the meantime it would be interesting to learn and discover something new. Too many people want to just look at electronics as something obscure that no one should try to understand. On the contrary, there&#8217;s some value in looking at how things work, taking them apart and putting them back, and making mistakes in the process.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Edit&lt;/span&gt;&lt;span&gt;: Then I ruined the display by mistakenly powering from 12 V instead of the 4.5 V power supply I was preparing. Yep totally my fault (well I did write &#8220;...and making mistakes in the process&#8221;, and I should add &#8220;and owning to them&#8221;). Now it does light up but only one segment and it&#8217;s not animating. Obviously I fried the 8-pin microcontroller, yet the part that drives the EL sine signal seems to be working just fine. I can manually trigger the output of the microcontroller and light the other segments. Which means there would be even more value in unsoldering that 8-pin microcontroller and driving the triacs manually. I&#8217;ve somewhat traced the control board and will post on that later.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;But before that, I want to restate my philosophy. At Randall, I&#8217;m maintaining a layout in a public museum. I won&#8217;t be the maintainer forever, so it&#8217;s important to not leave hastily cryptic solutions behind. I&#8217;m fine with having fun hacking a Miller board and replacing their microcontroller by mine all for the fun &amp;amp; learning aspect of it, yet I also think from a maintenance perspective that is not the ideal thing. That&#8217;s why I want to favor off-the-shelf components when possible. My long term goal is that in N years when that billboard will stop working, someone will figure out what it is, and just hop on the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://microstru.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Miller Engineering&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;site and order a replacement for the control board if that&#8217;s what has failed. The more I customize it for my own fun, the less likely I am making that happen. Some folks are going to reply &#8220;yeah but in N years that tech will be obsolete, or the company won&#8217;t be there&#8221;. Maybe, that sure is possible, yet I&#8217;m not ready to make that assumption. It will at least be easier to figure out what the part is if it&#8217;s an off-the-shelf one than a custom made one.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Edit 2&lt;/span&gt;&lt;span&gt;: For my own reference, Miller Engineering also sells &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://microstru.com/collections/o-ho-billboards/products/2704-sign-controllers&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;replacement controllers right here&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2021-07-04T00:00:29-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Motion Sensor LED Light for the Train Back Room</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2021-07-03_motion_sensor_led_light_for__3ee06166.html"/>
<id>https://www.alfray.com/trains/blog/train/2021-07-03_motion_sensor_led_light_for__3ee06166.html</id>
<category term="train" label="Train"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Today we&#8217;re modifying this cheap &#8220;Motion Sensor LED closet/night light&#8221;: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3qqVBqS&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/3qqVBqS&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:234.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:742.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_958eebd25b75a5e7b63fc1787eb5b08efaf05a977530d8a0c43f3955078ee6e1i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So here&#8217;s the situation: the back room at Randall where we have the workbench presents some challenges. The switch to turn the room light is in one corner of the room, and we enter the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;opposite side&lt;/span&gt;&lt;span&gt;&amp;nbsp;of the room. And in between we have the Bridgeport yard, the Napa yard, and the workbench. Thus when we enter the room we need to carefully navigate around all these things mostly in the dark till we can turn on the light. Not ideal. Most of us use our phones as a flashlight to avoid tripping into something. Can we do better?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:381.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_6852d241a4b9e7ec2e23a8bbed382cabe130cee3dcaa3273be20e1fd5eaeec74i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Well sure. That little USB-powered LED light is just fine for the task. The motion sensor only turns it on when it is dark and it detects someone moving around. Since the light has a battery, it can still work fine before we turn on all the circuits including the back room light.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I have it connected to an outlet that is powered off the layout in the other room. That way it charges when the layout is turned on.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;These lights are designed to be placed in closets, without any power. They come with a magnet that can be taped to the back of the light, making it easy to remove for charging it elsewhere and then put it back in the closet. That sounds a bit cumbersome, and my idea is that this light is going to be permanently powered by a USB charger using one of the layout circuits. So the charging only happens when we have the layout turned on, which is good.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When setting the light in &#8220;AUTO&#8221; (motion sensor) mode, it works fine when unplugged, it detects motion and turns on for about 20 seconds. There&#8217;s also an ambient light detector so that the light only turns on in the dark. Perfect for our case.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However, much to my surprise, when the light is powered by the USB charger, the &#8220;AUTO&#8221; motion sensor mode does nothing. It does not turn on the light. This is oddly not documented anywhere.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Maybe the light&#8217;s circuitry can be modified? Let&#8217;s open it. This is trivial as it has no clips, only 6 screws in the back. The circuitry is rather simple:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:252.13px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:673.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_9e4371d427c26ffb04b795f5160bf61360df40129b84bdae361bc706ce8f5c31d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There&#8217;s also a video from &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://bigclive.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;BigClive.com&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;here where he takes one of these appart and explains the circuitry:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/GSkzXqkWayg&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So really nothing here looks like the motion detector mode should be deactivated when the light is powered by the USB cable for charging.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Then I realized the explanation is much more mundane than this. The light has two ferociously bright blue and red LEDs used when charging. The red LED lights up when the light is charging, and the blue one lights up when the light is charged. The design of the light&#8217;s plastic enclosure is odd in that regard as the two status LEDs are under the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;opaque&lt;/span&gt;&lt;span&gt;&amp;nbsp;part of the plastic. I&#8217;m guessing they made the LEDs extra bright to be able to shine through the plastic and be visible even in daylight. At night, these two status LEDs are enough to illuminate a room and serve as night lights all by themselves!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;And then from the open view above, I realize there&#8217;s nothing between these ferociously bright LEDs and the ambient light sensor. Which means when the device is charging, it&#8217;s likely detecting &#8220;ambient light on&#8221; from its own status lights and thus disabling the motion detection circuitry.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Instead of trying to hack the circuitry, I went for the easiest route: tone down the charging LEDs with a piece of tape.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:277.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:680.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_2f944fe29c344426a271bd5e7f35e3d8480142ddd6a0662afc0a80feab9cbadbd.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I wanted to keep the ambient light sensor intact as I don&#8217;t want the light to go on all the time when the room light is turned on.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;With that change, the status LEDs are faintly visible in the dark, and what&#8217;s important is that they do not trigger the ambient light sensor. They are definitely not visible during daylight or when the room light is on. First attempt was not enough so I had to add a second layer of tape. It&#8217;s easily reversible and non destructive too!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2021-07-03T00:00:20-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">DCC++ EX support in Android Cab Engineer app</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2021-04-24_dcc_ex_support_in_android_ca_b8011aaf.html"/>
<id>https://www.alfray.com/trains/blog/train/2021-04-24_dcc_ex_support_in_android_ca_b8011aaf.html</id>
<category term="jmri" label="Jmri"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Today on the bench, we have two things going on:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:524.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_308e931cfa7fbf6275099d56a9b6de6059f9d4e237a2c2feaf5f1642aca0cc11i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On the left side, we have a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3gDnQAC&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;&#8220;Wifi Kit 32&#8221; ESP32&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;running a fork of the latest &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dcc-ex.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;DCC++ EX firmware&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;br&gt;On the right side, we have my &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.alflabs.dcccab&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Cab Engineer DCC Throttle&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;app for Android communicating with the DC++ EX command station.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A few clarifications and explanations are needed here.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First, I&#8217;ll be very clear: &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-weight:700;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dcc-ex.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;DCC++ EX firmware&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;&amp;nbsp;does &lt;/span&gt;&lt;span style=&quot;font-style:italic;font-weight:700&quot;&gt;not&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;&amp;nbsp;support any ESP32, and my fork is mostly non-functional&lt;/span&gt;&lt;span&gt;. That project supports a few Arduino variations with corresponding motor shields used to generate the DCC track power. The firmware also supports very specific wifi or ethernet shields for the remote app communication. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I do have a few supported Arduino UNO or Nano, yet I did not have the adequate motor / wifi / ethernet shields to run the whole thing as-is.&lt;br&gt;Since I want this to adapt my app to work with the device, the wifi or ethernet shield is the mandatory part and that&#8217;s precisely what I did not have around. I do have a Digistump DigiX (mega with wifi clone) for my old layout using my &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/layout-wifi&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Translate control software&lt;/a&gt;&lt;/span&gt;&lt;span&gt;; I don&#8217;t want to rip that off though. I could order some Arduino wifi shields but right now shipping from low cost providers overseas is taking about forever.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On the other hand, I have a handful of ESP32 around. All of them have wifi, which is exactly what I need. How hard would it be to run the DCC++ EX firmware on them?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The DCC++ EX firmware is not designed to build on ESP32, and without corresponding motor shields it&#8217;s rather moot to control any DCC. Yet for my Android app communication needs, that&#8217;s fine. So I did just that:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/ralfoide/CommandStation-EX&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/ralfoide/CommandStation-EX&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is my fork of the DCC++ EX firmware to build on ESP32.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It uses the same PlatformIO configuration file with a new &#8220;esp32&#8221; target.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;I don&#8217;t have a suitable motor shield driver so I added a new &#8220;no-op motor driver&#8221; that does exactly nothing.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;My fork further disables DCC waveform generation ISR since I have no need for it.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;I was agreeably surprised to see the firmware had support for an I2C LCD (got one here), or even an OLED exactly like the one included on the &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3gDnQAC&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;&#8220;Wifi Kit 32&#8221;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;board. However the default implementation is Arduino-pin centric so I added a new implementation to support the OLED screen via the U8G2 library.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The default firmware supports either the AT-based wifi (ironically implemented using an ESP8266) or an ethernet shield. Neither of these are suitable as-is on the ESP32. I added a new &#8220;Wifi ESP32&#8221; implementation by forking their ethernet shield support and adapting it to support the late-init style of the wifi.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The was some low-level code that I simply disabled with the appropriate &#8220;#if !defined(ESP32)&#8221; which was performing I don&#8217;t know what DCC-related duty.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The result of that fork is available here on Github at &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/ralfoide/CommandStation-EX&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/ralfoide/CommandStation-EX&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;after I cleaned it a bit. The &#8220;no-op motor driver&#8221; is IMHO something the DCC++ EX project should have upfront, to make it trivial to debug the firmware without affecting any real DCC accessories or to make it easier to port their firmware to new architectures. The OLED U8G2 and the Wifi ESP32 support are fairly obvious. For that latter, I used the WiFiServer / WiFiClient Arduino-based classes; they integrate very well with the ESP32 and basically mirror the &#8220;Ethernet Interface&#8221; that was implemented in the DCC++ EX code.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I obviously did not spend any effort trying to support the feature set of the ESP32 nor its FreeRTOS foundation. For example the DCC++ EX firmware is very careful to only perform a small incremental unit of work in its main loop, updating only part of the OLED display, or processing only part of the DCC cab wifi chatter. All these would be better architectured as individual FreeRTOS tasks communicating between each other with the appropriate FreeRTOS semaphores, queues, or message buffer synchronization APIs. That would allow using the two CPU cores more efficiently when available.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the end, that did serve me well to debug the app behavior though, which was the whole point.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.alflabs.dcccab&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Cab Engineer DCC Throttle&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;app for Android is available on the Google Play store and the latest &#8220;beta&#8221; v0.1.5 version is available by joining the &#8220;beta channel&#8221;. It features:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;New: Connect to DCC++ EX command stations.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There is no auto-discovery yet. I will likely add that later; apparently this is done by scanning for a wifi access point with a name of &#8220;dccex-&amp;lt;mac address&amp;gt;&#8221; and I could change my ESP32 port to perform that too.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;New: Support for Track Power control in the JMRI / WiThrottle protocol.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This is supported by the DCC++ EX command stations.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;For JMRI using an NCE command station, the track power is shown as &#8220;Unknown&#8221;. I&#8217;ve added an app setting to hide the track power control card in that case, so if you want that card yet don&#8217;t see it, enable it in the app settings.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;New: Connection status card (useful with flaky wifi).&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Connection status used to be a small line updating at the bottom of the screen. Although I do like that a lot, I do realize it can be quite subtle for many users. The new card makes the connection status more obvious. More importantly it clearly indicates if the connection is being lost and a reconnection attempt is happening. The card can be disabled in the settings, in which case the old one-line status is shown.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;New: Edit/delete server entries.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Sort of the kind of obvious functionality that is coming slowly&#8230; That&#8217;s still version 0.1.x after all.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Updated JMRI heart beat handling &amp;amp; reconnection.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;That&#8217;s an area where I had partial support so I finally completed it. I &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;believe&lt;/span&gt;&lt;span&gt;&amp;nbsp;I&#8217;m following the WiThrottle heartbeat protocol properly (as much as I can tell from the lacking documentation).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;I also added my own check on that. If the app can&#8217;t talk to the JMRI server, it automatically disconnects and reconnects. I found that useful on flaky wifi networks. I prefer the app to tell me it fails to connect to the server than let me hanging and believe my commands &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;may&lt;/span&gt;&lt;span&gt;&amp;nbsp;be received some day later.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The step in the app is translating as well as focusing on implementing DCC Fn support, with both profiles and customization. The current UI in the app is limited to F0..F8 and fixed quick functions, which is not even enough for my own needs. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2021-04-24T00:00:51-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Dwarf Signal for Turnout, Continued</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2020-03-15_dwarf_signal_for_turnout_continued.html"/>
<id>https://www.alfray.com/trains/blog/train/2020-03-15_dwarf_signal_for_turnout_continued.html</id>
<category term="dcc" label="DCC"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s a concrete example that shows how to wire &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2020-03-08_dwarf_signal_for_turnout.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;LEDs directly to a turnout frog, as explained here&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, and makes it obvious how trivial this is:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:284.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_70f1ff27d99b6d1de1828aadf3a55f3745f155098d0fd111ff9794794dee12e3i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:277.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_6bbab8b81aee74e4be90a428fd7872929a358560a921927c098e70f3c14ec27fi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Resistance used here is 1 k&#8486;, that gives good brightness for both the green and red LEDs.&lt;br&gt;A 2.2 k&#8486; resistance also worked well enough for the red LED yet made the green one too dim.&lt;br&gt;In this example, the frog polarity is switched between rail A and B by a microswitch using the EZ-Track coil mechanism.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Another variation of this that I plan to use on the Randall Model Train layout is to only have the red LED, to make it clear when a turnout is left thrown/divergent. Especially for mainline turnouts, it acts as a &#8220;warning&#8221; signal. There is no need for the green LED in that case. I will likely embed the LED directly next to the turnout in the ballast. These LEDs are small enough that they could even be placed between the ties. The LED and the resistance can be wired to the existing terminal connected to the auxiliary contracts of the Tortoises.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2020-03-15T00:00:40-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Dwarf Signal for Turnout</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2020-03-08_dwarf_signal_for_turnout.html"/>
<id>https://www.alfray.com/trains/blog/train/2020-03-08_dwarf_signal_for_turnout.html</id>
<category term="dcc" label="DCC"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s an idealized turnout, showing the polarity of the frog based on whether the turnout is normal or reverse:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:157.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:537.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_8c53fe3eb6100a667103f059ec865db63097a0b4312346cc3f9c86d4c7fc3f80d.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The frog is directly connected to rails A or B via the switch points of a slow-motion turnout motor, be it a Tortoise or a Fulgurex (in the case of the Randall layout). This works for any turnout which has a metal frog which polarity changes based on the turnout position. Examples are turnouts powered by a Tortoise or Fulgurex where the auxiliary contacts from the slow-motion motor are used to change the frog polarity. Another example are the EZ-Track turnouts with a metal frog.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We can directly wire two LEDs, green and red, with a resistance, to the frog and the A / B rails to get them illuminated to indicate the position of the turnout, as follows:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:221.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:306.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_ec33b4db6c69630c2f1233f281dc38238f45e9dfd0d04d640fd95c761fe64fc1d.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When the turnout is in normal position, the frog is connected to the A rail, thus the voltage difference between the frog and A is zero; consequently the red LED would be turned off. However the difference between the frog and B rail would be the full DCC signal, and the green LED will be turned on. Similar thing when the turnout is in the reverse position, with the opposite LED being lit up.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note that the LEDs would be &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;directly&lt;/span&gt;&lt;span&gt;&amp;nbsp;connected via a resistor to the DCC signal, which is anywhere from 14-16 V &#8220;DC&#8221;. The DCC is a square signal with polarity inverted for each bit with roughly a 50% cycle, so essentially the LEDs will be conducting forward (illuminated) half of the time, and in reverse voltage (not illuminated) the other half of the time. That also means the polarity of the LEDs does not really matter in this case, however it is important to check the LED can stand the reverse voltage.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Red LEDs can supposedly stand a large reverse voltage whereas green / orange / blue ones cannot &lt;/span&gt;&lt;span style=&quot;vertical-align:super&quot;&gt;[citation needed]&lt;/span&gt;&lt;span&gt;. A typical design workaround is to add another diode in reverse to the LED to avoid that reverse voltage.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A resistance is required in serie to compensate, anything from 1 k&#8486; to 10 k&#8486; depending on the desired brightness versus lifetime of the LED.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2020-03-08T00:00:45-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">NCE AIU and NCE EB1 Circuit Breakers</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2019-09-29_nce_aiu_and_nce_eb1_circuit_breakers.html"/>
<id>https://www.alfray.com/trains/blog/train/2019-09-29_nce_aiu_and_nce_eb1_circuit_breakers.html</id>
<category term="nce" label="NCE"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One issue I have on the Randall layout is that operators or automation sometimes short the layout. Then the NCE EB1 circuit breakers take over and of course shut down their corresponding power district. Then operators or staff ask me why things do not work, yet a lot of them fail to check the circuit breakers to see if they are shorting.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One idea I had a while ago was to use an &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933435-Auxilliary-Input-Unit-AIU01-&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE AIU01&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to monitor the NCE EB1 circuit breakers. Then I could feed that into my automation software and get reporting of actual shorts right on my status web page.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The proposed solution is to use dual-channel optocouplers to connect the EB1 LED output to the AIU inputs.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:391.22px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:695.07px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_057bb6f1d08fbc01e780b54ca5b71465ee00b1a7e8b5614f1b32daa06d3bd8b9d.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here are the details, as updated on 2020-02-04:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;HCPL2630/TLP2630/VO2630 dual-channel optocouplers.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The NCE EB1 has a 4-position terminal. Positions 3 and 4 are designed to connect an external LED. According to the EB1 doc there&#8217;s already a 300&#8486; resistor, and it outputs 5 V, thus around 17 mA.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933435-Auxilliary-Input-Unit-AIU01-&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE AIU01&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;inputs are actually pull-ups, activated when driven to ground. This is a perfect match for the output of these optocouplers.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Details on the EB1:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;The EB1 doc indicates a LED (-) should be on terminal pos 4 (outer side) and thus logically the (+) on the inner terminal pos 3&lt;/span&gt;&lt;span&gt;. Contrary to what the EB1 doc says, on the EB1 I took to experiment with, Terminal 3 (inner, lower) is LED -, and Terminal 4 (outer, lower) is LED +.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The on-board LED and the external LED terminal are connected to a PIC 12F683 (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ww1.microchip.com/downloads/en/devicedoc/41211d_.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;pdf link&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) on Pin 7 (GP0). The on-board LED is connected between that same pin and Vdd (positive power supply) [Reminder: Vss=Ground, Vdd=+Voltage]. Thus keeping GP0 low would by default light up the LED, which seems to be the default behavior.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;EB1 LED is ON by default (no short) &#8658; Opto output = Low &#8658; AIU bit == 1.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;According to the EB1 doc: &#8220;300&#8486; 5 V&#8221; &amp;nbsp;= 17 mA.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Details for the optocouplers:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Toshiba TLP2630 (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://toshiba.semicon-storage.com/info/docget.jsp?did=16837&amp;amp;prodName=TLP2630&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;direct download datasheet&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) or Vishnay VO2630 (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.vishay.com/docs/84732/6n137.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;datasheet&lt;/a&gt;&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;I&lt;/span&gt;&lt;span style=&quot;vertical-align:sub&quot;&gt;F&lt;/span&gt;&lt;span&gt;&amp;nbsp;max is 20 mA. Recommended input current is 5 ~ 6.3 mA..&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Experimentation shows that a 470&#8486; resistor worked well to activate the LED side of the optocoupler.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The optocoupler output is an open-drain. In practice that means it needs to be pulled up to Vcc, and it is grounded when activated.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Experimentation shows a pull-up of 1k&#8486; or 2.2k&#8486; worked well.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The AIU has a 10k&#8486; pull-up on each input. My 2.2k&#8486; pull-up thus goes in parallel, and makes for an equivalent 1.8k&#8486; resistor. At 5V, that&#8217;s 2.7 mA. The datasheet recommends the output pull-up resistor to be in the 330-4.4k&#8486; range and a typical sinking current of 13 mA.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Like the 6N137 (its single channel counterpart), the 2630 optocoupler works as an inverter, that is the output is low when the input is high.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Since the EB1 LED is on by default, the optocoupler output will be low by default, which is seen as a 1 by the AIU. My preference would be to have them reversed, that is I&#8217;d prefer the AIU input to be high by default to avoid sinking current through the optocoupler all the time. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;With all this into account, the schematic is thus the following:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:427.91px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:621.05px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_0091f4e1d4db43de75e66511f43f7567ad0d8d835a213f2c0a6ff96d8664625cd.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When there&#8217;s a short, the EB1 turns off the status LED, and thus the AIU input is read as a 0. However, being a self-reset device, the EB1 just keeps trying to re-apply power every few seconds, which makes its status LED blink briefly -- this has a nice side effect allowing for easier visual identification. Due to the NCE cab bus&apos;s pathetic refresh rate for these AIU01 cards, there is a tiny possibility that each AIU read would be aligned on the time where the LED blinks, and thus the shorting status would be missed. This needs to be identified and tested first. If that&#8217;s an issue, it can be solved by just adding a capacitor on the output like I did to solve the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/about.html#h.g3i8lbjtmb8z&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;missed button presses&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;issue.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is the 2630 optocoupler I plan to use (the prefix name depends on the supplier):&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:366.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:624.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_e2f71cd7284cf8bb4f1f1a80214affb6e2d6c674af576969b6ae34dac57eeffdi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s also possible to use the 6N137 single-channel optocouplers instead, one per EB1 output to monitor.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Two EB1 are connected to each opto-coupler as follows:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;EB1 #1 terminal 4 (outer) = LED+ &#8658; 470&#8486; &#8658; Opto pin 1 // pin 7 &#8658; AIU pin 1&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;EB1 #1 terminal 3 (inner) = LED- &#8658; Opto pin 2&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;EB1 #2 terminal 4 (outer) = LED+ &#8658; 470&#8486; &#8658; Opto pin 4 // pin 6 &#8658; AIU pin 2&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;EB1 #2 terminal 3 (inner) = LED- &#8658; Opto pin 3&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Opto pin 8 Vcc to AIU +5V from 7805&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Opto pin 5 GND to AIU GND&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;AIU01 address: 62&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;JMRI Address / Number = (AIU01 address - 1) * 16 + (AIU01 input - 1)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;JMRI Address from 976 (62:1) up to 989 (62:14), included.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Mapping from NCE AIU to EB1 (or others):&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:90pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;JMRI address&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:78.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;AIU pin&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:141.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;EB1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:157.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;Optocoupler&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:90pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;976&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 234, 211);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:78.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:141.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;P1 V1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 217, 217);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:157.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;O1 pin 1+2&#8658;7&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:90pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;977&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 234, 211);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:78.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:141.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;P1 STKYD&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 217, 217);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:157.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;O1 pin 3+4&#8658;6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:90pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;978&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 234, 211);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:78.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:141.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;P2 V2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:157.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;O2 pin 1+2&#8658;7&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:90pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;979&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 234, 211);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:78.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;4&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:141.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;P2 NAPA&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:157.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;O2 pin 3+4&#8658;6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:90pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;980&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 234, 211);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:78.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;5&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:141.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;P2 TOWN LODI&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 217, 217);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:157.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;O3 pin 1+2&#8658;7&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:90pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;981&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 234, 211);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:78.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:141.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;P2 FAIRFIELD (*)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 217, 217);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:157.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;O3 pin 3+4&#8658;6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:90pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;982&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 234, 211);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:78.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;7&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:141.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;P3 MTN&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:157.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;O4 pin 1+2&#8658;7&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:90pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;983&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(208, 224, 227);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:78.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;8&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:141.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;P3 BRN RCH-2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:157.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;O4 pin 3+4&#8658;6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:90pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;984&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(208, 224, 227);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:78.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;9&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:141.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;P4 MTN-2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 217, 217);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:157.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;O5 pin 1+2&#8658;7&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:90pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;985&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(208, 224, 227);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:78.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;10&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:141.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;P4 BRPORT&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 217, 217);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:157.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;O5 pin 3+4&#8658;6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:90pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;986&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(208, 224, 227);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:78.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;11&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:141.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;P4 SIA RND&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:157.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;O6 pin 1+2&#8658;7&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:90pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;987&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(208, 224, 227);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:78.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;12&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:141.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;P4 STK STN (*)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:157.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;O6 pin 3+4&#8658;6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:90pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;988&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(208, 224, 227);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:78.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;13&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:141.8pt&quot;&gt;&lt;p style=&quot;height:11pt;text-align:left&quot;&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 217, 217);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:157.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;O7 pin 1+2&#8658;7&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:90pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;989&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(208, 224, 227);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:78.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;14&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:141.8pt&quot;&gt;&lt;p style=&quot;height:11pt;text-align:left&quot;&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 217, 217);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:157.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;O7 pin 3+4&#8658;6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The AIU has 2 terminals of 8 positions each (1 GND + 7 inputs). I&#8217;d like to find 7 or 8-wire ribbon cables and use that to connect a little board containing all the optocouplers to the AIU and attach them both together. I should look at old floppy or ATA ribbon cables that I have around.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span&gt;Originally I was going to use AIU inputs 13 and 14 to monitor mains voltage. One for the layout mains, and the other for the DCC switch. Instantly that reminded me of the &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;is_computer_on()&lt;/span&gt;&lt;span&gt;&amp;nbsp;API joke&#8230; &lt;/span&gt;&lt;span&gt;since this AIU will be read by the PC that is powered by the DCC switch, there&#8217;s little point. They would always be on. Still I should wire optocoupler #7 in case I want to add 2 inputs later.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(*) EB1 for P2 Fairfield does not exist yet, and my original plan was to mount it next to Fairfield, not by the DCC command station. I decided to place it with the other EB1s for consistency.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;(*) EB1 for P4 Stockton Station does not exist yet, however the plan is to have it with the other EB1s.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2019-09-29T00:00:22-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Searchlight Car conversion to LED</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2019-09-21_searchlight_car_conversion_to_led.html"/>
<id>https://www.alfray.com/trains/blog/train/2019-09-21_searchlight_car_conversion_to_led.html</id>
<category term="train" label="Train"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;ve just finished this project:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:260.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:752.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_fe7d59a5381c5b724204c59846b74c729f0be27257538a213e31819699e753f4i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The car itself is a Model Power HO Scale &#8220;Safety First #624 Searchlight&#8221;. It&#8217;s a depressed flat car with a nice &amp;amp; sturdy die cast metal construction. It&#8217;s really well done. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Jim got it for Randall and when we tried to use it, somehow trains started crawling when pulling the car.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The issue was quickly obvious: the car initially used a miniature 12V light bulb, and was simply drawing too much current on the DCC power bus, with no current limiting resistor. The transparent plastic cover was removed easily. Inside the bulb was screwed and was easy to remove. However the bulb socket was held by some kind of glue and was a lot harder to remove.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I replaced the bulb by a 3.5mm white LED, and added a 22 k&#8486; resistor under the car. I decided to keep my changes extremely simple -- &amp;nbsp;I&#8217;m not using any kind of rectifier bridge, which means the light is technically only lit during about half of the DCC cycle, and I&#8217;m not trying to use any kind of capacitor to prevent flickering.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:274.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:719.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_8069e6e2daa0f6bfa4832027348a23f278cd3d89a9157d3c35290b3c38b9a289i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In daylight the LED plastic casing neatly focuses the light towards the front of the bulb. That&#8217;s perfect when the LED is encased in a panel, but here it is counterproductive as no light gets diffused on the side on the aluminized paper that acts as a deflector. Consequently it was producing a piercing narrow beam. To compensate for that, I coated the top of the LED with a dab of white glue. It dries leaving a translucent coating that diffuses the light a bit.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Detail on the LED under the searchlight cover, showing the coating on top of the LED to act as a diffuser:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-left:auto;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:434.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:383.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_f4d71476ec02bb1e3b66114093066c3ff31c8f789e0415fe3d7f561f16921bc1i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:434.77px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:358.10px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_03407dde4d6b69a37595dc5a4a532727b443ce97176967ae28dabc7677dc9247i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The bottom of the car with the resistor and the wires held with kapton tape:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:320.02px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:734.50px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_f07cb387621ecd7b64c3d7b3b394cd8a99473fd609f01a3921d9b8bc5ce57c70i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It is now installed at Randall in one of the currently unused tracks next to the Stockton town. I&#8217;ve made a little vignette with it. It looks nice and visible, without being too bright:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:226.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_c792c68f5b69d3549e7e1ca74b850ecfd4306584e3a128bbc9b4732f0a89bf0ci.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2019-09-21T00:00:16-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Automatic Route Speeds &amp; Per-Route Rules Scoping</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2019-06-22_conductor_2_automatic_route__63607e80.html"/>
<id>https://www.alfray.com/trains/blog/train/2019-06-22_conductor_2_automatic_route__63607e80.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One of the goals of &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is to codify and simplify some rules which are explicitly coded in the script for Conductor 1.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One such thing is the handling of train speeds along a route.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Most speed changes in the current V1 script can be codified as the following:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Speed change when &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;entering&lt;/span&gt;&lt;span&gt;&amp;nbsp;a block.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Speed change within a block (with a delay).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A lot of the rules have extra conditions to make them happen only for a given route, and a specific direction.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Both combined gives us some explosive combination numbers: if this route is active, in this direction, and in this block, then set the train speed to such. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I have 2 suggestions.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First we codify the route per-block speed as a definition of the block for that route.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This can be done in a variety of ways, for example a map in the route (block &#8658; speed), but that does not take into account subtle variations such as direction.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The other suggestion is to move rules to be part of the route/block definition, rather than separate. This would be rules that are only interpreted when the block becomes the current occupied one. In this case, as mentioned in a previous post, we want to account for additional events, namely entering and exiting a block, which we codify as a block become occupied or trailing / free if we use the reservation system.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s an example of the route syntax for now:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;RPA = route {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; name = &quot;Passenger&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; toggle = PA_Toggle&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; throttle = AM&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; status = &quot;PA_State&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; route = [ B503b, B503a, /*B311,*/ B321, B330, B340, B350v, B360,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; B370,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; B360, B350v, B340, B330, B321, /*B311,*/ B503a, B503b ]&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This would become:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;RPA = route {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; name = &quot;Passenger&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; toggle = PA_Toggle&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; throttle = AM&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; status = &quot;PA_State&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; start = {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AM.light = 1; AM.sound = 1;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SP.sound = 0;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AM.forward = AM_Leaving_Speed;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AM.horn();&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AM_Delayed_Horn.start();&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AM_Timer_Acquire_Route.start();&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AM.f1 = 1;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; jsonEvent key1: &quot;Depart&quot;, key2: &quot;Passenger&quot;, value: &quot;&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; route = [ &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; block B503b,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; block B503a forward AM_Leaving_Speed {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AM.f1 = 0;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SP.sound = 0&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; },&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; block B321&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; occupied { ... rules ... }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; trailing { ... rules ... }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; free { ... rules ... }, &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; block B330&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; enter { ... actions ... }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; exit &amp;nbsp;{ ... actions ... },&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; B340, B350v, B360,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; B370,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; B360, B350v, B340, B330, B321, B503a, B503b ]&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This moves a lot of the current code inside the route definition, which may make it harder to read. Even if doing it that way, the example above explores two possible syntaxes:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Pair of attributes (e.g. speed forward/reverse + value) can be given right in the block builder, followed by a generic single closure of what to run when the block is occupied.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;If the groovy syntax allows for it (does it?), then we have the choice of having multiple closures, each with an event name + a list of rules to evaluate.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Events could be enter/exits (ephemeral states) which lead to executing concrete actions,&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Or states could be occupied/trailing/free which lead to rules being interpreted each time the block is in that state.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note that this is supposed to be a syntax simplification. From a model perspective, this is the same as what we have now by &#8220;unrolling&#8221; the conditions:&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;On { RPA.route_active &amp;amp;&amp;amp; B321.occupied &amp;amp;&amp;amp; AM.forward &amp;amp;&amp;amp; PA_state == Enum } then &#8230; &lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The important question is actually whether the route state enums are still needed (probably yes in some cases), and how do they integrate with that system.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Also what happens with delayed timers? &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&quot;console &quot;&gt;&lt;span&gt;For example for transient actions such as &#8220;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;AM_Delayed_Horn&lt;/span&gt;&lt;span&gt;&#8221; above, where should the rule reside? Would it be evaluated if it&#8217;s defined inside a route/block/occupied scope?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That can actually be made into a strength as sometimes it does need to be conditional, and some other times it should not.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2019-06-22T00:00:57-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Simulations &amp; Expectations for Occupancy</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2019-06-20_conductor_2_simulations_expe_dfd12b83.html"/>
<id>https://www.alfray.com/trains/blog/train/2019-06-20_conductor_2_simulations_expe_dfd12b83.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Starting to implement the occupancy manager in &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;immediately showed an issue in the default route mapping: the default idle block of one route cannot be part of another route.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So let&#8217;s backup and analyze this.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First let&#8217;s define what is a &#8220;sanitized&#8221; route. This is a route, composed of blocks, where one and only one block is marked as occupied at a given time. This is the ideal non-ambiguous situation that makes everything easier. At startup it means we can positively identify where the one engine is. When running, given the known position of the train, we can either assert the train is moving through the route as expected &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;or&lt;/span&gt;&lt;span&gt;&amp;nbsp;during simulation we can determine the next block.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We define an &#8220;idle&#8221; block as the expected resting block of the train once it has finished its programming. For a given route, this block is typically a constant. This is not currently codified in the script, although it could (e.g. to validate starting conditions).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One limitation comes from overlapping routes. Let&#8217;s say route A is a super-set of route B. Both have &#8220;idle&#8221; blocks. If route B is purely a subset of route A, it means route A has two occupied blocks when both trains are idle. This is contradictory as it means train A cannot possibly run without colliding with train B. In reality that condition could happen yet be physically safe if the idle block B is a turnout that triggers as occupied once thrown for route B, such as a branch spur. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It does not work from a graph perspective, so we&#8217;ll &lt;/span&gt;&lt;span&gt;posit&lt;/span&gt;&lt;span&gt;&amp;nbsp;these rules:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The idle block of a route cannot be part of another overlapping route.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Routes should be defined such that there is only one occupied block per route when they are all idle.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are 3 runtime scenarios we must consider:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The case of the initial loading of the script, either for automation or simulation. We want to be able to compute the initial state of the route and determine if it is &#8220;safe&#8221; in a non-ambiguous way.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The case of an active route during automation.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The case of an active route during simulation.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Routes currently do not have a proper state variable. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are two kinds of states we can associate with a route.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A first state would be the &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;&#8220;quality&#8221; or &#8220;error&#8221; state&lt;/span&gt;&lt;span&gt;&amp;nbsp;of the route:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A &#8220;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;good&lt;/span&gt;&lt;span&gt;&#8221; state is a &#8220;sane&#8221; idealized route with a single block occupied.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An &#8220;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;invalid&lt;/span&gt;&lt;span&gt;&#8221; state is an ambiguous route that has either zero or more than one block occupied. This can be a transient state, for example if two routes share a crossing block.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An &#8220;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;error&lt;/span&gt;&lt;span&gt;&#8221; state is when a route has been identified as being in error by the script, typically because a moving train failed to reach the next checkpoint within a certain time. That typically denotes a permanent error where the script determines that a human verification of the state is required before doing a full reset.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A &#8220;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;paused&lt;/span&gt;&lt;span&gt;&#8221; route is an active route (with a running train) where that train has been stopped due to a possible transient and rectifiable error situation.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Orthogonal to this, there&#8217;s a &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;&#8220;programmatic&#8221; state&lt;/span&gt;&lt;span&gt;&amp;nbsp;(needs a better name!):&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;empty&lt;/span&gt;&lt;span&gt;&amp;nbsp;route -- no block is known to be occupied. It has no trains as far as the &#8220;blind&#8221; detectors allow us to determine. Such a route cannot be started.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An &#8220;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;idle&lt;/span&gt;&lt;span&gt;&#8221; route -- this is a &#8220;sane&#8221; idealized route with a single block occupied, where the said block is the expected idle block for the route. As far as the automation knows, there is one train at the expected location, thus we&#8217;re going to assume it is the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;proper&lt;/span&gt;&lt;span&gt;&amp;nbsp;train (e.g. with the expected DCC address defined for that route).&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Next state: Active, or Locked.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An &#8220;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;active&lt;/span&gt;&lt;span&gt;&#8221; route is a route where movement has started. There can be more than one active route in the script as long as they do not overlap.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Next state: Idle.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A &#8220;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;locked&lt;/span&gt;&lt;span&gt;&#8221; route is an idle route that cannot run as it currently overlaps with an active route.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Next state: Idle.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It is important to indicate that here we deal with &#8220;absolute locked&#8221; routes. As indicated before, there is some value in having different route management strategies. Another obvious strategy is a &#8220;window block occupancy&#8221; that would automatically lock blocks as a train advances and release them behind. The current manager would not have to deal with that.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the current Conductor 1 script, the route programmatic state is not explicit. It is implicit via the script&#8217;s internal enum states. As such the mainline has two overlapping routes and which one is running is determined by the AM vs SP enum states. There is some value in making that explicit.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The script would be structured as such:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;When both AM &amp;amp; SP routes are in a good + idle state, and motion is triggered, then the AM or SP route is set to active (alternatively).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Once the AM route is active do all its conditions/actions.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Same for the SP route.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;At the end, set the active route to idle.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;The semantic difference is that:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Checking the route is in a &#8220;good state&#8221; validates only one block is active.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Checking the route is in the &#8220;idle&#8221; state validates only that the idle block is active.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;This removes a bunch of confusing checks in the script.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We do not explicitly need to check against locked routes for now. That dependency can be computed on the fly, or pre-computed and changed when a route becomes active or inactive.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The route occupancy strategy is going to differ slightly between automation and simulation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;During automation, trains move and thus trigger the &#8220;next&#8221; block. If the route is well defined, this should be the block just &#8220;after&#8221; the one currently occupied. The notion of &#8220;next block&#8221; depends on the route definition, and not on the engine running direction -- even for a shuttle operation, the blocks are present twice in the route. In other words the current block moves from index N to index N+1. This matters since by definition a shuttle route will have every block appearing twice in the route, but at different indexes corresponding to different running directions.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There may be a period of time when both the &#8220;active&#8221; block and the &#8220;next&#8221; one are going to be activated as the engine transitions from one to the other. That period of time will be longer if the train has for example a powered rear engine or car. This matters because in that case we don&#8217;t want the route to transition from a good state to an invalid one, so we need a way to mark the block as being occupied by a &#8220;trailing&#8221; portion of the train, ideally with a sanity check as we expect that status to be cleared within a certain time (unless the train needs to stop on a two block boundary, which is not a very desirable scenario).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the previous post from 2018-12-08, I did define that a &#8220;Block Reservation model&#8221; with the values (free, occupied, or trailing). This is circling back to exactly that same model. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There is an important detail in the block reservation model so I&#8217;ll put this on bold here:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;An occupied block must not be conflated with an active sensor/block&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;An &#8220;active&#8221; block (or sensor) is a physical state. An &#8220;occupied&#8221; block is a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;modeled&lt;/span&gt;&lt;span&gt;&amp;nbsp;state. They must be allowed to sometimes differ.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The reservation model is especially useful for an ABS running strategy with a train controlled by looking at N blocks ahead. However we can generalize it for all kinds of running strategies:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The train is on a given block N, which is the occupied block.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;As the train moves to the next block in the route, block N becomes &#8220;trailing&#8221; and block N+1 becomes &#8220;occupied&#8221;. From a sensor perspective, block N (the exited block) may be either off or active, so it&#8217;s important here to not conflate block sensor activation and block occupancy.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;In this scheme, the &#8220;previous&#8221; block is always reserved as a trailing block as long as the train is moving.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Thus it&#8217;s only when the train moves to block N+2 that block N becomes free, block N+1 becomes trailing, and block N+2 becomes occupied.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are however two problems with this scheme:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There&#8217;s a deadlock situation in a shuttle route when the train reaches the reversal point. By definition the N-1 block would never be free, and the train could never return. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#8658; This can trivially be solved by indicating the &#8220;trailing&#8221; block is freed when the train stops voluntarily, or by having an explicit &#8220;route recompute&#8221; action in the script.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This scheme does not work for a route that has only two blocks.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#8658; Unless that happens to be a shuttle route since the reversal action will reset the trailing block which is the only other block in the route.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;How does this scheme work in a simulation mode?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It should work pretty much the same way. The only difference is that for each block we need an implicit timer to advance to the block N+1. This would be done by simulating a sensor activation for N+1 and a sensor inactivation for N.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;How does this scheme work with Virtual Blocks?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First they need to work the same work for automation and simulation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The previous reasoning was to automatically trigger them with a simple rule:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;If a block N becomes occupied in the route and N+1 is a virtual block, we automatically make block N+1 occupied too. Virtual Block N+1 is reset when trains enter block N+2.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;One issue with that is that we now have 2 occupied blocks on the route, which is contrary to our definition of a &#8220;sane&#8221; route. It is also wrong, from a physical point of view, for a train to simultaneously occupy blocks N and N+1 at the same time when entering a single block, since the virtual blocks are here to represent non-ambiguous physical blocks that have no sensor.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What matters is that the train entered and left the block &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;before&lt;/span&gt;&lt;span&gt;&amp;nbsp;the virtual block. So let&#8217;s try this:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Give N a sensor-backed block, N+1 a virtual block, and N+2 a sensor-backed block,&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;If a block N was occupied and changes from active to non-active, then virtual block N+1 is made active, which changes it to occupied, and block N changes to a trailing state as usual.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;When block N+2 becomes active, the manager proceeds into making N+2 occupied and N+1 a trailing block, and N becomes free per the usual rules,&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This has the advantage that the only difference between a virtual and sensor block is the activation. The rest uses the usual management.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For simulation, no change is needed. The simulation would make virtual block N+1 active and deactivate N, which the virtual block manager would pickup and basically do the same thing, so it&#8217;s an idempotent operation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2019-06-20T00:00:30-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Cotton Belt 9389</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2019-06-15_cotton_belt_9389.html"/>
<id>https://www.alfray.com/trains/blog/train/2019-06-15_cotton_belt_9389.html</id>
<category term="train" label="Train"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;Jim gave me this engine, with the sole purpose of changing the horn. How hard can it be?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:272.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:770.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_80189da38fbe73dcc02a5dc912fa85e166148a36e5a4f9849013c7b558a4ae0ai.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Well actually it&#8217;s trivial. Too trivial in fact. At first I could not figure which decoder this was, and it was obviously one I was not familiar with. I put it on JMRI and that gave me too many options to choose from. I opened the engine and figured out it was a TCS decoder -- specifically a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://tcsdcc.com/index.php/1527&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;WOW121 Diesel&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &#8220;problem&#8221; as far as I can tell is that the horn is simply changed by using the F9 button on the controller. That&#8217;s enough to make it cycle through the bazillions of horns available by this decoder. Which means even after I select the proper one, one mistaken push to F9 will change it to something again. F8 seems to do something similar to the bell, or at least change F9 to either select the bell or the horn. I&#8217;ll have to dig into the decoder&#8217;s manual to find if there&#8217;s a way to &#8220;lock&#8221; in that behavior.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;After that, I figured I&#8217;d try the engine around the layout and immediately hit a bump, literally. See the picture above? That&#8217;s the engine sitting &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;on the tank&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the track. The tank&#8217;s plastic molding has a bit of a rough edge, and the tank is quite low, almost touching the track. In some places the thing would hit a rail join and get stuck. I tried to smooth the borders of the tank&#8217;s plastic molding and that helped a tiny bit, but not much -- instead it got stuck somewhere else where I could see that the track was not totally flat. Just enough to have the engine sitting on the tank and the wheels not have enough pressure to make the engin move.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:342.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:766.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_4e7ee9dc6b3afa64acf28e850d8a2c919d404436ede7574b2caa5fe0bed014a8i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s not my engine so I did not attempt to rectify it since there was no incentive from the owner (&#8220;it works just fine for me&#8221;). I agree, it works fine as a static piece on a siding. I just changed the bell, which is what I was asked to do.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2019-06-15T00:00:50-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Jupiter Steam 4-4-0 Engine</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2019-06-03_jupiter_steam_4-4-0_engine.html"/>
<id>https://www.alfray.com/trains/blog/train/2019-06-03_jupiter_steam_4-4-0_engine.html</id>
<category term="train" label="Train"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;Jim got this engine for Randall in commemoration of the 150th Anniversary of the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/First_Transcontinental_Railroad&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Transcontinental Railroad&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/5zgsYMEsdCo&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;My first attempts at doing that video were miserable as the engine would stop constantly at slow speed and I tried a few things to see if I could improve the power pickup.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:262.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:757.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_f6fed50b204b6a18c3dafd109c32c1741d6c7d821732ab9f58e12637e9bb28f8i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Power pickup is done both by the 4 driver wheels as well by the tender. The tender has metal brushes on the axles. I tried bending the brushes for better contact but that did not improve things. However a small drop of &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/30wTkNz&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;CRC 2-26&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the metal brushes improved the situation drastically. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-left:70.5pt;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:526.5pt&quot;&gt;&lt;p&gt;&lt;span&gt;Important Tip: If you use &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/30wTkNz&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;CRC 2-26&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;, be careful not to have it go on the wheels/rails as it is a lubricant.&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;That said I have used that to revive very old dusty layouts; it can behave similarly to Wahl in that when scrubbed over old dusty rails it will recondition the rail to conduct and prevent from oxidizing too fast, but it really needs to be scrubbed off otherwise it&#8217;s going to gung the wheels, and it will reduce traction.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In a typical &#8220;because I can&#8221; scenario, I decided to open it and check the decoder:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:257.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:747.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_e8b99ad0337e2b168680e7b8d7f5259a416d44ccd391ec0715f98e50d6160d53i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The decoder is unsurprisingly located in the tender. Note that to open it, all you need is to remove the two screws at the front of the tender. The coupler does not even need to be removed. It is a dedicated version of a Soundtraxx &#8220;Durango&#8221; decoder, specific for Bachmann, with a tiny speaker under the tender.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:254.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:763.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_bc320b0e43d750f8e950aab6da39e9562ffce7f67e7759ba088bbcbf59824171i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One can see the obvious diode rectifier bridge on the back. That gave me an idea. On the front we can see the two large 100 &#181;F caps and I decided there was enough space to add two more capacitors, and &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;first&lt;/span&gt;&lt;span&gt;&amp;nbsp;made sure it would all fit under the hood of the tender. Here is the modification being tested, using the output of the bridge rectifier:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:244.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:764.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_6624ba171860c390509e9f021fd2bcef2ebe1457a71a6d241b2263b05b9ccee4i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I got my inspiration from an excellent article in MRH Running Extra:&lt;br&gt; &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://model-railroad-hobbyist.com/magazine/running-extra/2018-12/stay-alive-n&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;&quot;Stay alive capacitors for N scale&quot;, MRH RE December 2018&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note that in total I&#8217;m only adding 200 &#181;F. That does not even qualify as a &#8220;stay alive&#8221;, but it did seem to make an improvement over poor pickup when I tried it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Finally it was time to assemble it all together:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:371.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:739.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_3734d4e06587d646cf21eda47fc4d09c4fbeb7a0299aafa1e8649a3f478e5f86i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The last step was running it and &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=5zgsYMEsdCo&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;filming the video&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, as seen above.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2019-06-03T00:00:13-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Concept of Routes &amp; Virtual Blocks</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2019-05-12_conductor_2_concept_of_route_117c560b.html"/>
<id>https://www.alfray.com/trains/blog/train/2019-05-12_conductor_2_concept_of_route_117c560b.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One of the main concepts to be added in &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is the concept of routes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Conductor 1 already has &#8220;route&#8221; definitions. These are actually intended for display on the remote tablets. A route is defined using:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A name,&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A DCC throttle object, used to display the engine speed and direction;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The JMRI sensor used for the automation toggle on/off.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A counter of number of times the automation started (incremented by the script).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The counter thing was a quick attempt at gathering some stats initially and never used -- it&#8217;s technically displayed by RTAC on the tablet, but the UI layout was designed for 2 routes, and with the current 3 routes the counter is ironically not visible. Even when it was visible, nobody was looking at it. Thus I suggest dropping it eventually, which will remove a couple lines from the script.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The concept of routes in Conductor 2 is supposed to be more elaborate. However I&#8217;d posit it can just be an extension of what is in Conductor 1 &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;at the syntax level&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the script.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So what properties would I want in a Conductor 2 route?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Earlier I was trying to separate &#8220;engine profiles&#8221; from routes. However that can be explored later as the idea seem either moot, or flawed, or both.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What seems relevant however is to have the following route properties:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;1- The list of blocks &amp;amp; turnouts that compose a route, for simulation and prediction.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;2- A route status as being active or idle.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;3- A simple route sequencing, e.g. to alternate between routes A and B.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;4- Automated route navigation modes influencing a localized window or global block locking scheme.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;5- Associating on..then events to a route rather than being global.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The ordering matters in this list. Step 1 is something I can use right now. Step 2 and 3 are possible easy extensions. Steps 4 and 5 are more involved extensions, to be done much later.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To make it clear, routes can and are designed to overlap in their layout block/turnout usage. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the current script, deciding which of the passenger or freight route runs next is done using a flip-flop enum. This could be equally done using a property on the route indicating which one is active or idle, and permuting that state between runs.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s define what a route&#8217;s block and turnout list should look like.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In my case, all I need are extremely linear routes. There is no branching possible, that is a route is fixed and cannot change.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A generic description of a route is a graph with nodes and edges. Each node is an occupancy block (real or virtual) or a turnout, and each edge is a direction of travel between two nodes. Edges are directional.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For a more generic description, one could potentially imagine an automation case where a route is a non-cyclic graph with branches, and not just linear. That could be useful when associated with an exec engine that would select branches either randomly or other criteria. In the case of a limited number of choices, this is trivially simulated by choosing between multiple linear routes, which is exactly what I have here with the freight vs passenger routes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One idea behind placing the turnouts in the route list is not for branching but for marking them as occupied/locked, and more important to define their default state. For example a fixed route list could indicate &#8220;B321, T330(N), B330&#8221;, thus indicating the required position of the turnout. This makes it possible to have a controller automatically setting the turnout to the requested position when the train reaches the block on either side.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As for marking a turnout as occupied, this allows it to be done automatically when a block on either side is occupied, so in the example above T330 would be marked as occupied as long as either B321 or B330 are occupied. This is mostly a display thing.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;All my routes are currently operating in shuttle mode. This opens another choice, whether only half the route is defined, or whether the whole entire trip-and-back route is expressly defined. In other words, can blocks be repeated more than once. This also depends on whether there&#8217;s some kind of coordinator defining how the blocks are used along the route. Mapping only half means essentially that the route has a dynamic graph (or two graphs), depending on the direction of travel, or has directional edges which can dynamically change directions. Thus to keep it simple for now, a route will have the exact list of all blocks travelled, in the &#8220;forward&#8221; direction, which means double the numbers of blocks for a shuttle automation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Thus a route definition will look something like this:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;routeF = route {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;&amp;nbsp; &amp;nbsp; name = &quot;Freight&quot; // defaults to variable name if omitted&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;&amp;nbsp; &amp;nbsp; toggle = PA_Toggle&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;&amp;nbsp; &amp;nbsp; throttle = SP&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;&amp;nbsp; &amp;nbsp; status = &quot;PA_State&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;&amp;nbsp; &amp;nbsp;route = [ B311, T311, T321, T320, B321, T330, B330, B340, B350v, B360, T370, T371, B370, T371, T370, B360, B350v, B340, T330, B330, B321, T320, T321, T311, B311 ]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;&amp;nbsp; &amp;nbsp;active = false &amp;nbsp;// implied&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;routeF.active = true&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;on { routeF.active } then { &#8230; }&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &#8220;route&#8221; property inside a route denotes the linear list of blocks and turnouts, which form the nodes of an implicit graph with forward-only edges.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The mention of the turnouts is for now to be omitted as they won&#8217;t be used for now. If present they could be marked as &#8220;locked&#8221; on a display map, or marked as occupied when any block next to them are occupied.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Virtual Blocks&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the example above, B350 is marked as &#8220;B350v&#8221; to denote it would be a virtual block. A virtual block is a sensor that has no physical backing (e.g. no JMRI sensor). These are blocks that are sandwiched between actual blocks, and on which the physical presence of a train is a given, thus I have not mapped a physical sensor to them. There are two ways to deal with them:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Automatically. Based on the direction of travel, a controller can trivially mark a virtual block as occupied when a train occupies the block before it, and release it when the next block is occupied. In the route example above, both &#8220;B340 B350v B360&#8221; and &#8220;B360 B350v B340&#8221; give us enough information to occupy and release the virtual block.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;By script. Being a sensor, the same can be done by programmatic rules. 4 rules are needed here per virtual block.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For my current usage, I have two such blocks, one on the mainline and one on the branchline.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;My current suggestion is to create them explicitly as such:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;B340 &amp;nbsp;= block &#8220;NS784&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;B350v = virtualBlock [auto=true]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Both &#8220;block&#8221; and &#8220;virtualBlock&#8221; are aliases for the current &#8220;sensor&#8221; creation. They all return a CSensor object to the script. However blocks have extra &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;read-only&lt;/span&gt;&lt;span&gt;&amp;nbsp;properties for Conductor, not related to a physical JMRI sensor:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;block.occupied = true | false&lt;/span&gt;&lt;span&gt;&amp;nbsp;(== sensor.active if backed by real sensor)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;block.locked = true | false&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;&quot;&gt;Block.position = float [0 &#8230; 1.0] or NaN&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A new &#8220;block&#8221; keyword is actually introduced, and the syntax &#8220;sensor &#8216;NS785&#8217;&#8221; creates a non-block sensor, for example a toggle switch.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Block Position&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &#8220;position&#8221; property is for display only. It would be an &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;estimation&lt;/span&gt;&lt;span&gt;&amp;nbsp;of the position of the train in the block, if known.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;NaN is used when the block is not occupied &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;or&lt;/span&gt;&lt;span&gt;&amp;nbsp;the position is not known. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;0..1 maps to the start-end of the block, with 0.5 being the middle. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;For each block I define a default &#8220;forward&#8221; direction -- in this layout, our default running direction is clockwise, and this is how the &#8220;forward&#8221; DCC direction is defined in the script.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;0 is defined as the location where a train would &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;enter&lt;/span&gt;&lt;span&gt;&amp;nbsp;the block in forward direction, and 1 is defined as the location where a train would enter the block in reverse direction. 0..1 corresponds to the start-end comparatively to the forward direction.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The default location, when unknown for an occupied block, is in the middle at 0.5.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The location is reported as NaN for a non-occupied block.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;For example in a shuttle run, the position would first change from 0&#8230;0.5&#8230;1 when the train first goes up on a block, and then it would change from 1 &#8230; 0.5 &#8230; 0 when the train comes back.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;d also define an &#8220;occupancy controller&#8221; whose purpose is to govern these.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2019-05-12T00:00:18-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Includes, Routes, and Profiles -- Revisited</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2019-04-14_conductor_2_includes_routes__b779f39a.html"/>
<id>https://www.alfray.com/trains/blog/train/2019-04-14_conductor_2_includes_routes__b779f39a.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Routes, Profiles, or even the latter idea of Includes for &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;are all vaguely unsatisfactory.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Includes are just a hack in the current v1 script language which do not really solve anything.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The core issue is modularization of the script.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One concept I explored earlier in the 2018-12-08 post and that I still want are routes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A route is a sequence of blocks and a reservation principle. They have different modes, e.g. global interlocking vs ABS window interlocking. I think this concept is good and should be kept as-is. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One difference with the original idea: in the earlier idea, routes worked with profiles. A profile is a train engine number + a number of parameters, and a route is an unconfigured program, which variables are provided by the profile. The idea was to reuse the same route programming with different trains/engines by simply swapping the profile affected to the route.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Although that&#8217;s nice in theory, I don&#8217;t see this applying properly to the automation at Randall. Not a single time was I able to update the automation by simply changing an engine number and not changing anything. Eventually I&#8217;d hoped to get there, but this hasn&#8217;t happened yet. A potential example is the main UP automation. We have 2 exact same engines so ideally we could swap them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Another part of the idea was to expose only profiles (and not routes) to the UI on the tablet and give operators the ability to trivially change trains in the automation. Unfortunately I don&#8217;t have any such staff -- current staff would not have the proficiency to either be trusted to set up the train correctly or change the tablet settings or both.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I think there is some value to the profile idea but it may be more of a generic value, and should not be mandatory. Thus the proposition is to put aside the profile idea for now. It can always be re-introduced later if needed as an orthogonal feature. Note that such profiles can be simulated by having a function create duplicates of the same route for different engine numbers.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So now in the case of Randall, that gives me 3 routes: One Branchline (BL), and two Mainline (Passenger + Freight). The latter needs to alternate.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So now, let&#8217;s go back to includes. The idea behind includes is to modularize the ANTLR script. For example, right now when I want to change the branchline, I duplicate the whole script including the mainline, and get a new copy of everything. If I want to revert back to a previous branchline, I need to carefully diff two versions of the script to keep the last version of the mainline yet use the older version of the branchline. The current way works nicely as long as I only modify forward. Includes would make that easier by being able to swap e.g. bl-01 instead of bl-02 into a common &#8220;master&#8221; script. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On top of that, includes can be used to solve the &#8220;profile&#8221; idea on the mainline by e.g. being able to include freight-02 instead of freight-01 and not touch the passenger parts. Careful consideration is needed as these would be straight macro-level includes so order and global definitions matter.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The idea of having profiles in a DSL does not preclude the need for includes. The same kind of logistical issue arises: how do I want the end script to look like? As a monolithic block with all the &#8220;profiles / routes&#8221; options, or as a set of multi-file definitions? Right now the monolithic script does not offer any alternative per route. The goal would be to have at least one backup engine defined in the script and exchange them regularly. So that means having 6 profiles/routes definitions in the script. It may get large and tedious.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That being said, I&#8217;m deciding to ignore the issue upfront. If I want to add support for includes, I&#8217;m sure I can add it later. And maybe there&#8217;s a different solution for example using an import / module mechanism.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The other part of the include / route / profile setup was to have selection made on the tablet by &#8220;regular&#8221; layout operators. Right now I&#8217;m postponing this idea as it does not seem realistic. I simply have no operators with enough proficiency to be trusted to both setup the trains &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;and&lt;/span&gt;&lt;span&gt;&amp;nbsp;set up the tablet. I have some who &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;claim&lt;/span&gt;&lt;span&gt;&amp;nbsp;to have that proficiency yet have regularly demonstrated they clearly lack it -- for example how hard is it to remember to put 2 trains back on the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;proper&lt;/span&gt;&lt;span&gt;&amp;nbsp;track, and identify when the automation does not start because they didn&#8217;t put the right train on the right track. More than once. So no, not happening for now.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That means I&#8217;m going to:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Ignore includes for now.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Ignore profiles for now.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;I will however define and implement routes as they are useful.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2019-04-14T00:00:04-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Evaluating Languages</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2019-03-08_conductor_2_evaluating_languages.html"/>
<id>https://www.alfray.com/trains/blog/train/2019-03-08_conductor_2_evaluating_languages.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 1&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;uses a custom language implemented using ANTLR 4. The goal for &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is to reuse an existing scripting engine. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Continuing with this, recently I started looking more closely at Lua to see if it could be a potential configuration language.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Python&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Or Jython to be exact, which is already available in JMRI.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Definitely a choice, but could lead to some fairly verbose declarations due to the lack of closures and such.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Lua&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Luaj with JVM or Android support &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/luaj/luaj&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/luaj/luaj&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Class binding via &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/luaj/luaj#luajava&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/luaj/luaj#luajava&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Simple language, clear semantic, very &#8220;traditional&#8221;, no magic, lotta parentheses.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Actually has closures.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#8658; Not better than Python for that task.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Kotlin&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The original choice I had in mind.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Do not like the hype around the language (no, it does not magically make apps better or faster).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Not a big fan of some of the weird syntax choices.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Requires DSL classes to be implemented in Kotlin.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Groovy&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Current choice.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Not fundamentally different from the syntax available by Kotlin.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Does not require DSL classes to be implemented in Groovy. Can use POJO.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Easy to understand, got quick satisfying results with minimal effort.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Certain limitations due to the &#8220;a b c d &#8658; a(b).c(d)&#8221; fixed parsing.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Local variables (explicitly defined by a &#8220;var&#8221;) are not exported.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Some IDE support with IJ (didn&#8217;t seem to understand custom classes though).&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So the goal is so far to &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;try&lt;/span&gt;&lt;span&gt;&amp;nbsp;with Groovy. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Step 1 is to write a mock Groovy file that would map the current automation, and &#8220;add&#8221; something that is not possible in the current flow.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The part that must be validated is how to deal with closures/lambdas for actions.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2019-03-08T00:00:51-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Routes &amp; Profiles</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2019-01-26_conductor_2_routes_profiles.html"/>
<id>https://www.alfray.com/trains/blog/train/2019-01-26_conductor_2_routes_profiles.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I have been thinking about my definitions of routes &amp;amp; profiles for &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and I am not convinced they will be useful as such for Randall.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I am interested in two kind of routes: &lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#8220;Linear simple&#8221; routes: typical circuit loop with ABS-type block guards. There are mostly linear and simple means they don&#8217;t have complex rules. There still could be customizations: different speeds for different blocks, specific customizations such as grade crossing horns, etc. Some of these may depend on an engine number (especially sound F functions).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#8220;Dedicated Shuttle&#8221; routes: this is mostly what we have at Randall right now where routes are a mix of generic block mapping conditions and carefully dedicated to specific engines.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The problem lies in the Randall configuration, which is actually the first priority. The hope was to create &#8220;generic&#8221; routes with customizations applied only in the train profile. The hope is to be able to introduce enough variables to make a route configurable. The problem I see is that it would be hard to update a route and make sure all new conditions are mapped to previous train profiles. Which means in practice re-using train profiles will require a fairly substantial amount of work. I&#8217;d also expect a fair number of exceptions to be made in the route-dedicated programming based on the train number.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s an idea: routes define expected variables and profiles define these variables. These variables can also be lambda functions. Basically have a &#8220;profile.data&#8221; map of key/values. The route should define all the expected key names. When a profile is associated with the route, we can double check that all the keys are defined by the profile and have a value of the expected type.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;vertical-align:baseline&quot;&gt;PA = route {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;vertical-align:baseline&quot;&gt;&amp;nbsp; Vars = [ &#8220;station_speed:I&#8221;, &#8220;grade_crossing-horn:F&#8221;, &#8220;rtac_name:S&#8221; &#8230; ]&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;vertical-align:baseline&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;vertical-align:baseline&quot;&gt;Amtrak506 = profile {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;vertical-align:baseline&quot;&gt;&amp;nbsp; DccAddress = 506,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;vertical-align:baseline&quot;&gt;&amp;nbsp; Vars = {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &#8220;Station_speed&#8221;: 12,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &#8220;grade_crossing_horn&#8221;: { throttle -&amp;gt; throttle.F9() },&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &#8220;rtac_name&#8221;: &#8220;AMTRAK&#8221;,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;vertical-align:baseline&quot;&gt;&amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;vertical-align:baseline&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;vertical-align:baseline&quot;&gt;PA.profile = Amtrak506&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Something like that. The &#8220;vars&#8221; string can incorporate the type using a simple colon-letter syntax with 3 simple data types: int/long, string, function. The whole &#8220;profile&#8221; block can be treated as a map itself but then we lose some of the advantages of groovy type verification.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2019-01-26T00:00:59-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Mini Wifi Camera and Train Layout Usage</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2019-01-20_mini_wifi_camera_and_train_l_10c40469.html"/>
<id>https://www.alfray.com/trains/blog/train/2019-01-20_mini_wifi_camera_and_train_l_10c40469.html</id>
<category term="video" label="Video"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;m continuing my exploration of what we can do using these cheap small mini cameras when it comes to train layouts, and today&#8217;s subject is this &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2RWZ7uZ&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;mini pinhole wifi camera&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. How well does it work and what can we use it for?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:361.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_82c9d69d241f297a735dd755c50ec791138cdcfddea08e97e3e7eb5a7e95f5bci.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;Mini pinhole camera compared to an HO-sized gondola&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First of all, let&#8217;s describe the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;generic&lt;/span&gt;&lt;span&gt;&amp;nbsp;type of cameras we are talking about as there are a few variations available:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The camera itself is of a pinhole type, mounted on a ribbon connector, typically 3 inches long or so.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The body with the electronics comes either in a box (as shown above) or in a heat-shrink tube-wrap.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;These have wifi and a separate good-sized antenna.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;These typically come with a battery, most of the time external, or sometimes combined with the electronics.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If you search on Amazon, eBay, or AliExpress, a good search term is &#8220;mini pinhole wifi camera DIY&#8221; or similar. Be ready for some typical sleazy copy-paste marketing tactics and keyword bait titles. The imagery associated with them is of the most boring clich&#233; type, and since all these vendors just copy-paste the same marketing material and specs, one has to look behind that to discern the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;actual&lt;/span&gt;&lt;span&gt;&amp;nbsp;specifications.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What are they good for, at least on the paper, allegedly?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For that we need goals to compare to. The usages I have in mind are:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Creating a custom HO-sized camera car with a wifi live view.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Monitoring hidden staging yards or hidden tracks.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2018-10-01_cameras_opencv_and_occupancy_d4e79a5c.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Virtual block occupancy&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;using vision-based computer control (see &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2018-10-01_cameras_opencv_and_occupancy_d4e79a5c.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;previous post here&lt;/a&gt;&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I looked at several of these and noticed a pattern:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A lot of these are based on &#8220;off-the-shelf&#8220; chipsets typically used also in car dash-cams. A lot of that stuff is 5-yr old or more.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It&#8217;s really hard to get the exact chipset spec in the vendor listings, so one needs to carefully read along the lines.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The specs are wildly &#8220;inflated&#8221; in the vendor listings.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Most come with a battery that is mostly pointless for the usage I have in mind.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;ll base my explanations on this model I got off Amazon &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2RWZ7uZ&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/2RWZ7uZ&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;because that&#8217;s what I got, and you can extrapolate to other models. First let&#8217;s look what&#8217;s inside the box:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-left:auto;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;vertical-align:middle;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:161.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:396.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_ea03d78da9affdaac4693f60e72efd87e7b553e7bc53cf5dfa37371883d3ceb7i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;vertical-align:middle;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:166.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:396.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_edddab07aff9e50f687a5d4a99ddb06025eb6123708055ff7e83413b3cafe1ebi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:368.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_e427fc557b8d45aa1db0ff4674b568028e064958c6519291b30de557ffd982bfi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Under the hood, we have:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;IP Camera SoC (Hi 3518). The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://cdn.hackaday.io/files/19356828127104/Hi3518%20DataSheet.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Hi 3518 SoC&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;can handle 720p @ 30 Hz and their SDK uses Linux 3.0.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;802.11 b/g/n single chip (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.datasheetcafe.com/mt7601u-datasheet-wifi-single-chip-mediatek/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;MediaTek MT7601UN&lt;/a&gt;&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;64Mbit SPI Serial Flash memory (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.winbond.com/resource-files/w25q64fw_revd_032513.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Winbond 25Q64&lt;/a&gt;&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Power goes through a 4.1V voltage regulator (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.alldatasheet.com/view.jsp?Searchword=XC6103D441MR&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;2KAX&lt;/a&gt;&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The internal battery connection is labeled as +5V.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The battery provided is a 3000 mAh, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2T3pf4U&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;similar in size to this one&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;font-weight:700;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;Mode of Operation&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is an area where I was pleasantly surprised: the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2RWZ7uZ&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/2RWZ7uZ&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is actually an IP Camera.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The default mode of operation is for it to create an ad-hoc wifi network. The documentation points to the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.g_zhang.HDMiniCam&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;HDMiniCam&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;android app for Android (there&#8217;s a similar app for iPhones and I did not try it). Usage in this mode is fairly straightforward:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Turn on the camera. It takes about 55 seconds to boot &amp;amp; be available.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Select the custom wifi network created by the camera on the Android phone.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Android tip: A few seconds later Android will notify this wifi access point does not have internet access. Click on the &#8220;stay connected&#8221; checkbox, otherwise Android will try to switch wifi networks.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The Android app should be able to connect to the camera, configure settings, and go in live view mode.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the ad-hoc mode, the camera is creating the wifi network. I&#8217;ve had good connection success for at least 4-5 meters (~16 feet) in straight line of sight, and connection became spotty after that.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So far, that limits usage to the cell phone app, which is not what I&#8217;m looking for.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;But here&#8217;s the nice thing: in the settings, have the camera connect to your own 2.4 GHz wifi network (it does not support 5 GHz networks).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Once the camera is connected to an existing wifi network, it works as a regular IP camera. The actual IP can be found using the app settings or the usual methods (check your wifi router, nmap the network, etc.) Once the IP address is known, it&#8217;s possible to use the camera using a web browser or even using VLC according to the brochure. More on this below.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The camera also supports P2P through typical external servers. That feature can be disabled in the IP cam settings, which I highly recommend one to do right away.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note that all of this is clearly indicated in the small brochure that comes with it, if you know how to read it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;font-weight:700;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;Battery &amp;amp; Power&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The model I got came with a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2T3pf4U&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;fairly good-sized 3000 mAh battery&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, which is unfortunately quite unusable for any need I have and represents a good portion of the overall cost.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When using it as an HO-sized camera car, the battery provided is too big; however it would be trivial to swap it for a smaller sized model that fits on a HO-sized car. The case also accepts a mini USB connector to charge the camera. My goal is to get power off the rails, and feed it to a bridge rectifier / 5V voltage regulator and then be able to power the camera from the rail power. Instead of a battery, it would be better to use a large capacitor to maintain current.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When using it as a yard monitor or for block occupancy, I want the camera to actually turn on with the layout and shut off at the same time. So that&#8217;s fine -- just don&#8217;t use the battery, but unfortunately I haven&#8217;t found a single model sold without one, and it&#8217;s a significant part of the price. That said this particular camera works for that purpose as there&#8217;s a &#8220;fixed&#8221; on/off sliding button. When the power button is set to on, the camera just turns on when it gets power; it takes about 53 seconds to boot after what it starts transmitting (or the jpeg can be pulled off, as explained below). So it&#8217;s suitable for this purpose. (Other cameras such as the SQ08 / SQ11 / SQ12 / SQ13 / SQ23 series have a push-button to turn them on and another push-button to start recording, and these are not suitable for an always-on power mode).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;font-weight:700;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;Video Access &amp;amp; Quality&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Sadly that&#8217;s where these cameras are all disappointing. Remember how the SQ11 is sold as a &#8220;1080p camera (720p optional)&#8221; (sic) when it&#8217;s actually a 720p only camera that can do upscaling to 1080p (with noticeable artifacts to boot)? Well here we have the same thing.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here the main chipset, the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://cdn.hackaday.io/files/19356828127104/Hi3518%20DataSheet.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Hi 3518 SoC&lt;/a&gt;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&amp;nbsp;can handle 720p @ 30 Hz. There&#8217;s no mention of 1080p support for that chipset that I know of. For a chipset from 2013, that&#8217;s not surprising.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Indoors image quality rated a &#8220;passable&#8221; in my book, fairly unsaturated, lacking any crispness, and all the colors seemed rather bland. That said, for an around-the-layout live view, or to monitor a yard, it should be good enough. You won&#8217;t be reading any engine or car numbers for sure, but you&#8217;d have enough to know where things are.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One thing to remember is that this camera does not have IR LEDs, and a quick test shows that the actual camera module probably has an IR filter lens as trying to IR-flood the scene did not result in anything useful. When it&#8217;s dark, this will record merely pitch black, nothing more, and trying my best to overcompensate the contrast/gamma/luminance after the fact resulted in absolutely nothing useful.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When using the camera in IP cam mode using a web browser, the only resolution available is 1280x720.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When using the android app, there are 4 resolutions available: 240p, 480p, 720p, and 1080p. The 2 first ones show some impressive clear lack of detail. Things become clearer at 720p and 1080p and honestly the only difference I could see between them is an &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;extremely&lt;/span&gt;&lt;span&gt;&amp;nbsp;appalling low bitrate in the former case, and a somewhat less drastic bitrate in the better case but still quite obviously low. My guess is what changes is more the bitrate, and even the &#8220;best&#8221; choice is way below my expectations. Maybe that&#8217;s why the camera worked well at 5-6 meters away in ad-hoc mode&#8230; It&#8217;s the usual wireless conundrum: distance, speed, or bandwidth -- choose two.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;font-weight:700;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;IP Cam &amp;amp; Direct Web Access&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Once the camera is connected to a wifi network, it is accessible via a web browser, giving access to a fairly typical IP cam web UI on the typical http port 80.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The web UI has a few modes: browse plugin, activex, iphone specific, regular MJPEG or regular jpeg pulling.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &#8220;non-ie&#8221; web mode uses mjpeg and a classic asp+js to show the usual ip cam UI with PTZ controls and such. One need to remember a lot of functions are not available here (no PTZ, no IR) even though they are visible in the generic IP cam web page. This mode allows one to get into the camera settings using a typical ip cam config page. From there, all the settings can be configured (network, dhcp or fixed, wifi, user/password, p2p enabled, etc).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &#8220;android mobile phone&#8221; web mode is a direct jpeg pull using the snapshot CGI URL and a simple JS to pull that jpeg every second. Brutal, simple, and works nicely.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The URLs available are:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;http://ip/media/?action=snapshot -- Grab a 1280x720 JPEG, for example using wget, curl, etc.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;http://ip/video/livesp.asp&lt;/span&gt;&lt;span&gt;&amp;nbsp;-- The stream may be an MJPEG stream but it didn&#8217;t look like the multipart I was expecting (x-mixed-replace). I didn&#8217;t spend too much time decoding it.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;http://ip/setting.asp&lt;/span&gt;&lt;span&gt;&amp;nbsp;-- The web UI for settings.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;P2P can be disabled here&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Network &amp;gt; wifi &amp;gt; &#8220;auto reboot camera when wifi disconnected&#8221;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;System &amp;gt; Change Password &amp;gt; can set an admin password, possibly change admin username too.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;http://ip/reboot.asp -- Reboot the camera.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The mode &#8220;Android browser that supports javascript&#8221; produces an asp page that does periodic snapshot refreshes with an index after snapshot, e.g. http://ip/media/?action=snapshot172&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Why do I care? Having direct access means:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The camera view can be used in other apps such as TinyCam or IpCamViewer on Android.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Usage with any NVR such as ZoneMinder or Blue Iris.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A direct view in a web browser via javascript.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Pulling jpeg images directly to process them with OpenCV or &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/layout-wifi&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Translate&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Where&#8217;s VLC? I wasn&#8217;t able to find a way to connect using VLC using the usual culprits (e.g. mjpeg over http) and I did not look further at this part.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Even when looking with Wireshark or reading the javascript of the web UI, I also wasn&#8217;t able to find anything that would look like an h264 stream endpoint (the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://cdn.hackaday.io/files/19356828127104/Hi3518%20DataSheet.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Hi 3518 SoC&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;has an h264 encoder so I was hoping I could get such a stream). That said I wonder if the Android app isn&#8217;t actually using that; I didn&#8217;t bother looking that way too much, it&#8217;s an option to explore.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;font-weight:700;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;Example of usage as a Live View Camera Car&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is one of my objectives, and this camera could very well work for that.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On the hardware side, my &#8220;proof of concept&#8221; looks something like this:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:233.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_694110bdbe8bedb73cd9fc52da4c28f62bafff120a0f577955e610fb6b55b9c2i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;The mini cam in an HO-size gondola&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I did a quick test using a gondola car, although a boxcar may work better to hold &amp;amp; hide the electronics. Having the camera on a flexible ribbon connector provides a lot more flexibility in mounting locations. The body for the electronics fits very well in there, as well as the antenna. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The only thing that did not fit was the provided battery, but another one could be substituted if desired.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However my design target is to not use a battery but instead use a large capacitor and get power directly from the track with a diode bridge and a voltage regulator.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The camera would be configured to use an existing wifi network instead of the ad-hoc mode (which I&#8217;d expect to consume more power), allowing for a better range on a large layout. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On the software / receiver side, the goal is to have a monitor or a display for the public or layout operators. Any small linux computer would work: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2CBoCs8&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Raspberry Pi 3&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2Cx7dku&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;BeagleBone&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, or even simply an &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://amzn.to/2DnbaYe&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Intel Compute Stick&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;like &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2018-01-21_turnouts_touch_panel_for_jmri_at_cmrs.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;I have used earlier&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. These devices boot Linux and it is fairly trivial to make them autostart into Chromium in Kiosk mode (i.e. full screen) with a bit of javascript to pull the JPEG stream from the camera and display it. The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://amzn.to/2DnbaYe&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Intel Compute Stick&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;with its integrated wifi, convenient boxed format, and already configured Linux distro was by far the easiest to use out of the box (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2018-01-21_turnouts_touch_panel_for_jmri_at_cmrs.html#h.vyqld4w7clca&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;example of chromium kiosk mode here&lt;/a&gt;&lt;/span&gt;&lt;span&gt;). If the sound of Linux makes you run away and evokes complexity to you, there&#8217;s a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2sExqJq&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Windows 10 version of the same Intel Compute Stick&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, more expensive and with better specs just to be able to boot Windows and allow your visitors to see at which frequency mandatory Windows updates are required, a problem that does not even exist on the Linux side.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;font-weight:700;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;Form Factor and Other Usages &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Compared to other types of cameras I&#8217;ve played with, I end up liking the &#8220;pinhole ribbon&#8221; style. In this case we have a fairly small camera module (about a quarter inch in size) and about 3-4 inches of ribbon. I realized this would be very convenient to be able to put cameras on the layout as part of the scenery. For example place the camera in a building, and then place the electronics body under the layout, getting power from any nearby power bus.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In a place like the Randall layout, a few of these could be mounted at different places such the top of the mountain or the places far from the visitors, providing them better views. Then a computer with a display, as previously mentioned, could just display the various cameras either in sequence or when motion is detected.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That said, even for that usage I would still want a slightly better video quality and a bit more saturation and better colors.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;font-weight:700;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;Conclusion&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;All-in-all, that&#8217;s a fairly capable camera if one can accept a 720p image of passable quality at best. This is not suitable to make high quality 4K or even 1080p videos on youtube, but it&#8217;s definitely good enough for the other kind of usages I have in mind:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Monitor remote yard / hidden staging (just be wary that these have poor low-light performance, but that can be easily fixed by adding a LED strip in the staging area to be monitored).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Build a camera car for live view (just would like a slightly better video quality).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Provide visitors views of the layout (also would like a slightly better video quality).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The downside is that, as with many other similar products, the title claimed are just complete marketing BS. &#8220;1080p&#8221; or &#8220;night vision&#8221; in the title are just pure keyword stuffing as these products have no merit in those areas (note that a few of these have a camera module with 2 or 4 small IR LEDs, in which case it may work, I haven&#8217;t tried any).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;And to finish, I&#8217;d like to mention again how inaccurate titles are a real problem with these. There&#8217;s another model of similar-looking pinhole wifi camera circulating on eBay or AliExpress that has the battery integrated with the electronics in a heat-shrink package; although generally listed as a 1080p in the title, the specs have the fantastic claim of being a &#8220;Video Resolution Ratio: 640x480 VGA, Network Transmission Resolution Ratio: 320x240 QVGA, Video Frame Rate: 10fps&#8221;. This kind of discrepancy should be enough to keep one away for that product. If there are specs, read them! And if they seem inaccurate, they likely are.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2019-01-20T00:00:56-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Route / Events Programming</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2018-12-14_conductor_2_route_events_programming.html"/>
<id>https://www.alfray.com/trains/blog/train/2018-12-14_conductor_2_route_events_programming.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Just to keep some perspective, here is how the current &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 1&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;script is architectured:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There are 3 routes, 2 for passenger and 1 for branchline, with the passenger ones alternating.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Where appropriate, the routes define variables for speed &amp;amp; timers upfront so that they can be adjusted for new engines / train configuration.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;They lack profiles but these are essentially an extension of the current setup.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Within each route are &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;sequences&lt;/span&gt;&lt;span&gt;. Since the script is a parallel execution script, the sequences are implemented using state keeping, but that&#8217;s mostly what the states are for.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;That&#8217;s actually a bit of an issue as it makes the states hard to figure and keep track of, creating some unforeseen complications sometimes.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There are events not associated with any route.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Main example is the Sonora switch in non-automated mode.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A lesser example is the RTAC display especially for stopped/error modes.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Having changed the trains for automation recently, I can see where the system works and where it breaks:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Mostly I changed the passenger trains just by adjusting the speeds.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;I did alter 1 or 2 timers, for example the Freight&#8217;s run time before stopping at the mid station.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It broke when I tried to use an MTH engine as its functions usage is vastly different.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Same goes for the Rapido which has more fancy functions. In that case changing the engine in a route would require customizing the script for different functions.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Function differentiation could be done in the script by having, for example, an integer variable for a grade crossing sound for example and then making sure the command that triggers that can use that variable. An invalid value such as -1 could be used to disable the command.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Another suggestion is to allow a route script to be exactly that, a condition sequence of tests/actions. So for example we could write &#8220;if address = 1234 then { on (condition) &#8594; (events) }&#8221;. &amp;nbsp;This is important -- it means the route events closure is executed at each iteration, whereas right now it would be executed once during startup to define all the events with delayed condition closures. There&#8217;s some benefit in doing that as it would allow the events closure to be fully scripted with large if-block conditionals, loops, etc. Switching on states could actually using a switch/case instruction with an enum.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We still need to address having events not associated with a route. It&#8217;s possible to make a default &#8220;no-automated-route-active&#8221; route, but that seems a bit clumsy. Unless I just call it &#8220;default&#8221; and it&#8217;s not too bad. Rather than see these as synthetic routes, we could see them as special triggers: startup {}, loop {}, shutdown {}. The startup would happen once before any route is executed. The loop would run at the end of each iteration after the routes, and the shutdown would happen after the last route executes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One part to elaborate is the sequencing with a route and the sequence management in a route.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The goal is to do reservation and as indicated above for the sake of granularity we could do either sub-routes or automatic freeing. In the case of ABS on a continuous loop, we can do &#8220;on the fly&#8221; reservation using &amp;nbsp;an N+2 window. For our use case it makes sense to start with 3 modes: global reservation, global reservation with automatic freeing, ABS window reservation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Implementation wise that means we&#8217;ll have different reservation strategies and plug the proper engine based on the route&#8217;s definition, with a sensible default (simplest case).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If we exclude the harder case of sub-routes, it makes sense to define the route as an &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;ordered&lt;/span&gt;&lt;span&gt;&amp;nbsp;set of blocks.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Originally I wanted to add turnouts in the routes. However given the way the layout is wired at Randall, turnouts are always part of a specific block. They do not have a sensor of their own, and never have their own block. One reason to add them is so that they can be locked by a route reservation. This is good if we describe the rails as a graph structure, as the turnouts are naturally the nodes linking the paths, and it could allow automatic re-routing. However here we&#8217;re not going to do that. Consequently listing turnouts provide no benefit in terms of reservation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We can however add the turnouts if we also add normal/reverse direction. The info is not just the turnout but its desired state. That would allow the script to automatically set them for the required route, and when would depend on the route strategy, e.g. an ABS window strategy could just align them 2 blocks ahead and keep them reserved for 2 extra blocks past the train.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the simplest case the automation should look like:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An ordered list of blocks and turnouts (with their thrown state).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A default speed for the blocks, plus per-block speed override.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A startup sequence, using timers and/or blocks.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;An end-route stop sequence, equally using timers and/or blocks.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;En-route pauses (e.g. for shuttle pause).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Special events (horn, etc.) based on timers and/or blocks.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;If we are using automated reservation, we may want to customize the start/pause of the train. Ideally it should just be whatever the DCC momentum does.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are two ways to organize the route&#8217;s sequence:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Define an array of blocks / turnouts.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Separately define events which, like in Conductor v1, have conditions on the block occupancy and engine directions.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;Or:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Define an array of blocks.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;For each block, add an events closure.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Keep track of the position of the train in the block sequence (aka &#8220;the current block) and only execute events for that block.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;Or:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;All both styles. Each block can have its events closure, and there&#8217;s a &#8220;generic&#8221; events closure that can get executed at each iteration (similar to the &#8220;default&#8221; closure indicated above).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In summary we have script structure that looks like this:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Startup {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; On (condition) then { actions }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; On (condition) then { actions }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Route 1 {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; Mode ABS # or Global-Lock&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; Blocks [&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; B311 eval {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; On (condition) then { actions }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; },&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; T311 Normal,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; B321 eval {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; After 5.seconds then { horn grade-crossing }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; },&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; T330 Reverse,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; B330 speed(cross-over),&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; B340,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; B350 virtual,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; B360,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; B370 eval {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; On (condition) then { actions }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; },&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; B360,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; B350 virtual,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; B340,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; B330 eval { &#8230; } speed(cross-over),&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; T330 Reverse,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; B321 eval { &#8230; },&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; T311 Normal,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; B311 eval { &#8230; },&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; ]&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; Eval {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; if () { }; switch(state) { case &#8230; }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; On (condition) then { actions }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Loop {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; On (condition) then { actions }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Shutdown {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; On (condition) then { actions }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The syntax doesn&#8217;t quite work with groovy so it will need some work.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The eval blocks probably need a specific syntax to create timers &#8220;on the fly&#8221; -- this could be implemented by having the current block being tracked with the time spent in the block.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This shows a potential example of &#8220;virtual&#8221; blocks. These would be declared as such to know they are not associated with any sensor. In this case the idea is that going up, B340 is activated. When the block is seen going off, the train is assumed to be in B350 so it is &#8220;virtually occupied&#8221;. Once B360 is activated, the virtual block is turned off and it is not an error. There are few issues with this as there is no guarantee that it is the expected train that shows up in B360. The other issue is how to handle flaky sensors, of which B340 is a good example.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Next we need to detail how error conditions are handled, for example when a block suddenly turns occupied and is not predicted to be the next one. Are we stopping everything, are there cases where we need to be lenient, etc.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2018-12-14T00:00:00-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">SQ23 Mini Camera for Cab Rides</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2018-12-09_sq23_mini_camera_for_cab_rides.html"/>
<id>https://www.alfray.com/trains/blog/train/2018-12-09_sq23_mini_camera_for_cab_rides.html</id>
<category term="video" label="Video"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;After trying the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2018-12-01_sq12_mini_camera_for_cab_rides.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SQ12 camera&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, I moved on to its newer sibling, the SQ23. The goal is to use it to record cab rides. As this one has wifi, a secondary goal is to see if it&#8217;s suitable as a &#8220;live camera&#8221; e.g. to broadcast a ride view to a screen.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/wCTSys5mNQc&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span&gt;Cab ride filmed using SQ23 Camera&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2Uu6qJh&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SQ23 Camera I got from Amazon&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(can be found cheaper elsewhere, e.g. on Aliexpress), compared to my &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2rGJM2x&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Mobius Action Cam&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2018-12-01_sq12_mini_camera_for_cab_rides.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SQ12 camera&lt;/a&gt;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:380.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_8899434cced82cd32778e1688e371a8b125cdf0b91656e303aaa212d5b12ea5ei.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;From left to right: SQ12, SQ23, Mobius compared to an HO-size engine + gondola&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:250.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_4e2766cb9d46e23bab539b5c57c051169a2cd84c383b6906f31508df1eb463eei.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;From left to right: SQ12, SQ23, Mobius, top view.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Although the SQ23 is larger, at 30x28 mm it still fits neatly inside the HO-size gondola and fits within the HO gauge clearance (although you may want to double check the height if using the &#8220;old era&#8221; &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.nmra.org/sites/default/files/standards/sandrp/pdf/s-7_2012.02.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NRMA gauge&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;for tunnels):&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:385.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_8113d5669382afdbca00fc43a5d828d1fd9e2549fdcc5eb2fbdd0d4d71ed1e1bi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;m going to do my review in reverse by starting with what was terrible, and then what worked well.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;The negative points&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Similar to the SQ12, &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;this is not a 30 fps camera&lt;/span&gt;&lt;span&gt;, it&#8217;s a 25 fps with a 2:3 pulldown!&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Similar to the SQ12, &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;this is not a 1080p camera&lt;/span&gt;&lt;span&gt;. It&#8217;s yet another 720p upscaled to 1080p.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The image is fairly soft and lacking sharpness. Either the lens isn&#8217;t great, or it is not in focus, and there&#8217;s no way to adjust it. In other words &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;the video quality is terrible&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Extremely poor automatic exposition &amp;amp; white balance handling from the camera. The video is mostly neutral most of the time and will wildly shift to over saturated under some type of lighting. There&#8217;s unfortunately no control over this.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;White balance was often off, with a clear green tint under fluorescent lighting and an extremely pronounced yellow tint under LED lighting, then it would suddenly fix itself to something neutral. Filming the same scene twice would not given consistent white-balance results. This is a headache from a video editing perspective.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The video shows extreme &#8220;beat effect&#8221;, as typically seen with 60 Hz &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Fluorescent_lamp#Flicker_problems&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;light flickering&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;not matching the recording frame rate of 25 Hz&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;When initiating a video recording via wifi (see below), there&#8217;s a &#8220;beat effect&#8221; on the recording sound too.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Disclaimer&lt;/span&gt;&lt;span&gt;: To be clear, there are some good video clips made with SQ23 cameras out there. These work great for outdoor scenes (e.g. drones) or for any lighting that is not susceptible to the 25/60 Hz mismatch -- e.g. anything in Europe/Asia at 50 Hz, or anything recorded using non-fluorescent non-LED lighting. I am naturally biased here in that I am focusing on the specific needs I have, and I am not trying to make a super generic-for-all review.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;ve added a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://youtu.be/wCTSys5mNQc&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;cab ride video of the layout&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;at the beginning of the article. It shows the fairly wild and inconsistent white-balance issue, and the flickering (and that&#8217;s &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;after&lt;/span&gt;&lt;span&gt;&amp;nbsp;improving it somewhat in post-editing)&lt;/span&gt;&lt;span&gt;. One issue I found is that although the camera did the layout tour twice, it did not get the lighting the same way every time. This makes it harder to mix &amp;amp; match video clips in edit/post and is fairly obvious in the video.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One positive aspect of the camera is its small size. As shown in the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://youtu.be/wCTSys5mNQc&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;cab ride video&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, I found it quite convenient to place it track side and get a variety of more creative point of views. The small 1-inch size allows for easy placement next to an HO track, at about &#8220;human eye&#8221; track level which is often not possible with larger cameras or cell phones. The fact I can preview the shot before recording using wifi (see below) really helps in setting up the view angle.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s move on with the review.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Models SQ12 vs SQ13 vs SQ23&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are various &#8220;SQ&#8221; cameras and the model names can be somewhat confusing.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There&#8217;s an SQ13 model out there that does not seem to differ from the SQ23. As far as I can tell from specs online, the SQ13 and the SQ23 seem to be the same camera. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The SQ12 is a different camera, with no wifi. You can view my &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2018-12-01_sq12_mini_camera_for_cab_rides.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;review of the SQ12 here&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Let&#8217;s compare these models based on s&lt;/span&gt;&lt;span&gt;pecs &lt;/span&gt;&lt;span&gt;(all allegedly, from marketing brochures &amp;amp; forums):&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Common: CMOS sensor, max 32 GB sdcard.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Mobius: 2013, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dashcamtalk.com/cams/mobius/Novatek%20NT96650.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Novatek NT96650&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;processor, Aptina AR0330 CMOS sensor, 520 mAh battery (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dashcamtalk.com/mobius/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;more details&lt;/a&gt;&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;RunCam 2: 2015, 850 mAh battery.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;SQ12: 2017, GeneralPlus 1248, 200 mAh battery.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;SQ13: 2018, GeneralPlus GPCV4247, 300 mAh LiPo.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Thanks to spam comments on my &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://youtu.be/u6hXgQvZ8LI&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;youtube video&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(seriously, if you&#8217;re going to leave twice the same exact comment from different profiles, don&#8217;t be surprised to be flagged as spam!), I got at least the indirect answer to &#8220;SQ13 vs SQ23&#8221;, and namely the answer is there isn&#8217;t. Both spam comments linked to this &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://org-info.mobi/manual/sq23.html%EF%BB%BF&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;online &#8220;user&#8221; manual&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which clearly indicates the difference is just in accessories, not in the camera itself.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Specs for the SQ23&lt;/span&gt;&lt;span&gt;&amp;nbsp;generated files in &#8220;1080p&#8221; (but really 720p upscaled):&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Input #0, avi, from &apos;MOVI0025.avi&apos;:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; Metadata:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; ISRC &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: Generplus&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; artist &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: Generplus&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; copyright &amp;nbsp; &amp;nbsp; &amp;nbsp; : Generplus&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; date &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: 2010-06-29&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; Duration: 00:10:00.07, start: 0.000000, bitrate: 24533 kb/s&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; Stream #0:0: Video: mjpeg (MJPG / 0x47504A4D), yuvj420p(pc, bt470bg/unknown/unknown), 1920x1080, 24343 kb/s, 30 fps, 30 tbr, 30 tbn, 30 tbc&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; Stream #0:1: Audio: pcm_s16le ([1][0][0][0] / 0x0001), 32000 Hz, 1 channels, s16, 512 kb/s&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Wifi Usage&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Despite the size similarity, this camera and its sibling the SQ13 differ from the previous models in that it has wifi. This is something I desire, not necessarily for streaming, but for ease of setting up. My goal with cab rides videos is to enable wifi while I set up the camera on the train or scenery to adjust the view, then I can turn wifi off and record without wifi during the cab ride to save on battery.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That goal is easily accomplished with this specific camera. When wifi mode is enabled, the wifi generates a local wifi network, which has a password by default. The documentation even encourages users to change it first hand, which is a nice touch. There&#8217;s a QR code in the skinny documentation that leads to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.libo.GPCamDemoa&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;an Android app&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, with terrible reviews. Sure it&#8217;s not the greatest app ever, but once one understands how to use it, it&#8217;s quite usable. Many of the negative reviews complain that some parts of the app are poorly translated and there are still Chinese strings on screen -- OMG, can you believe it, the whole world doesn&#8217;t speak solely English! That didn&#8217;t bother me as it always showed up in parts of the app that were logical and easy to understand due to other iconography.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Since the wifi process was similar to the RunCam2, I had no problem understanding what to do, but I can see how others might struggle with it as it can be a tad subtle; let me explain its usage:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Turn the SQ23 camera on by pressing the power button 3 seconds. Red led turns on.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Turn the wifi mode on by pressing the M button 3 seconds. Green led turns on.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Wait a few seconds and connect the phone to the &#8220;SQ13_something&#8221; wifi network that appears (yes I totally see the irony in the model number). Note that range should probably be in the 2-6 feet to work.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The first time, wait for Android to realize this network has no internet access. Android will pop up a notification asking whether to stay connected &#8594; check the remember box and say yes at this point, otherwise Android will automatically disconnect from the network, making the whole process a big pain.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Once the phone is connected to the camera&#8217;s wifi, the green led blinks. The app will not work if the green led is steady. Pay attention to that, as it did trip me a few times.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.libo.GPCamDemoa&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Install and launch the app&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, or if already launched, click the big &#8220;play&#8221; text. App tries to connect. Sometimes this takes a few tries but overall it was fairly reliable when I tried.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;At that point you can use the settings button in the app, e.g. to turn the timestamp off.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Once the connection is established, the app screen changes to a page that has the video in the middle and 2 rows of &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;similar&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;vertical icons: the left ones are to record on the phone, and the right ones are the record on the camera sdcard. There&#8217;s an icon to take a picture, one to record a video, and a media manager access to see recorded files (play, download).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;So yeah that&#8217;s a lot of steps, and it&#8217;s easy to get confused, or miss one, or get them wrong the first time. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Anecdote&lt;/span&gt;&lt;span&gt;: The Android app&#8217;s name is &#8220;Sports DV&#8221; and the internal package name is &#8220;com.libo.GPCamDemoa&#8221;. GP here obviously stands for General Plus, which makes the GPCV4247 chipset. &#8220;Cam Demo A&#8221; is kind of cute in the package name. Cute as in &#8220;not very profesional&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&#8217;s a screenshot of the app once connected, same engine as seen in the pictures above:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:334.02px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:592.90px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_479a28fa26edb7de37b2dff8a57bf35216e55f0ec958ea36e5561288eeb0f999i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Obvious issues here&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Pronounced yellow tint under my 3000K LED lighting (which nowhere looks like that in real life, as can be seen with the pictures above of the same engine &amp;amp; location, taken with the cell phone). This is a typical issue due to white-balance being confused by LED lighting.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Lack of clarity, camera was about 4 inch away from the engine. This should have been crystal clear.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Barrel distortion to be expected from the wide angle.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The white-balance issue as well as the barrel distortion can be fixed in a video editing software.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What you do not see is the &#8220;beat&#8221; effect even on the LED lighting. This is however visible in the first few seconds of the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://youtu.be/wCTSys5mNQc&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;youtube clip above&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Sound Volume&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When recording sound, the volume is consistently 6~9 dB below was I got from the SQ12 -- I actually had to tone down the SQ12 volume by 6 dB when editing the cab ride video. That wasn&#8217;t much a problem here and the level was acceptable. The video posted above has the volume level unchanged.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Sound Issue when Recording from the App&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The right middle button on the app initiates a recording to the sdcard. One would think it would give the same results as when recording on the camera without using wifi. However that&#8217;s not the case. Although the video is of the same quality, the audio is different and contains a pronounced &#8220;flutter / beat effect&#8221;. Here is a video sample with the raw sound &amp;amp; video as recorded:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/L3TT8EE3XF0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So far I&#8217;ve established that the camera can be used for cab rides, with the caveat that the beat effect on the video and the sound and an overall vastly unimpressive video quality make it basically unusable for that purpose.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Live View&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Is it a good camera to provide an onboard live view on the layout? Well &#8220;somewhat&#8230; maybe&#8230; not really&#8221;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Using the wifi mode quickly drains the battery, more than just straight recording. A quick estimate is that we&#8217;d be lucky to get half an hour out of it and I think I&#8217;m being extremely generous here. Probably a lot less actually.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Since the device is the one generating the wifi hotspot, the range becomes an issue very quickly. &amp;nbsp;A quick test worked fine with a 3-4 yard range in direct line of sight, with some noticeably choppiness in the video stream when I was getting farther. However since all the tunnels on this layout are wire mesh, I don&#8217;t think it will work very well for a full layout tour due to the combination of distance and obstacles to the signal.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The battery aspect could be solved with e.g. extra batteries and maybe trying to recharge them from the track&#8217;s power supply. The signal obstacle is not really easy to solve though (it would be better if the camera could connect to an existing wifi network with potentially repeaters).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Conclusion&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;All in all it&#8217;s not a bad little camera. It can easily be found for ~$20, which is quite a lot less than a Mobius or RunCam 2 (around $70-90). However on this camera, the video recorded was really not suitable for recording cab rides and is a step down. All these cameras struggle with the kind of uneven lighting used on this layout yet this one managed to fare even worse and it&#8217;s a far cry from their advertised specs in e.g. outdoor environments. And as usual I don&#8217;t quite understand why vendors feel they need to plain lie on the specs. Why even pretend a camera is 1080p/30fps when it really is 720p/25fps? IMHO it fully hurts their credibility. Please be honest.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Like the RunCam 2, it&#8217;s a bit of a death by thousand cuts -- every feature is nice yet every feature also has just enough of an issue to ruin it. It can be used to record cab rides, but not good ones. It can record from the phone app, but that gives bad sound. It can be used to do live view, but not very long or with lots of drop outs. It can do 1080p, but it&#8217;s fake and it lacks sharpness. Most if not all of these issues can be fixed after the fact in post video editing, but at that point it&#8217;s worth considering whether it&#8217;s economical to do that. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2018-12-09T00:00:00-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Route Sequences</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2018-12-08_conductor_2_route_sequences.html"/>
<id>https://www.alfray.com/trains/blog/train/2018-12-08_conductor_2_route_sequences.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Above I mentioned the key features for &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;would be profiles, configuration language, and routes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I should elaborate a bit on this, especially the routes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First the profiles: A profile is simply a DCC address number and a map of variables values. Routes will define variables for, e.g., timers and speeds. The profile will fill in these values to adjust them to a specific train.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Profiles should be dedicated to a specific route. For example: PA route, with 2 profiles (freight, amtrak, UP, etc.) There should probably be some kind of sanity check to ensure that a route with no profile cannot be started, and also that all the variables have a value.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To get started, profiles will be assigned via the script (&#8220;PA.profile = Amtrak506&#8221;). Later I&#8217;d like this to be on the tablet so that they can be changed, with the latest value persisted on disk.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now let&#8217;s look at routes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A route is a sequence of blocks and turnouts used by a specific engine/train, with events defined on how to move the train from one place to another.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are 3 goals for routes:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Provide a way to do interlocking (globally or locally).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Define the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;sequence&lt;/span&gt;&lt;span&gt;&amp;nbsp;of movements required by the train.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Provide sanity checks on the train&#8217;s whereabouts.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s look at these individually.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Interlocking can be either global or local. A global interlock would validate that only one active route can use a given block / turnout at all times. A good example is the current passenger alternance animation: either the full Amtrak runs or the freight runs (on a limited portion of the same route). In the new system these would be defined as 2 separate routes, unaware of each other. One route could not be started if the other one is active as it would use at least one of the same blocks or turnouts.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Global interlocking is in a way a reservation mode. The whole set of blocks / turnouts are reserved for a particular route and cannot be changed by any other route.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The reservation is dynamic; it starts when the route becomes active, and ends when the route is no longer active. It&#8217;s important for the route events to determine when the route stops being active (e.g. when the train returned at the station and is known to be there). This way in case of error (e.g. derailment), the route stays active, and prevents further reservation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Local interlocking would be a &#8220;smarter&#8221; way to do interlocking with a finer granularity. This is the simple ABS scheme used by railroads: check 2 blocks ahead in the desired sequence direction, and only advance into the next block if it is guaranteed to be free. There are some limitations:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;In our case, we would need to enforce 2 free blocks ahead. Since typically we detect only a train engine, we do not know if the rest of the train overlaps the next or previous block; for automation purposes we can safely assume each train fits on a block.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The scheme does not work in a &#8220;dual shuttle&#8221; configuration, as is the case with the current Amtrak vs Freight automations, as it can create deadlocks if 2 trains are moving towards each other. They would typically stop 2 block away from each other, locked in their opposite direction and unable to resolve the deadlock. It&#8217;s possible to identify this and solve it but it&#8217;s extra finicky work which is a tad overkill here. &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;The ABS kind of interlock works well for trains running in a loop in the same direction. It means a faster train can follow a slower train and stop automatically when needed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This kind of interlock works well when 2 routes need to cross through the same interchange block or turnout as this is a shared resource that is simply reserved by the first route to acquire the resource.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Global interlocking can be somewhat too overwhelming, reserving too many blocks in advance. There are 2 ways to work around this:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;By using some kind of window, e.g. lock 2-3 resources around the current train position. That can result in the kind of contention explained in a dual shuttle setup.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;By reserving all resources ahead of the train and progressively freeing resources &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;behind&lt;/span&gt;&lt;span&gt;&amp;nbsp;the train if they are not used again in the route sequence.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;By defining reservation sub-sequences (in essence &#8220;sub-routes&#8221; within the route).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The last one would work well in the Amtrak case:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Global reservation would lock all from B503b-B503a and B321 up to B370.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;2 sub-routes could be defined with T330 as the junction: B503b-B321 and B330-B370.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;In that example, a free running train would be allocated a route of B320-B370, overlapping the second sub-route of the Amtrak, whereas the Freight would be allocated a route of B311-B321, overlapping the first sub-route.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Freeing global interlocked resources automatically behind a train would also work. In this case the Amtrak route would be defined as B503b-B321 | B330-B370 | B370-B330 | B321-B503b. Note that this is an ordered sequence, no longer just a set. When the train is going up, we can detect that it is going to use the same blocks again so they cannot be freed. When the train is going down, we can detect that the blocks are not used again and can be freed on the fly. This would allow a secondary train with a B320-B370 reservation to go through as soon as B330 + 1 block is freed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the case of sub-routes or automatic freeing, it&#8217;s important to realize we still want that extra one block of padding as we do not really control the location of the end of the train. In this regard, since we have fixed equipment for the automation, we could install wheel resistors. However we have no such requirement for regular non-automated trains.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Next we&#8217;ll discuss how to use a route sequence programmatically, events for it, and such.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2018-12-08T00:00:24-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">SQ12 Mini Camera for Cab Rides</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2018-12-01_sq12_mini_camera_for_cab_rides.html"/>
<id>https://www.alfray.com/trains/blog/train/2018-12-01_sq12_mini_camera_for_cab_rides.html</id>
<category term="video" label="Video"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;ve been doing all my &#8220;cab ride&#8221; recordings using a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2rGJM2x&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Mobius Action Cam&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. A few months ago &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2018-04-21_mobius_action_cam_vs_runcam_2.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;I tried the RunCam 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;for comparison.&lt;br&gt;This time I decided to try one of the SQ &#8220;mini&#8221; cameras series for a change.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/hy_vxTzaG_Y&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span&gt;Cab ride filmed using SQ12 Camera&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I got this &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2DXhyt4&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SQ12 from Amazon&lt;/a&gt;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:183.42px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:480.90px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_4e04c866a0909ddaa5d255038faca083219c6e3ea330dca7480e52b139094c8ai.jpg&quot; style=&quot;height:480.90px;margin-left:0.00px;margin-top:-171.86px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are ton of these on Amazon / eBay / Aliexpress / etc with various brand names and internally they are all the same:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;This is part of a family of cameras, which names are in the form SQ08, SQ11, SQ12, SQ13, SQ23.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;All these models look like a small cube (smaller than 1 inch).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The SQ08 has been around for a while and notably does not have wifi (in the &amp;lt; $20 range).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;SQ11 / SQ12 models can be found on ebay or aliexpress for similar price ranges. SQ13 is a bit more expensive. Typical price range is $20-30 on Amazon and $10-30 on Ali.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Pay close attention to the pictures on the listings. They all have slightly different form factors, and frequently the listing description clearly does not match the camera pictures. Tell tales: SQ08 has a rainbow stripe, SQ11 has an IR LED ring where SQ12 has only 2 LEDs; these three are listed as &#8220;720p and 1080p&#8221; (more on this below). The SQ13 / SQ23 has the 2 buttons offset from each other, a LED ring, and is listed as 1080p + wifi.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First I must admit this is not the review I was expecting. I actually wanted an SQ13, but what I got is clearly an SQ12 -- thus my warning above: don&#8217;t trust the listing&#8217;s title. The difference is simple: the SQ13 records in 1080p and has wifi. The SQ12 records in 720p (and upscales to 1080p) and does not have wifi.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As it is, the SQ12 is somewhat comparable to my Mobius Cam so before returning it I wanted to at least give it a try.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here are the important things I noted:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The most important attribute is that the SQ08, SQ11 and SQ12 cams are not 1080p devices. Their chipset is 720p only. There&#8217;s a button push to upscale that to 1080p on the camera but it&#8217;s really upscaling. So basically forget 1080p was ever written in the description. It&#8217;s not 1080p, it is 720p, period.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The 2 buttons were confusing to use at first . Manual provided is sub-par and almost useless, until I found this &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.cyanscorpion.com/manuals/SQ11-manual.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://www.cyanscorpion.com/manuals/SQ11-manual.pdf&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which was very useful.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;By default shows a timestamp on the video. To remove it, record something on the sd, it creates a text file, edit it and change &#8220;Y&#8221; to &#8220;N&#8221; (content format is &#8220;timestamp [Y/N]&#8221;).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Supposedly can be used as webcam via USB. Did not try.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Very small footprint for sure. Fits easily on an HO car, and maybe even N scale.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Size&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The cube is 15/16 of an inch in width and height, or 24 mm. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The &#8220;depth&#8221; with the lens is 1 inch. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Checking with the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.nmra.org/sites/default/files/standards/sandrp/pdf/s-7_2012.02.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NMRA Gauge standard&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, this fits easily on an HO size car with plenty of room to spare and no risk of collision with scenery.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;It may even work on an N scale layout&lt;/span&gt;&lt;span&gt;&amp;nbsp;(the width clearance is 22 mm for &#8220;old time&#8221; era and 28mm or 36mm for the more modern eras).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Video&lt;/span&gt;&lt;span&gt;&amp;nbsp;as tested:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Was not blurry.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Fairly wide angle.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Objects start to be in focus after 4 inches.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Lots of barrel distortion, but nothing annoying on video (can compensate in LightWorks if needed).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Colors for inside were OK, but not great (unfortunately lighting on layouts is always a challenge, especially seen from the cab ride point of view, ranging from too dark to having the lights shine directly in the camera).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Using the IR mode creates a very visible purple-hue halo on the scenery in front, which is quite distracting and not suitable for video recording.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;What this lacks compared to the Mobius cam&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Lack of 1080p on the SQ12. Just 720p.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Not a real 30 fps stream (see below).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;No wide/narrow Field-of-View control.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Lacks for the Wide Dynamic Range from Mobius.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The onboard LED turns off during recording so can&#8217;t tell if recording or battery died (that little detail is actually priceless for my use case on the Mobius).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The SQ12 uses a custom USB plug, not the typical A micro/mini form factor. Mine came with a cable that can do USB or Composite video.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;What is similar to the Mobius cam&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Output analog Composite video that the USB plug.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Lack of wifi means that setup is an exercise in guessing. Tape it to an HO car and just hope the height/clearance will give something usable on video. Can&#8217;t easily do a little quick test before running.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Specs for the SQ12&lt;/span&gt;&lt;span&gt;&amp;nbsp;generated files in 720p:&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Input #0, avi, from &apos;MOVI0000.avi&apos;:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; Metadata:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; date &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: 2010-06-29&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; Duration: 00:05:00.63, start: 0.000000, bitrate: 18256 kb/s&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; Stream #0:0: Video: mjpeg (MJPG / 0x47504A4D), yuvj420p(pc, bt470bg/unknown/unknown), 1280x720, 17443 kb/s, 30 fps, 30 tbr, 30 tbn, 30 tbc&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; Stream #0:1: Audio: pcm_s16le ([1][0][0][0] / 0x0001), 32000 Hz, 1 channels, s16, 512 kb/s&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Not a true 1080p stream&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;There&#8217;s no point in having the camera upscale to 1080p. If this has to be done, it would be better be done in a video editor with a better interpolation. That feature was surely added as a pure marketing gimmick and implemented by a software engineer who was rolling his eyes the whole time.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Not a true 30 fps stream&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;[Update 2018-12-09] Although the stream is advertised as a 30 fps, playing it frame by frame shows that this is not quite the case. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Since the stream is MJPEG, it&#8217;s fairly easy to see each frame separately. There is a clear pattern of 4 or 5 motion frames followed by one identical frame, e.g. &#8220;4 motion frames, 1 repeat, 5 motion frames, 1 repeat&#8221;, etc. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Doesn&#8217;t this seem familiar? Yes :-) This process is called a &#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Three-two_pull_down#2:3&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;2:3 pulldown&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221; and is used to convert a 24 / 25 fps stream into a 30 fps stream. One can note that China uses the PAL standard with a 50 Hz electrical grid (and thus a native frame rate of 25 fps) vs the US uses the NTSC standard with a 60 Hz electric grid (and thus a native frame rate of 30 fps).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;More Specs&lt;/span&gt;&lt;span&gt;&amp;nbsp;(all allegedly, from marketing brochures &amp;amp; forums):&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Common: CMOS sensor, max 32 GB sdcard.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Mobius: 2013, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dashcamtalk.com/cams/mobius/Novatek%20NT96650.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Novatek NT96650&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;processor, Aptina AR0330 CMOS sensor, 520 mAh battery (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dashcamtalk.com/mobius/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;more details&lt;/a&gt;&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;RunCam 2: 2015, 850 mAh battery.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;SQ12: 2017, GeneralPlus 1248, 200 mAh battery.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;SQ13: 2018, GeneralPlus GPCV4247, 300 mAh LiPo.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Conclusion&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;All in all it&#8217;s not a bad little camera if one can accept the 720p only aspect. Some of these sell for $10-20 range, which is quite a lot less than a Mobius or RunCam 2 (around $70-90). The video recorded is not that different, as all these cameras struggle with the kind of uneven lighting used on layouts.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s extremely light and quite small. If I had to do an N scale cab ride, I&#8217;d totally try this, after verifying clearances around tunnels or canyons.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The next step is to try the SQ13 or directly the SQ23 (which specs seem nearly identical to the SQ13).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2018-12-01T00:00:57-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">CMRS Touch Panels, continued</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2018-10-12_cmrs_touch_panels_continued.html"/>
<id>https://www.alfray.com/trains/blog/train/2018-10-12_cmrs_touch_panels_continued.html</id>
<category term="cmrs" label="CMRS"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is a follow up on that proof-of-concept I made at &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2018-01-21_turnouts_touch_panel_for_jmri_at_cmrs.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;CMRS about touch panels for the mainline&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&apos;d like to elaborate a few points, with some pros and cons, which I had been thinking about when I started the project. Upfront I want to make it clear I am not advocating for one solution or another. I am offering &quot;food for thoughts&quot;, pros and cons, and matters of discussion. Some of the discussion involves industries or city names which are specific to CMRS&#8217; layout. A map of it can be found in the link above.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.6d80l5tz5ji&quot; style=&quot;line-height:1.14;padding-bottom:6pt;padding-top:4pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:16pt&quot;&gt;1. Overall Thought on Project&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First of all, I&apos;m all for that project, first and foremost:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The proposed touch panels would supplement existing control panels and not replace them.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Usage would be voluntary. Members can just keep using the existing switch panels. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It adds to the layout experience, does not replace existing stuff nor changes any behavior in the control of turnouts.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;To extend:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The scope is limited to mainline turnouts.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;As proposed, the goal is to have a quick overview of mainline turnouts. One glance of the panel should be enough to determine if the mainline is clear.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;On top of that, the panel allows for toggling mainline turnouts by touch from a central location. Someone starting at Engine Facility in Oakland could thus realign the whole mainline without having to walk to the other side of Oakland. Typically, what I&apos;ve seen is the cross-over at the end of the Oakland yard left incorrect. Yes in theory everyone would realign mainline switches when they are done but we do not live in that perfect world.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.o69i2z5qwdg4&quot; style=&quot;line-height:1.14;padding-bottom:6pt;padding-top:4pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:16pt&quot;&gt;2. Panels &amp;amp; Location&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;My belief is that this is the most important point that merits discussion. The rest are mere technical details of implementation. So let&apos;s discuss this.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Location height, high or low&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Suggestion is to mount panels on the high part of the fascia (e.g. next to the engine facility panel).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;From an ergonomic perspective, one needs to realize that using a touch panel is harder than using a physical switch panel, especially for users with mobility challenges. The arm&apos;s movement is inherently less precise when lifted; combined with the lack of a surface for resting the hand, it makes touch panels located higher harder to use for extended periods of time. Here we are looking at very short periods of use; however accuracy or lack thereof, should be taken into account.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Locating a panel lower, say at hip level, makes it less tiring to use as the arm doesn&apos;t need to be lifted. However this creates two other problems. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;First, if the panel is placed vertically at hip level, it provides a weird and unnatural angle to view the panel and interact with it. That&apos;s the reason such lower panels are generally tilted, as can be seen on this layout (Sparks, Sacramento are good examples).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Second, if the panel is placed vertical, there is a lot of potential for people brushing against and triggering touches by mistake.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A panel that is not vertical and is tilted takes more real estate.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Because one important goal is for the panel to be informational, placing it higher means easier visibility. A lower panel would be obscured by people standing in front.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However in the proposed location, a lower-placed panel would be in the way of the staging area below, not to mention this area by Oakland Engines Facility can quickly get crowded. Given the pros and cons elaborated above, placing the panel higher on the fascia makes more sense; however we should understand this may limit usability by some members.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Distance to the panels also matters. In the Oakland case, people would be just under that panel so distance is minimal. Surveying other potential parts of the layout would be needed to plan ahead with future potential panels locations upfront, e.g. sacramento, sparks, etc.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Size of Panels&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&apos;ll just point some pros and cons for the benefit of an open discussion:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The panel we tried for the proof-of-concept experiment is a 32-inch panel. &amp;nbsp;That size seems abstract, it needs to be seen on location to be appreciated.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;In my personal belief, I thought it was too large for the desired area. The panels next to it, engine facility and Oakland, are probably in the 20-24 inch size (I did not measure, this is just a visual estimation so I can be fully wrong here). &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Having a larger panel sitting next to a smaller panel cognitively emphases the difference in size. One way to accommodate this is to separate them. For example the proposed Oakland touch panel could be located next to the wall rather than next to the existing switch panels. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;I believe the large 32-inch panel emanated from a desire to have the largest touch area possible (within reason of cost of course). However from an ergonomic point of view, I am not sold on this approach. A smaller panel of appropriate size should not necessarily be less precise due to arm mobility control.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;I&apos;d generally advise against a one-size-fits-all approach. The proposal should encompass and plan ahead for other future locations such as the mainline from Sellby to the helix, and above level. In some places, maybe smaller panels would be more appropriate to not be in the way of the view.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Overall the size of the panel used should depend on the content to be displayed on them, the desired visibility (from where should the panel be seen to estimate turnout alignment) and how much it impacts the view of the layout.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One mistake I made in my proof-of-concept prototype is that I placed all the yards around the mainline, from Oakland to Hercules. In retrospect, that was too much information. The goal was to provide context as for the location being indicated on the panel, but that could be summarized more succinctly, consequently providing a more compact display of the mainline.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It is my unvalidated opinion that a smaller panel such as 20-24 inch would work well in Oakland; for other locations such as Sellby, Sacramento, Sparks, something even smaller in the 10-14 inch range might be just enough.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.jxzaziqbsob&quot; style=&quot;line-height:1.14;padding-bottom:6pt;padding-top:4pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:16pt&quot;&gt;3. Hardware&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For the proof-of-concept experiment, I was provided a touch-panel to work with. I chose an &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3cPP4AL&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Intel Compute Stick&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to control it due to its low cost, ease of usage, and availability. The hardware I used cost $39 and only needs a small USB power supply (provided). Communication is over wifi with the central JMRI computer, thus removing any need for extra wiring except a nearby 120 V socket. This price I just listed does not account for the cost of the touch panel itself.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&apos;d like to point out a few alternatives and cost ranges to get some points of discussion. The approach above was based on having a hardware that is a touch + display panel, with a separate computer (albeit in its minimalist form) controlling the display. The other alternative to that is to use a computer + display that is already integrated as one. Luckily we have a few options here at adequate costs:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;For a screen size of 7 inch or 10 inch, nothing beats a tablet. I favor Android tablets as they are ubiquitous, and always getting cheaper.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Android tablet 7 inch : cost range is around $50 per tablet these days. Amazon had a &quot;fire sale&quot; of their old Fire 7 tablets for $15 a piece last week, but that&apos;s unusual.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Android tablet 10 inch : cost range is more in the $200 for something reasonable.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;For a screen size from 12 to 17 inch, I&apos;d go for a laptop. I&apos;m a big fan of older Lenovo laptops as they are easy to convert to Linux and ubiquitous surplus on ebay. Something like a 2013 model of the Lenovo Yoga S1 typically goes for $200-250 on ebay with a touch screen of 12.5&quot;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;For a screen size above 17 inch, I&apos;d use the current scheme of a separate touch screen with a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;compute stick&lt;/span&gt;&lt;span&gt;&amp;nbsp;to drive it.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Pros/cons arguments:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Tablets and laptops need to be &quot;hardened&quot; in kiosk mode to prevent abuse from members or visitors. Meaning the tablet/laptop would boot, display a web page with the layout map, and the user would not be able to switch away from it... we&apos;re not creating a platform for visitors to play games here.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;A laptop booting linux can be made to be self-re-imaging at boot. A debian distro or similar can be stripped down to its bare minimum so that there&apos;s nothing else to run on the machine except the one app we need. It doesn&apos;t need any software updates.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;I treat these old Lenovo laptops as shells. For example at Randall I have 2 identical Lenovo T410 laptops. When one dies, I&apos;ll simply move the hard drive into the second one and drop it in place of the old one, without having anything to reinstall, thus having a turn-down time of a few minutes at most. Then I can just get a replacement off ebay because these surplus items are so easy to find.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One thing to finish here: the hardware/software used should be chosen with longevity in mind. Hardware is expected to fail sooner and later, and software deprecates. It&apos;s thus essential that part of the planning incorporate future-looking handling of both. E.g. do we have members who can and will know how to handle this when the system fails in 2+ years? Do we give them off-the-shelf replacement they can trivially find with documented procedures to reinstall them, or do they need to wonder in despair in front of an undocumented custom setup? In essence, it&apos;s not a viable solution for the club if only one member possesses the craft to understand and redo that solution.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.8sx49y4fmnaa&quot; style=&quot;line-height:1.14;padding-bottom:6pt;padding-top:4pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:16pt&quot;&gt;4. Turnout Feedback&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now I need to bring this back in because it&apos;s an important aspect of this system. When we did the proof-of-concept, we all understood the implications, so it&apos;s worth pointing them out.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That&apos;s going to be technical. I&apos;ll try my best to simplify or over-simplify it so please bear with me.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What is the problem: &amp;nbsp;Let&apos;s say we have turnout #200 cross-over on the mainline. There&apos;s a button on the Oakland panel to set it to normal or reverse. All these buttons are 3-position switches: push up for one direction, pull down for the other direction, neutral in the middle. This physically moves the turnout by direct wiring to the Wabbit. However the DCC system was never involved here.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On the other side we have the JMRI computer that talks to the DCC system. The DCC bus is connected to that Hare or Wabbit that can control the same turnout. From JMRI (e.g. WiThrottle / Engine Driver app on cell phone), we can throw that turnout. This gives a signal to the DCC command station which sends it to the Wabbit which then throws the turnout. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There is an inconsistency when the push-buttons are not in sync with the DCC system. Here&apos;s a scenario:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Member 1 uses WiThrottle or the Touch Panel to throw turnout 200 in Reverse position. The DCC system and JMRI are involved and they both know that the turnout is in Reverse. The touch screen shows the turnout in reverse and this matches the physical state of the turnout.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Member 2 uses the physical switch panel to throw turnout 200 in Normal position. The DCC system and JMRI are not involved and know nothing about. The touch screen shows the turnout in reverse and this does noy match the physical state of the turnout.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What is needed here is a way to tell the DCC system &quot;hey that button was pushed, and the turnout has changed now&quot;. This is called Turnout Feedback.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are multiple ways to make this happen, and my point is that this is an important part of the proposal that should be discussed from a technical point of view.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let me elaborate on a few technical ways to solve this:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The &quot;obvious&quot; NCE way is to use the Wabbit output pins, and connect them to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933435-Auxilliary-Input-Unit-AIU01-&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE AIU01&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;sensor cards, which are then connected to the NCE cab bus. JMRI needs to be set to configure sensor monitoring for each turnout.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Cost: $50 per &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933435-Auxilliary-Input-Unit-AIU01-&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE AIU01&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;card, which has 14 inputs (thus in theory can monitor 14 turnouts, or 7 if you want precise thrown/closed monitoring).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Hidden cost: a lot of wiring from each Wabbit to the NCE AIU01 + connecting the AIU on the NCE Cab Bus.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Hidden cost: a lot of manual configuration in JMRI to match the AIU sensor bits to the proper turnouts.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Main drawback: Polling time from the NCE AIU on the NCE AIU cab bus is appalling. Feedback will appear within 2-3 seconds. That means there&apos;s a time gap between when a turnout is changed to when it is shown as such on the touch panel.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The Digitrax way is somewhat similar. Since the layout already has a a Digitrax PR3 and an LocoNet, there are similar ways to do that. The Wabbit doc has all the gory details so not going over the details.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Cost is similar to the NCE case since it requires some extra sensor card.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Still needs JMRI configuration to match sensors to each turnout.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Still needs a lot of wiring from each Wabbit to the digitrax sensor card.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The LocoNet bus is way more robust and polling time is &amp;lt; 1 second IIRC. From memory, I haven&apos;t played with that in a while.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;I&#8217;m being told: Use a Digitrax SEC8 and DS64 directly instead of the Wabbit, and this already provides turnout feedback to JMRI via LocoNet.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The &quot;less obvious&quot; way is a roll-your-own Arduino solution, which I gave some thought and experimented it a bit at home:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Use an ESP32 or similar (~$20 or less) that has wifi. Depending on the arduino or ESP we can expect 10-20 digital inputs to monitor. They need to be wired to the Wabbits and can be used to send orders to JMRI. Now the difference here is that they do NOT need to be used as sensors. Using the JMRI JSON API, the ESP32 can be set to simulate throwing the turnout. So for example a user pushes a fascia button, the Wabbit closes the turnout, the arduino detects it and then sends a similar order to JMRI to throw the turnout. JMRI will thus know the state of the turnout. It will then try to relay that to the DCC system which will send the same order back to the Wabbit, thus keeping everything in sync.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Use an Arduino Nano or similar with an RS485 interface ($5 or so). Again we can monitor about 15-19 inputs on this, and we can program it to act as an NCE cab device that would simulate a turnout being thrown. The idea is to close the loop but this time we tell the NCE command station to throw the turnout. It will relay that to the Wabbit and to the JMRI server.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Both solutions above require a lot of wiring from the individual Wabbit back to a central Arduino. Can we dispense with that effort? Well actually yes, we can. We just need to think a bit outside of the box. Well we were doing that but let&apos;s go further. We have a central location for all these switches, the switch panel itself. All the switches control the Wabbit. We don&apos;t need to go from the switches to the wabbit back to a central arduino when we can go directly from the switches directly to the arduino which can then send an order to JMRI which sends orders to the DCC command station and in turn back to the Wabbit. So in essence, rewire the panel to not act on the Wabbit in the first place, and this closes the feedback loop properly. The draw side of this is that it requires JMRI to be functional and set up for the corresponding turnouts, but that&apos;s a basic sine qua non requirement for this whole project anyway.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.qv1uqi7dtzg6&quot; style=&quot;line-height:1.14;padding-bottom:6pt;padding-top:4pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:16pt&quot;&gt;5. Beyond Mainline Turnouts: Block Occupancy&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One thing worth mentioning here is that such a display could also easily integrate block occupancy to indicate where trains are located on the mainline, provided the layout is wired for it. In places where block occupancy sensors will be installed for signaling, that information can be provided on the touch panel as well. The JMRI server will have all the information and the panels could indicate both occupied blocks and signals aspects.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&apos;s my belief that for places where traditional wired current-based block detection is not installed, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2018-10-01_cameras_opencv_and_occupancy_d4e79a5c.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;block occupancy can be detected by other means&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, but this is out of the topic of this discussion so I won&apos;t go into details.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Voila. Just a few quick thoughts on this whole project.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2018-10-12T00:00:04-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Cameras, OpenCV, and occupancy detectors</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2018-10-01_cameras_opencv_and_occupancy_d4e79a5c.html"/>
<id>https://www.alfray.com/trains/blog/train/2018-10-01_cameras_opencv_and_occupancy_d4e79a5c.html</id>
<category term="train" label="Train"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A lot of my interests when it comes to model train layouts are all about automation. Automation can mean to make the trains move automatically but it can also mean to automate signaling -- displaying semaphores and search lights according to traffic on the layout. The common denominator for both is block occupancy detection, namely to know where trains are on the layout.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/ycCJjT7WUgk&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span&gt;An early prototype of camera-based block detection&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The traditional way is to do this electronically. Rails are cut to form blocks, and current sensors are embedded in the track feeders, allowing sensors to detect when track power is being consumed. There are a number of commercial products to do that already -- &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/201254549-BD20-Block-Detector&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;BD20&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933435-Auxilliary-Input-Unit-AIU01-&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;AIU01&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the NCE side, BD4 and BDL169 on the Digitrax side, SRC8 from Team Digital, etc. In O-Scale 3 rails Lionel layouts, they typically use reflective IR sensors mounted on the side of the track to trigger accessories.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;All these require a lot of wiring, including careful track planning. Need to plan where the blocks start and end, have proper track feeders for these blocks, install sensors, wire them to their controllers, report to the main cab bus, etc.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A while ago it occurred to me that all this could be simplified by using cameras to detect the trains:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Either kinect-style that would detect 3d volume changes,&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Or ipcams-style that would look for visual changes.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;ve been dealing with IP security cams for the last decade or so. These cameras are now ubiquitous, cheap, powerful. Many models are wifi enabled, removing the need for wires. And motion-detection software for these cameras is equally ubiquitous. So why not use them?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;My first test was the &#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/layout-wifi&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Translate&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221; project: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/layout-wifi&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/model-railroad/layout-wifi&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now to make it clear, this was not the desired outcome, only a very preliminary experiment. This project was a quick early experiment with some clear constraints: detection was mostly done by locating white stickers on the track. Obviously everyone would comment on how obvious the stickers were, but that&#8217;s because looks were not important in the project. The layout was also fairly unappealing (just a bunch of EZ-Track laying around). A lot of people can&#8217;t see past this surface.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Still that test revealed some interesting facts I had not thought about before:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Because the track, nor the table, were fixed, they could shift slightly enough to perturb the markers locations recorded in the software if one was to bump into it. That was fixed by adding an offset in the configuration file.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Actual detection was done by forcing the cameras in IR &#8220;night&#8221; mode (not all cameras support that). This worked fairly well and helped remove illumination changes. One typical issue with all optical solutions is that they depend on brightness, but this allowed it to work reasonably whether the room was lit by sunlight, artificial light, or even in the dark.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The layout, for as non-realistic as it was, had two important features: a bridge/elevated section and a tunnel. Obviously the camera could not see in the tunnel, however there was enough coverage to use the entrance and exit to form a block. The elevated section did severely limit places where blocks could be detected.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Cameras were merely 640x480. That proved quite enough for the precision needed and arguably made processing faster. No need for high resolution 4k cams here.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Camera placement quickly became something to account for early. Even mounted in the ceiling, the narrow field of vision meant I needed 2 cameras for a small 4x9&#8221; layout. I tried wide-angle cameras and found the barrel distortion to make the edges absolutely unusable.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Camera placement also had limitations with parallel track. For example a train on the first track could obscure enough of the second track given the angle of a specific camera. In one place I fixed by placing the white stickers not on the track but next to it, so that a train would inevitably cover them from a camera point of view.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Human interaction and placement also mattered. For example reaching in to rerail a car could easily trigger a block detection by masking some markers. Camera placement must account for where people stand so that they do not block the view of the layout.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One thing I did in another experimental project later was to place IR leds in the roadbed, mounted vertically (like sensors for railroad crossings). These show up as bright points on the IR cameras, and it&#8217;s clear when they are obscured by a train, yet are invisible to us.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So quite a few interesting learnings here.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Eventually the second part of the project, which I should still get to someday, is to not use any markings on the track. Amusingly at that point, every software engineer I know would throw in &#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://opencv.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;OpenCV&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221; as some kind of battle cry. I mean it&#8217;s &#8220;computer vision&#8221;, right? Enough bragging rights and more hype than one can shake a stick at. Except I think it&#8217;s mostly overkill. What we need here is merely to detect contrast in selected sections on a series of images. That&#8217;s what the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/layout-wifi/blob/main/translate/src/translate/cam_sensor.go#L732&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Go program in Translate&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;does. Arguably that can be using OpenCV instead but yeah, it&#8217;s overkill. I only wish &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/go-opencv/go-opencv&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;OpenCV had Go bindings&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;like &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/bytedeco/javacv&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;JavaCV&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;offers.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The one part where I think OpenCV could shine is in setup &amp;amp; calibration. Ideally I&#8217;d want to give it an image taken by the overhead camera and have it automatically detect the track for the initial setup of the blocks boundaries. Then I&#8217;d expect to have a quick calibration to account for any position shift when turning on the layout, especially in setups such as mine where the camera is fixed to the ceiling and the layout table could shift slightly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Finally I&#8217;d like to share another pure hypothetical case where I think camera detection and OpenCV or similar could shine, and that&#8217;s in equipment inventory. The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://cmrstrainclub.org&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;CMRS club&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;where I belong is looking into RFID such as &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.traintraxx.com/traxx-id/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Traxx&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to identify cars coming in and out of a yard, to help in their operating sessions. This seems to me like a problem that could be solved by computer vision. I&#8217;d envision a system using two HD cameras, placed at the throat entrance and exit of a yard, and with trains at adequate &#8220;realistic&#8221; speeds (a.k.a. &#8220;slow&#8221;), it should be enough to inventory the cars getting in and out of that yard. There&#8217;s enough similarity between cars to build a model to recognize their shape (box car, flat car, gondolas) with a bit of model training, and OpenCV or similar could be used to read the numbers on the cars.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That seems like a problem worth solving.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2018-10-01T00:00:35-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">NCE AIU01 and Motion Sensor</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2018-09-15_nce_aiu01_and_motion_sensor.html"/>
<id>https://www.alfray.com/trains/blog/train/2018-09-15_nce_aiu01_and_motion_sensor.html</id>
<category term="nce" label="NCE"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2018-09-15_nce_aiu-01_and_motion_sensor.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;previously discussed&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, on the Randall layout, visitors press a button to trigger the trains&#8217; automated sequence. Soon enough, we added a sign asking people to be nice with that button. The sign has nothing to do with the actual electronics behind nor the automation, not even the button itself. Both the button and the software are sturdy enough to survive any abuse. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;And abuse there is. The abuse is simply&#8230; social. Kids hammer that button like there&#8217;s no tomorrow. Does it make trains run faster or more frequently? Nope. One would hope it would be a good exercise in parenting in teaching kids to be reasonable and treat common property adequately, but alas, no.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:268.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:396.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_cf00609e36f28098c30476973c54a2ead12ebb31cba31fba653133ede5c35f56i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Eventually Jim and I had enough of it and I decided we could simply use a motion sensor as a trigger instead of a hardware button. Back in March, I built this prototype:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:346.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_d2a92e5754cf0e79a0dbab5fe2fd553291dfe0de65b820434be9f9d64d9513d6i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The original design for the motion sensor was to use an ESP32 with an HC-SR501. The ESP32 would be used to send a sensor activation command to JMRI.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Since I was working on &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;RTAC&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, it occurred to me I could use it to drive a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2018-09-02_digispark_tiny.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Digispark Tiny&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;via a wired USB connection and the same sensor. Then RTAC could just manipulate a Conductor variable directly over the KV server connection. This has the advantage that it removes the requirement for wifi. One less dependency. Or does it?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:303.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:777.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_7bc570920e537667008fb9465ce6de20f7e26f384b7286c4d243fd78ae096bb2i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Well not quite. Instead it creates a dependency on a tablet driving the arduino. Which means if the tablet fails, there is no automation at all since there&#8217;s no motion sensor. That totally contradicts one of my earlier design goals: the tablets are accessories and never mandatory for the automation to operate.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When I implemented the motion sensor polling on RTAC, I decided to not use it to drive the automation right away and instead I&#8217;d monitor it for a while. I added GA analytics so I could track how many times it got activated and for how long. That worked well for a few days then nothing for the next two days. What happened? There are plenty of unknown variables here: the arduino could have failed, or the PIR sensor, or the tablet, or the wifi connection (remote check indicates the tablet doesn&#8217;t show up on the wifi network). That&#8217;s a lot of failure modes for something that is supposedly critical for the automation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Thus I went back to the drawing board, and decided to use the ESP32 as I did in the prototype or some other mechanism. Also in this case, I would not necessarily have to &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;replace&lt;/span&gt;&lt;span&gt;&amp;nbsp;the tablet-driven sensor. I could have multiple sensors and use them all to perform activations. It would give even better coverage and offer redundancy, at the cost of a somewhat more complex implementation. Would it be worth it?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When in doubt, simplify. Remove variables instead of adding them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What is the shortest path / easiest implementation using an ESP32? The original plan was for the ESP32 to monitor the HC-SR501 sensor and then issue an HTTP POST to the JMRI JSON server, to turn on a virtual sensor entry or an existing unused &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933435-Auxilliary-Input-Unit-AIU01-&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE AIU01&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;one.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It then occurred to me I had another option: I already had a microcontroller board always powered which I can poll using the automation control software -- the same &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933435-Auxilliary-Input-Unit-AIU01-&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE AIU01&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;board that used to monitor the activation button.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:256.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_6e6f5bfa9b995210f787faa4802dcc5b99bc50c7c98ec8d4b3ad789d233b6c2bi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Normally the inputs on these NCE AIU boards are supposed to be contacts, whereas here I have an active circuit. When I experimented with the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2016-04-09_use_an_nce_aiu_and_ir_sensors.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE AIU01 and IR sensors&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, I had no problem driving an IR LED from that NCE AIU01 board directly. In a similar fashion, I could drive the HC-SR501 directly from an NCE AIU01:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The AIU01 has a 7805 voltage regulator and I can get 5V by soldering a wire in one of the through-holes on the PCB.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The 3V output of the SR501 can be used to drive the AIU terminal, but not directly.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:322.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:435.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_8e77ef06e36810cdda1e8013e8859ce280f953d627d53c2c4fb93a8032a80237i.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Looking at the HC-SR501 datasheet (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.mpja.com/download/31227sc.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;link via Aliexpress&lt;/a&gt;&lt;/span&gt;&lt;span&gt;):&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The SR501 uses a 7133 voltage regulator. We can feed it with the 5V from the AIU&#8217;s 7805.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The BISS001 drives the OUT pin directly via a 1k&#8486; resistor.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The BISS0001 datasheet (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.ladyada.net/media/sensors/BISS0001.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;link from Ladyada&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) shows an example of driving a relay via an NPN transistor. A single &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/2N2222&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;2N2222A&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, or maybe two of them in a darlington pair (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://electronics.stackexchange.com/a/304119/105814&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;example here&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) should do the trick. Another option is to use a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.vishay.com/docs/84732/6n137.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;6N137&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;single-channel optocoupler (C=Gnd, A=Out of SR501, V&lt;/span&gt;&lt;span style=&quot;vertical-align:sub&quot;&gt;CC&lt;/span&gt;&lt;span&gt;=5V power of AIU/SR501, V&lt;/span&gt;&lt;span style=&quot;vertical-align:sub&quot;&gt;E&lt;/span&gt;&lt;span&gt;=high or NC, V&lt;/span&gt;&lt;span style=&quot;vertical-align:sub&quot;&gt;O&lt;/span&gt;&lt;span&gt;=Invert of A). It would be a very good match with the AIU which has pull-ups on all terminal inputs. I happen to have a bunch of these optocouplers as they are quite convenient to build simple &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.mynabay.com/dcc_monitor/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Arduino DCC monitors&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:372.50px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:620.50px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_4e6ab0793c9f09b5fda5608921dd9f794447dfb61eeac2ce4056d74c9dd90a4di.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In theory, that works since the output Vo of the 6N137 needs to be driven high by a pull-up, which the terminal of the AIU conveniently provides. There needs to be some load, which in my bench test was a 4k&#8486; resistor and a LED.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In practice however that doesn&#8217;t work with the SR501 driving the 6N137 input. The expected min current I&lt;/span&gt;&lt;span style=&quot;vertical-align:sub&quot;&gt;FH&lt;/span&gt;&lt;span&gt;&amp;nbsp;is 5 mA, which on a 3.3V would be 660&#8486;. But the SR501 supposedly already has a 1k&#8486; on the output, and it does measure as such on the sensors I have; we can hardly expect more than 3.3 mA on the output, well below the minimum 5 mA expected by the 6N137. Experimentation quickly confirmed that it did not work.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So back to the 2N2222A design, using the most simple one:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:373.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:621.90px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_cd0c3f4c643974c4cce982053cd34ea484ac20aebc5e3766a62129b9af31135di.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The positive aspect of doing it this way is that it&#8217;s one less arduino to program and maintain. No reliance on wifi either. It relies on the AIU for power and signaling, which is a given in my automation scheme anyway.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In practice, I ended up with this:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:561.13px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_39f17498af718439d9d8fd04d40d952d0203c81ef9a650051b8344f5fc437613d.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I added a 4-position terminal to wire the sensor. From bottom to top: +5V (red), SR501 output (green), ground (black). The 4th terminal position is wired to the sensor output and connects to the base of the NPN transistor. +5V/ground are easily picked up on the through-hole connections just above the condensator next to the 7805.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2018-09-15T00:00:02-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Digispark Tiny</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2018-09-02_digispark_tiny.html"/>
<id>https://www.alfray.com/trains/blog/train/2018-09-02_digispark_tiny.html</id>
<category term="arduino" label="Arduino"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The Digispark Tiny is probably the most basic and compact Arduino-like I&#8217;ve worked with. It&#8217;s about the size of an USB A plug. It is powered by an ATTiny85 and offers 1-5 I/Os depending on usage (typically 2-3).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:191.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:263.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_ce4e0dea3b382e50bfd66e049725b82b6284106c7e80d14948e821c1abe2d075i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;font-size:9pt&quot;&gt;(image source: mister-bidouilles.fr)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Kickstarter Date: 2014.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Example of the Digispark Tiny connected to an USB OTG with a PIR sensor:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:303.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:777.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_7bc570920e537667008fb9465ce6de20f7e26f384b7286c4d243fd78ae096bb2i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The Digispark Tiny is made by &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://digistump.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Digistump&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. That was the first mini Arduino made by this manufacturer and the actual product name is just &#8220;Digispark&#8221;. Since there has been other versions after (Digispark Pro, Digispark Oak), I call the first one &#8220;Digispark Tiny&#8221; to differentiate it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Manufacturer: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://digistump.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Digistump&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Wiki link: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://digistump.com/wiki/digispark&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://digistump.com/wiki/digispark&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I don&#8217;t think it&#8217;s being sold or even manufactured anymore (there are some lingering on eBay or Amazon). It used to cost $10 a piece, which back in 2014 was a good price for this. For half that price Digistump now offers the next version, the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://digistump.com/products/109&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Digispark Pro&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(it&#8217;s really $5 in packs of 10, or $10 for one),&lt;/span&gt;&lt;span&gt;&amp;nbsp;which has more I/Os, and drastically less limitations.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The DigiSpark Tiny (as well as the Pro) are not pure-Arduino compatible. I call them &#8220;Arduiino-like&#8221; instead. Digistump used to provide a custom version of the Arduino IDE with a specific toolchain for the Digispark. These days the regular Arduino IDE can be used and the custom tool chain added to it using the Board Manager. The other specific detail is that the serial port does not work like a regular Arduino serial port.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To use this Arduino, the older Arduino IDE 1.6.5 is needed (not the newer ones); there are instructions on the wiki to setup the AVR Board in the Board Manager: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://digistump.com/wiki/digispark/tutorials/connecting&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://digistump.com/wiki/digispark/tutorials/connecting&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Following are my usage notes, just my shorthand for info gathered from the forums &amp;amp; wiki so always refer to these when not sure about specs.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;DigiSpark Tiny Pin Guide: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://digistump.com/wiki/digispark/tutorials/pinguide&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://digistump.com/wiki/digispark/tutorials/pinguide&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Pins summary:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;P0 = AREF, I2C SDA, DI (or D1?), PWM.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;P1 = D0 , PWM, Led on Rev2.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;P2 = D/A, I2C SCK, ADC1.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;P3 = D/A USB+, ADC3, &amp;nbsp;(1.5 k&#8486; pull up).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;P4 = PWM, D/A, USB-, ADC2.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;P5 = D/A, ADC0 -- says it&apos;s 3V at high instead of 5V, use for non-current application.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;VIN pin takes 7-12V and can output 500ma (but over 100-200ma or over 6V might need some heat sinking).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Notes:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;P0 is safe to use for digital I/O, 5V.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;P1 is connected to the LED.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;P2 is safe to use for digital I/O or Analog input (ADC1), 5V.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;P3 &amp;amp; P4 are used for software USB. Can&#8217;t use them and USB at the same time. They have 3.6 V zener diodes. P3 has a pull up.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;P5 is 3V max with &#8220;limited&#8221; current application.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The really nice thing about the Digispark is that I&#8217;d just plug it in a regular sized USB A connector, and this has a great advantage: I can plug it on any Android device using any USB OTG adapter, and read from it via the USB interface.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Contrary to traditional Arduinos, the Digispark Tiny does not provide a real serial port over USB. USB handling is done in software and basically uses a hack by exchanging characters using USB control messages. There&#8217;s a small C binary provided to read it from the host side, and I have reverse-worked how to use that on Android.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;I wrote a post on the Digistump Forum explaining how to read the USB &#8220;serial port&#8221; from Android: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://digistump.com/board/index.php?topic=1675.0&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://digistump.com/board/index.php?topic=1675.0&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.d0f22oz56b9q&quot; style=&quot;line-height:1.14;padding-bottom:6pt;padding-top:4pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:16pt&quot;&gt;Example 1: Reading a potentiometer&lt;/span&gt;&lt;/h2&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:298.70px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:527.50px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_d02aeb6c98ea1ede2a9a9025e89d8696bfaf012385fa5d22e0c65899981a114cd.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To use with a Tiny: variable resistor is powered between GND and 5V. The analog input P2 is used (aka ADC1). The Arduino API by default samples with a 10-bit value (1024). R2 would be something like 10 k&#8486; (5V / 10 k&#8486; &#8658; 0.5 mA). R1 can be omitted unless you want some kind of offset.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the Arduino sketch, I made a micro serial protocol: Android device sends a &#8220;r&#8221; character to read the value, which comes back as a decimal number. Android device can also send a &#8220;b&#8221; character to make the on-board LED blink. Then an Android AsyncTask runs this in a loop, blinking the LED each time a value is read.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Arduino sketch:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 255, 255);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;#define USB_CFG_DEVICE_NAME &amp;nbsp; &amp;nbsp; &apos;D&apos;,&apos;i&apos;,&apos;g&apos;,&apos;i&apos;,&apos;T&apos;,&apos;h&apos;,&apos;r&apos;,&apos;o&apos;,&apos;t&apos;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;#define USB_CFG_DEVICE_NAME_LEN 9&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;#include &amp;lt;DigiUSB.h&amp;gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;#define LED &amp;nbsp; &amp;nbsp; 1 &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;// on-board led on digital pin 1&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;#define ADC1 &amp;nbsp; &amp;nbsp;1 &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;// ADC channel 1&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;#define ADC1_P2 2 &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;// ADC1 is connected to digital pin 2&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;byte&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;in = &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;value = &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;// ADC value is 10-bits&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;buf[&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;12&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;]; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;// &quot;-2147483648\0&quot; = 12 characters.&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;setup&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;() {&lt;br&gt; &amp;nbsp;DigiUSB.&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;begin&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;();&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;pinMode&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(LED, &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;OUTPUT&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;);&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;pinMode&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(ADC1_P2, &lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;INPUT&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;);&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;blink&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;();&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;digitalWrite&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(LED, &lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;LOW&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;);&lt;br&gt;}&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;blink&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;() {&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;digitalWrite&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(LED, &lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;LOW&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;);&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;delay&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;50&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;/*ms*/&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;);&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;digitalWrite&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(LED, &lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;HIGH&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;);&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;delay&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;200&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;/*ms*/&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;);&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;digitalWrite&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(LED, &lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;LOW&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;);&lt;br&gt;}&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;loop&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;() {&lt;br&gt; &amp;nbsp;DigiUSB.refresh();&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;(DigiUSB.&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;available&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;() &amp;gt; &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;) {&lt;br&gt; &amp;nbsp; &amp;nbsp;in = DigiUSB.&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;read&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;();&lt;br&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;(in == &lt;/span&gt;&lt;span style=&quot;color:rgb(196, 26, 22);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&apos;r&apos;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;) {&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;readAdc&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;();&lt;br&gt; &amp;nbsp; &amp;nbsp;} &lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;(in == &lt;/span&gt;&lt;span style=&quot;color:rgb(196, 26, 22);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&apos;b&apos;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;) {&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;blink&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;();&lt;br&gt; &amp;nbsp; &amp;nbsp;}&lt;br&gt; &amp;nbsp;}&lt;br&gt;}&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;readAdc&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;() {&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;// Read 10-bit ADC value and output to usb&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;// Take average of 4 reads&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;// 10-bits = 1024.&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt; &amp;nbsp;value &amp;nbsp;= &lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;analogRead&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(ADC1);&lt;br&gt; &amp;nbsp;value += &lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;analogRead&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(ADC1);&lt;br&gt; &amp;nbsp;value += &lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;analogRead&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(ADC1);&lt;br&gt; &amp;nbsp;value += &lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;analogRead&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(ADC1);&lt;br&gt; &amp;nbsp;value /= &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;4&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;;&lt;br&gt; &amp;nbsp;buf[&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;5&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;] = &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;;&lt;br&gt; &amp;nbsp;buf[&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;4&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;] = &lt;/span&gt;&lt;span style=&quot;color:rgb(196, 26, 22);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&apos;0&apos;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;+ (value % &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;); &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;// 123x&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt; &amp;nbsp;value /= &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;;&lt;br&gt; &amp;nbsp;buf[&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;] = &lt;/span&gt;&lt;span style=&quot;color:rgb(196, 26, 22);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&apos;0&apos;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;+ (value % &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;); &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;// 12x4&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt; &amp;nbsp;value /= &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;;&lt;br&gt; &amp;nbsp;buf[&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;] = &lt;/span&gt;&lt;span style=&quot;color:rgb(196, 26, 22);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&apos;0&apos;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;+ (value % &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;); &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;// 1x34&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt; &amp;nbsp;value /= &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;;&lt;br&gt; &amp;nbsp;buf[&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;] = &lt;/span&gt;&lt;span style=&quot;color:rgb(196, 26, 22);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&apos;0&apos;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;+ (value % &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;); &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;// x234&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt; &amp;nbsp;value /= &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;;&lt;br&gt; &amp;nbsp;buf[&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;] = &lt;/span&gt;&lt;span style=&quot;color:rgb(196, 26, 22);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&apos;0&apos;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;+ (value % &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;); &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;// x1234 -- should be zero&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt; &amp;nbsp;DigiUSB.&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(buf);&lt;br&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;See &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://digistump.com/board/index.php?topic=1675.0&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://digistump.com/board/index.php?topic=1675.0&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;for an overview of how to use this on the Android side.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.op5cnrsvdhi&quot; style=&quot;line-height:1.14;padding-bottom:6pt;padding-top:4pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:16pt&quot;&gt;Example 2: Reading an HC SR501 PIR Sensor&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;PIR arduino sensors (1 pack of 5 for $10ish): &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2IB9P20&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/2IB9P20&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:396.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:598.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_5dca83a74b5b9a0ae279a840e9b7d57fd85aa92aed07d87d96b7293f0afcd704i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;font-size:9pt&quot;&gt;(image source: the internet)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To use with a Tiny:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;PIR VCC to Tiny 5V&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;PIG OUT to Tiny P0 or P2, mapped as digital input.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;PIR GND to Tiny Gnd&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Arduino sketch:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 255, 255);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;#define USB_CFG_DEVICE_NAME &amp;nbsp; &amp;nbsp; &apos;D&apos;,&apos;i&apos;,&apos;g&apos;,&apos;i&apos;,&apos;S&apos;,&apos;R&apos;,&apos;5&apos;,&apos;0&apos;,&apos;1&apos;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;#define USB_CFG_DEVICE_NAME_LEN 9&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;#include &amp;lt;DigiUSB.h&amp;gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;#define LED &amp;nbsp; &amp;nbsp;1 &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;// on-board led on digital pin 1&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;#define PIR_IN 0 &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;// PIR on P0&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;buf[&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;];&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;setup&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;() {&lt;br&gt; &amp;nbsp;DigiUSB.&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;begin&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;();&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;pinMode&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(LED, &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;OUTPUT&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;);&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;pinMode&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(PIR_IN, &lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;INPUT&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;);&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;blink&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;();&lt;br&gt;}&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;blink&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;() {&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;digitalWrite&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(LED, &lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;LOW&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;);&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;delay&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;50&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;/*ms*/&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;);&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;digitalWrite&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(LED, &lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;HIGH&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;);&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;delay&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;200&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;/*ms*/&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;);&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;digitalWrite&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(LED, &lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;LOW&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;);&lt;br&gt;}&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;loop&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;() {&lt;br&gt; &amp;nbsp;DigiUSB.refresh();&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;(DigiUSB.&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;available&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;() &amp;gt; &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;) {&lt;br&gt; &amp;nbsp; &amp;nbsp;in = DigiUSB.&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;read&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;();&lt;br&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;(in == &lt;/span&gt;&lt;span style=&quot;color:rgb(196, 26, 22);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&apos;r&apos;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;) {&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;readPir();&lt;br&gt; &amp;nbsp; &amp;nbsp;} &lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;(in == &lt;/span&gt;&lt;span style=&quot;color:rgb(196, 26, 22);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&apos;b&apos;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;) {&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;blink&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;();&lt;br&gt; &amp;nbsp; &amp;nbsp;}&lt;br&gt; &amp;nbsp;}&lt;br&gt;}&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;readPir() {&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;pir_on = &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;;&lt;br&gt; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;(&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;millis&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;() &amp;gt; &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;1000&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;60&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;) { &lt;/span&gt;&lt;span style=&quot;color:rgb(0, 106, 0);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;// 1 minute to stabilize HC SR501&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&lt;br&gt; &amp;nbsp; &amp;nbsp;pir_on = &lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;digitalRead&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(PIR_IN) == &lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;HIGH&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;;&lt;br&gt; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;digitalWrite&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(LED, pir_on ? &lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;HIGH&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;: &lt;/span&gt;&lt;span style=&quot;color:rgb(170, 13, 145);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;LOW&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;);&lt;br&gt; &amp;nbsp;}&lt;br&gt; &amp;nbsp;buf[&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;] = pir_on ? &lt;/span&gt;&lt;span style=&quot;color:rgb(196, 26, 22);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&apos;1&apos;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&amp;nbsp;: &lt;/span&gt;&lt;span style=&quot;color:rgb(196, 26, 22);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;&apos;0&apos;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;;&lt;br&gt; &amp;nbsp;buf[&lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;] = &lt;/span&gt;&lt;span style=&quot;color:rgb(28, 0, 207);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;;&lt;br&gt; &amp;nbsp;DigiUSB.&lt;/span&gt;&lt;span style=&quot;color:rgb(92, 38, 153);font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;println&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:10pt&quot;&gt;(buf);&lt;br&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;There&#8217;s a bit of a subtlety here: The SR501 is internally a 3V device so the OUT pin is 3V when on. Since the Digispark is a 5V device, the I/O pins reads a high when the input is 3V. So &#8220;normally&#8221; that works out fine. Unless for example you place a LED on the SR501 output, or anything else that may causes enough voltage drop to not register the high state on the IO pin. A workaround is to measure it in analog with a lower threshold. Here&#8217;s an example doing just that:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/blob/main/arduino/Digi_PIR_HC_SR501/Digi_PIR_HC_SR501.ino&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/model-railroad/conductor/blob/main/arduino/Digi_PIR_HC_SR501/Digi_PIR_HC_SR501.ino&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;~~&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2018-09-02T00:00:21-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 1 and E-Stop</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2018-09-01_conductor_1_and_e-stop.html"/>
<id>https://www.alfray.com/trains/blog/train/2018-09-01_conductor_1_and_e-stop.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Another behavior I &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;need&lt;/span&gt;&lt;span&gt;&amp;nbsp;right now in &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is to have an E-Stop feature when trains get blocked. It&#8217;s the 3rd time a train keeps running for an hour or more and is blocked somewhere. Ideally Conductor 2 would have a model of &#8220;what&#8217;s next&#8221; and error management, but I can&#8217;t wait for that. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What I need is simple: a route starts, and if the train has not reached the destination in say 10 minutes, send a stop to the train. We can do that trivially using a timer, which is canceled (aka &#8220;timer end&#8221;) when the train reaches its destination.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Although not exposed through the script grammar, JmriThrottleAdapter (.py) and IJmriThrottle (.java) do have an eStop() method (the estop is only used when triggering an e-stop via RTAC). Right now just using a repeated stop should be enough.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Script v26 was changed by starting the timer at each state change (up / summit / down) and ending it when reaching the station after stopping the engine. The script has a reset timer when the state changes from idle to station, making sure there are no pending timers from the previous run.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The next step is once we have an &#8220;RTAC-Text&#8221; variable shared with RTAC, we can use that to display a prominent error message on the tablet. Right now we could hack around using the internal &#8220;$estop-state$&#8221; variable shared with RTAC.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&#8658; Better and less hack: added an ESTOP keyword to the grammar, that sets the internal estop-state to active. This allows tablets to show the error condition, and allows operators to reset the system&#8217;s state (unlikely they will know what to do).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2018-09-01T00:00:10-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Meanwhile in Conductor 1&#8230;</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2018-08-27_meanwhile_in_conductor_1_.html"/>
<id>https://www.alfray.com/trains/blog/train/2018-08-27_meanwhile_in_conductor_1_.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is nowhere ready and I need changes now so they go in Conductor 1.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The desired next step is to support the presence-based activation rather than button activation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Although I have plans for a Conductor 2 which would be route-based, at that point this is an orthogonal task and it can be deferred for later.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Profiles is a Conductor 2 feature, and not tied to a presence sensor.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What is the minimum &#8220;clean&#8221; approach needed for the sensor presence?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What is the minimum I need to provide?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Arduino / ESP. I have 2 options:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;ESP32 w/ OLED per original plan.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Display is wasted.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Can be anywhere convenient, as it would use the wifi.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It would send an HTTP GET either to JMRI or to Conductor.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Non-wifi Arduino such as Nano or Digikey. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Connected to the tablet via USB cable.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;RTAC would poll status except when wifi/conductor is down (sleep mode).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;RTAC would send an HTTP GET either to JMRI or to Conductor, or use the KV server.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;RTAC:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;We need a &#8220;next train&#8221; display. In fact it&#8217;s more about automation status.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#8220;Automation Not Working&#8221;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#8220;Automation Idle&#8221; (when no presence)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#8220;Next Train in X minutes&#8220; &lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Suggested implementation is to not have any text hardcoded in RTAC. Instead RTAC would have a tab displaying text and Conductor would send the text. This makes it easier to update.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Default to &#8220;Automation Not Working&#8221; when there is no connection.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Conductor:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Need an automation mode&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Off: when the activation switch is down. It ignores presence.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Idle: activation is on, waiting for presence.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;On: presence is detected, a train started running.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Automation mode toggles between on and idle.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Sensor brings the automation from idle to on. It does nothing if off.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Each time, it resets a timer that would reset it from on to idle. Does nothing if off.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There would be one mode per route.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Script:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Sensor PA-Toggle is the physical switch. Keep as-is.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Enum PA-Mode : Off, Idle, On.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;Enum PA-Motion = Off Idle On&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;Export Int Motion = 0&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;PA-Toggle &amp;amp; PA-Motion == On &amp;amp; PA-State == Station &#8594; Train Starts&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;!PA-Toggle &#8594; PA-Motion = Off&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;PA-Toggle &amp;amp; PA-Motion == On &amp;nbsp; &amp;amp; Sensor-Motion == 0 &#8594; PA-Motion = Idle&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;PA-Toggle &amp;amp; PA-Motion == Idle &amp;amp; Sensor-Motion == 1 &#8594; PA-Motion = On ; PA-PresenceTimer Start&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;PA-Toggle &amp;amp; PA-Motion == On &amp;nbsp; &amp;amp; PA-PresenceTimer &#8594; PA-Motion = Idle&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Where does the Presence var come from in the script? It could be an int-var or a fake JMRI sensor.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Int-var set from the KV server.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Virtual JMRI sensor set via its JSON API.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;How to send text to RTAC?&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;By using an export string var.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;By using some kind of enum?&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Language has no provision to compute a dynamic &#8220;train in X minutes&#8221; string.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Language has no function to set a string as a conditional action.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;Export String rtac-text = &#8220;Automation not Working&#8221;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;PA-Motion == Off &#8594; rtac-text = &#8220;Train Automation Not Working&#8221;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;PA-Motion == Idle &#8594; rtac-text = &#8220;Train Automation Idle&#8221;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;PA-Motion == On &#8594; rtac-text = &#8220;Train is Running&#8221;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;PA-State == Station &#8594; rtac-text = &#8220;Train Stopped.\nNext train starts in {now+10m} minutes&#8221;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One possibility is to let RTAC interpret the string format and replace it with the minute countdown.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There is no need for the script itself to take care of that.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I also think the string should have some basic formatting codes which RTAC can interpret:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;&#8220;\n&#8221; or | for a line break.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;{c:rgb} for a text color. Either RGB or names if they can be resolved.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;{b:rgb} for a background color. E.g. black/red for stopped and white/black for running.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That leaves the issue of stopping automation at 5 PM. There are multiple ways to do that. One would be to hardcode something in Conductor that sets the JMRI sensor to &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;inactive&lt;/span&gt;&lt;span&gt;&amp;nbsp;at the expected time.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Conductor would set &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;ALL&lt;/span&gt;&lt;span&gt;&amp;nbsp;the route toggles to OFF at the given time. There is no need to configure the sensor names, as they are already configured in the routes.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The way JMRI works, it will use the sensor override value till the actual physical toggle is changed. This can be used to our benefit: automation turns off at 5. If operators want it on, they can just flip the toggles off and then back on.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The only thing to be configured is the turn-off time. &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2018-08-27T00:00:21-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">An update for Conductor 2</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2018-08-18_an_update_for_conductor_2.html"/>
<id>https://www.alfray.com/trains/blog/train/2018-08-18_an_update_for_conductor_2.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Several angles of discussion for &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First config file. Drop the ANTLR language. Don&#8217;t do a DSL using Groovy/Kotlin. Instead let&#8217;s keep it simple and use a Jython-based config file (like BUILD files). Sure it won&#8217;t be as eye candy as a gradle-like DSL but it might be easier to create and get started.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Example of &#8220;pythonizing&#8221; the current Conductor 1 script:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;B320 = sensor(&#8220;B320&#8221;, &#8220;NS784&#8221;)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;T320 = turnout(&#8220;T320&#8221;, &#8220;NT320&#8221;)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;PA = route(&#8220;Passenger Automation&#8221;,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;blocks=[B310, T310, T320, B320, T330, B330, B340, B350, B360, T371, B370],&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;speed_vars=[&#8220;mainline&#8221;, &#8220;station&#8221;, &#8220;sonora&#8221;])&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;PA.on(B320, delay=10, events=[PA.throttle.speed(5), PA.throttle.horn()])&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;profile(&#8220;RDC&#8221;, route=PA, speed_vars={ &#8220;mainline&#8221;=20, &#8220;station&#8221;=8 }, &#8230;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is obviously more verbose. There&#8217;s a need to carefully stringify arguments and build lists or dicts where needed. However at that point it&#8217;s just about building an API, and there&#8217;s one benefit in having typed variables (e.g. a sensor var can&#8217;t be used where a turnout is used, etc.)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Using Jython has the &#8220;advantage&#8221; that JMRI already uses Jython so potential re-users should be a tad familiar with it. I would need to be careful since there&#8217;s already a Jython built into JRMI.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Using gradle would of course result in a similar result, but has the obvious cons of providing one extra API to learn.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now independent of the config format, here are the specs I want for Conductor 2:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Drop the idea of having adaptive learning. Look at that later.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Focus on having routes and profiles instead.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Routes were explained before, but let&#8217;s get into them again: a route is a succession of blocks that the train is going to travel. E.g. the passenger shuttle is B311, B321, B330, B340, B350, B360, B370, and back. Now there are a few interesting things here:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Not all blocks have sensors. For example, B350 doesn&#8217;t.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Transition between blocks is not clear cut. Sometimes it looks as only one block is on at a time, sometimes both are seen activated at the same time. It depends. There&#8217;s also the slow sampling speed of the NCE AIU combined with JMRI, including default debounce options.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Some block sensors can be flaky. B320 / B321 is typical. B340 also somewhat.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Turnouts can play games with the BD20 sensors as they might create a connection between 2 blocks.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Routes would define variables: speed variation and timer variables, so that they can be adjusted for the route based on the engine running.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Mandatory features I want to have are safeguards &amp;amp; prediction:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Max time a train should stay on a given block (when moving).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;At the end of the route, automatic reversal for an engine which overshots the block.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Or more ideally, detection on the next block that would force the auto-reversal.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Profiles are the new addition. A profile is a train composed of a DCC address, a name, and variables for a given route. For example 2 trains can run the short-passenger route: the RDC and the doodlebug. These would be 2 profiles, associated with that route, and defining speed and timings for these engines of that route.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This would allow the RTAC tablet to display and let the staff/operator change the profiles for a given route. Such a change could be done only when the route is idle (not used).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A route is either disabled (no profile/train associated with it), or idle (profile associated but train not started), or scheduled/occupied/busy/running (train has started).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When a route is scheduled:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;On the RTAC software, it should not be possible to toggle turnouts for that route. (Right now RTAC doesn&#8217;t do that, but that&#8217;s one change I want to make: there would be a safety check to know if a block next to a turnout is occupied + full lock on an occupied route, with maybe some kind of override.)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It prevents another route using the same blocks/turnouts from starting.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In Conductor 2, route occupation would be all-or-nothing.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Since the goal is to remove the activation buttons at Randall, the next step is to do route scheduling, namely Conductor keeps a list of the start times for the N routes. If there&#8217;s no presence at the layout, these would be delayed. We also want to have (start?) end times for the day but this is independent and would be done by turning off the automation toggle.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2018-08-18T00:00:53-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Signal quality in Advanced Tomato</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2018-05-20_signal_quality_in_advanced_tomato.html"/>
<id>https://www.alfray.com/trains/blog/train/2018-05-20_signal_quality_in_advanced_tomato.html</id>
<category term="misc" label="Misc"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;ll just leave this here for those who use &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://advancedtomato.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Advanced Tomato&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;on their wifi routers: the &#8220;Quality (%)&#8221; column in the Device List is not a percentage at all. It&#8217;s just a delta from the client&#8217;s RSSI to the interface floor noise in dBm.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:201.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_9603f5e398e40c16ca52c16b5559e24b51267f8edf9c3fadb2618a55364cb0cei.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:59.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:438.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_998ccdd05013d209ba7d6cf35c3a3ff8d973ad0d51e0005de8a7d4a52e3484b9i.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;From &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/Jackysi/advancedtomato-gui/blob/RT-N/status-devices.asp&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/Jackysi/advancedtomato-gui/blob/RT-N/status-devices.asp&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, line 248&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:84.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:434.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_ae6f2b18d8cbdd2e764605d4f6c67ea66d06239fea30a07be81cfa866000da0ci.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2018-05-20T00:00:24-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2: Desiderata</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2018-05-10_conductor_2_desiderata.html"/>
<id>https://www.alfray.com/trains/blog/train/2018-05-10_conductor_2_desiderata.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;How would a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;2 differ from the current version?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Requirements&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Simulator.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Validation via tests.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Visual feedback from internal tests, both real and simulated.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;State:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Define JMRI turnouts.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Define JMRI block sensors.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Define map graph.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Define virtual blocks.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Define routes.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A map graph describes how the blocks are connected, and which turnouts influence the graph. Virtual blocks are used when there&apos;s no corresponding sensor. It&apos;s a &#8220;dark&#8221; area where we have no information, except the trains have to logically be there.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Routes are described as going from block A to block B. It should be possible for the software to automatically compute the itinerary based on the map graph. This could be fixed (in the description), dynamic once, or dynamic at each reservation.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Contrary to what is done by JMRI and RocRail, no other information is attached to the blocks or routes, especially speed limitations.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Automation involves a sequence of routes, typically 2 for a back and forth travel, with some extra attributes. For automation, we want fixed routes. Moreover, automated routes need customization for specific engines and direction on a given block, namely speed changes, horn, bell, and lights.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Another approach is to place the engine customization separate from the automation route. One issue is that customization depends on the direction of the engine in the traveled route, e.g. up or down the summit. Due to the nature of the Randall layout, we can instead define a clockwise vs counterclockwise direction for each block and use that for customization.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A few interesting ideas to explore for v2:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Start with the simulator.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Decouple state visualization from the simulator. Output drivers that would be useful are both HTML/SVG (like v1) and a windowed Java (Swing or such).&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;One of the things to simulate and deal with are flaky sensors. That&#8217;s something that v1 doesn&#8217;t deal with neatly, and even JMRI&#8217;s delayed off/on doesn&#8217;t help as much. This can be combined with prediction:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;If the system knows a train takes X seconds to go through a given block, the sensor for that block can be marked as potentially flaky and thus having it flicker can be ignored for the expected travel duration. &lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Flakiness detection could be automated: e.g. a sensor that flips every X &amp;lt; 2 seconds is suspicious.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;We may not want the system to automatically mark sensors as flaky, instead flag them for manual review.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Generally speaking the system as a whole needs an event log with normal / warning / error conditions, time and message.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Explore a Gradle-like configuration DSL instead of ANTLR.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Kotlin is another choice given how much I like Groovy&#8230;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;That implies &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;trying&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;understanding&lt;/span&gt;&lt;span&gt;&amp;nbsp;Kotlin first&#8230;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2018-05-10T00:00:40-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Mobius Action Cam vs Runcam 2</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2018-04-21_mobius_action_cam_vs_runcam_2.html"/>
<id>https://www.alfray.com/trains/blog/train/2018-04-21_mobius_action_cam_vs_runcam_2.html</id>
<category term="video" label="Video"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The latest video I did was an update of the full &#8220;cab ride&#8221; layout tour of the Randall Museum layout. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/R7KrcTpEHlg&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the past I&#8217;ve used the same camera as for all my previous cab rides, a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2rGJM2x&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Mobius Action Cam&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. When I tried to use it after a year of inactivity, I realized the battery is dead and won&#8217;t hold a charge for more than 10 minutes. I can order a new battery, but maybe it was worth looking at what had changed in the domain in between. Let&#8217;s look at the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2IEdMqg&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Runcam 2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:235.35px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:526.90px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_cf140af90756b4e5863e62ecadd9ee71b48d36c3a2b1b4579465b4565981cdf6i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First what I like with the Mobius:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It&#8217;s not a GoPro. I don&#8217;t like the hype around it, their physical size, and their wide view angle which are not appropriate for my use case.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The form factor is excellent for my usage: it&#8217;s low profile, long and flat rather than tall and wide. At exactly 1 inch in width, it means it fits perfectly on an HO-scale flat car and it is still in the HO NMRA gage so it will fit through tunnels without having to worry about it. Can&#8217;t do that with a GoPro.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The dynamic exposure is excellent, way better than I expected. It captures enough light in tunnels to make the video somewhat interesting (in other words: it&#8217;s not pitch black).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There&#8217;s a narrow view mode. I don&#8217;t need a super large angle and I definitely don&#8217;t want too much barrel distortion.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;What I don&#8217;t like:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Hard to get the output of the camera on the spot. There&#8217;s a video-out hack over USB but that&#8217;s analog video. The only way to know if I&#8217;m filming what I want is to stop recording, move the camera, connect it via USB, download the recorded file on a laptop or tablet and look at it. Which makes the whole exercise pointless since I have to touch the camera so it can&#8217;t use that to adjust its position.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Similarly, I can&#8217;t configure the exposition parameters and view the result &#8220;live&#8221;. So I just keep the defaults as they seem sort of appropriate.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The lack of real time view means setting up the camera is a lot of guesswork. I use flat cars to hold it, but I have no idea if the freight car or engine in front is going to be visible, blurry, too high, too low&#8230; It&#8217;s just guesswork.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Similarly, more than once I did a recording on a layout and got confused with the buttons and then turn the recording off at the beginning of a ride and on when I stopped&#8230; oops. Gotta watch that little blinking light like a hawk.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The default recording mode is rather flat (unsaturated), and for my indoor usage rather grainy. I can somewhat compensate for both in post edit, but it&#8217;s nothing like the vibrant colors one gets outside in a sunny/well lit environment.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Cab rides are hard to film. I don&#8217;t like looking at a lot of ceiling lights. So I often trim the 1/3rd top part out of the 1080p video to get a 720p one.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:302.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_eeab7792a930a5af0c88d256ef754d129c3fc4b8deb54cab8d8e1693fabfd6edi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;All in all, the Mobius is fairly good. My only grip is the lack of real time view. There comes the Runcam 2.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It&#8217;s about the same size and form factor.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The Runcam 2 has wifi, yeah!&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It has a narrow view mode where I can reduce the view angle and get less barrel distortion.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Default color seem a tad more saturated than the default Mobius (but then I could adjust that one upfront).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;What I didn&#8217;t like:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The wifi was OKish, not as great as what I was expecting.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Dynamic exposition wasn&#8217;t anything near the Mobius. It was pitch black in tunnels.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;And there&#8217;s the nail in the coffin, see below.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:265.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_d78601b16e51384ce393325e92ad13a1d7bd848f14fd83d54133cc70d7500bc1i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So that wifi. It&#8217;s there. Ok it got the feature, but after a few seconds I was less than excited about it. It&#8217;s just so-so.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Basically I can enable the wifi mode on the Runcam 2 then connect my phone to the specific wifi network it created. It&#8217;s a bit clumsy and the first time it took me a few times to get it right. Once I get used to the frustrating connection experience, it&#8217;s not &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;that&lt;/span&gt;&lt;span&gt;&amp;nbsp;bad. The app UI can be a bit sluggish when connected, and the album navigation was a bit confusing the first time. Again, not great but nothing dramatic. Just have to get used to it, till I forget in 6 months when I pick it up again.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The wifi distance cannot be too large&#8230; anything more than a 2 or 3 meters and the connection drops. The layout at Randall is particularly unfriendly to work with as it uses the 1960&#8217;s idea of using a wire mesh support for scenery. Each trip into a tunnel is like stepping into a poorly designed Faraday cage. The thing does try to reconnect, and sometimes it does succeed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The battery depleted at alarming rate when trying to record and live view at the same time. It literally lasted like 10 minutes. So forget live viewing. Still the wifi is very good to do exactly what I miss on the Mobius: setup the cam, orient it, grab a snapshot, and review it. Once I know the camera is setup as I want it, I can turn wifi off and just let it record the ride.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note that the videos and snapshots viewed in the camera app are very very compressed, so it&#8217;s hard to get fine details out of them. It is however trivial to download them on the phone and view them with the phone&#8217;s media player and zoom in.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now, the ugly. Actually the two ugly bits.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First cab ride recorded me half an hour of this:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:293.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_0caf74e7d9b8ec79ca69adfc34ac0cd0d280bb02ed5bfd2868f6c00b4e8db0b0i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;It&#8217;s&#8230; blurry. Very sharp and in focus right at the nose of the camera and blurry in the distance.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Apparently that&#8217;s a known issue and there are several youtube videos that show how to adjust the focus &#8220;ring&#8221;. Except it&#8217;s not really a ring, it&#8217;s just the typical compact lens with a standard thread, held in place not by a little focus screw but by generous application of glue. There&#8217;s one video out there where the owner tries to turn the lens with tongue-and-groove pliers (argh!) and then resorts to a heating gun to soften the glue&#8230; Not linking to that as it deserves no views whatsoever. However I&#8217;ll just mention the camera is extremely easy to open, and the glue on the lens thread can be carefully and &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;gently&lt;/span&gt;&lt;span&gt;&amp;nbsp;sliced &lt;/span&gt;&lt;span&gt;using a hobby knife at the ring circumference. Doesn&#8217;t even need to be removed. Once that&#8217;s done, it&#8217;s easy to gently turn the lens to adjust its focus and it will still keep in place.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:260.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_50da16822313e81e0dbbbedc1f7fb24a0c3bc3be8c2287832c6f912846c29226i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I made a little rig by printing a template and noting the degrees as I turned the lens:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-left:auto;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;vertical-align:top;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:477.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:396.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_bd593603575f33b4eaa2936dd9fab7eadcadb6d30148172a9a1044ea729df447i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;Runcam 2 Before Adjustment&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;vertical-align:top;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:476.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:396.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_61d70d1bb82034bc99cbe92386ee95424ec60b4217f56d15afd3bf779137c510i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;Runcam 2 After Adjustment&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Re-assembling the camera was as trivial as opening it -- really a nice design in there. And after all that, I was able to do my cab ride with some acceptable results. It was not as sharp as I expected somehow but clearly not the blurry thing I had at first and somewhat on par with the results from the Mobius.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now the second ugly bit is the sound. The recorded sound is really muted. Imagine someone whispering with their mouth covered by a pillow while you wear earplugs and there&#8217;s a jumbo jet taking off from the airport next door. That&#8217;s the kind of muffled recording I got. Reading forums, they apparently had the reverse issue in the previous version -- exaggerated clipping and people suggested hacks placing a resistor in parallel with the mic to soften it. Now it&#8217;s the reverse. The thing is too soft. Way way too soft. I take it people are taking these cams and placing them on RC planes or drones, so there&#8217;s a lot of propeller noise. But in my case I want to record the sound of my DCC engines and all their subtlety. And let&#8217;s be clear, the Mobius does it fine when it doesn&#8217;t exactly have a better mic hardware that I can tell.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:392.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_67f316a2d8ceb0e11e5ec8a6b67bfcf234f1a6a32860ab1ab81978655b21a2fbi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span&gt;Comparing the imported sound levels in &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.lwks.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;LightWorks&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&#8656; Mobius on the left | Runcam 2 on the right &#8658;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Interesting to note that the Runcam 2 exports a stereo sound track&#8230; using a single mic.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the cab ride I did, I kind of salvaged that by increasing the volume by +12 dB and trying to add a filter to remove the overpowering white noise that emerged from that. It&#8217;s really not that great.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;All in all, the Runcam 2 is almost a fantastic little camera, except for the numerous minor flaws and the huge audio issue. It&#8217;s a bit of a &#8220;thousand cuts&#8221; syndrome though...&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2018-04-21T00:00:03-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Turnouts Touch Panel for JMRI at CMRS</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2018-01-21_turnouts_touch_panel_for_jmri_at_cmrs.html"/>
<id>https://www.alfray.com/trains/blog/train/2018-01-21_turnouts_touch_panel_for_jmri_at_cmrs.html</id>
<category term="cmrs" label="CMRS"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Some members at the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.cmrstrainclub.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;CMRS train club&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(the Carquinez Model Railroad Society, in Crockett, CA) desired to have large touch panels that members could use to toggle switches on the mainline. For testing, one of the members procured 32-inch touch panels and I wrote a quick experimental software to display the mainline on it and control turnouts based on touch.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:266.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:738.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_740b70820c3e1c557ea5985e14f116251735697b69f7374cdc7db4c0a17cd3b6i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The touch panels rely on the main &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://jmri.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;JMRI server&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to trigger turnouts on the mainline.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This post documents my first prototype demonstration for this project. This was going to be an iterative process as I expected to incorporate feedback later. What I came up with is fairly easy to reuse for other layouts -- I&#8217;ve implemented something similar at Randall just after, so I&#8217;ll explain how it is implemented in the hope others want to use that or get inspired by it..&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;#h.fwt6w8mbf0nr&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;1- Hardware&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;#h.no22bs3ybbxd&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;2- Architecture&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;#h.ilsxuwd6np58&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;3- The Need for Turnout Feedback&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;#h.hpytgk8a8vf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;4- Setting up JMRI&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;#h.qizug6j7zgz8&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;5- Editing the Map &amp;amp; HTML&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:18pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;#h.7hxz6qkl8ldy&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;The SVG Map&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:18pt&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;#h.bjjb8oefpy61&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;The HTML file&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;#h.vyqld4w7clca&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;6- Configuring Ubuntu on the Intel Compute Stick&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;#h.rin8mm83a8t3&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;7- Alternatives Considered&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;#h.hn8935kg3rno&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;8- Conclusion &amp;amp; Updates&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h1 id=&quot;h.fwt6w8mbf0nr&quot; style=&quot;padding-bottom:6pt;padding-top:20pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:20pt&quot;&gt;1- Hardware&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;&lt;span&gt;Here is the touch panel, sitting on a cart as a crude temporary support. It should be eventually held higher with a strong support on the top frame. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:518.67px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_fab1b2ab367d16c439e6d52e2c7df24a8d1fce0100ca141847a621e04f841e8fi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The screen is actually an ELO ET3243L LCD Touchscreen Monitor. It is very responsive. Output comes as a simple USB HID and thus plugging into any computer will instantly give mouse events. It is used here without any specific drivers.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In this project I only focus on the software part, so this is what I will be describing here.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The computing part is achieved using an &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://amzn.to/2DnbaYe&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Intel Compute Stick (BOXSTCK1A8LFC)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:397.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_1a14edbf26e412da53bfb5d9ed7b28d6f4d3116bf157031b99b940c0e29e5229i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The computer stick connects directly to the HDMI port of the monitor. The black plug at the top is for power and the white plug is the USB from the touch panel. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are different versions of the Intel Compute Stick. The more expensive versions are more powerful and come with Windows preinstalled, which is not needed here. Instead I choose the cheaper version (around $39) which has lower specifications. It runs a stock Ubuntu with 1 GB of RAM and 4 GB of storage. Amusingly out of the box, Ubuntu takes 90% of these 4 GB of storage, leaving not much room, which is not a problem at all in this application. &amp;nbsp;Storage can be expanded using an SD card slot though (also not needed here). However it has integrated WiFi, which we want in our use case.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The computer does one thing here: it&#8217;s just a single Chrome web page on Kiosk mode, and that is absolutely all there is to it.&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;h.no22bs3ybbxd&quot; style=&quot;padding-bottom:6pt;padding-top:20pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:20pt&quot;&gt;2- Architecture&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;&lt;span&gt;If the computer stick just displays a web page, how does this thing actually control any turnouts?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That&#8217;s the beauty of it -- everything is on the JMRI server:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;JMRI has an integrated web server that can serve any page. I just made a specific web page for this display.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The layout map on the touch panel is an SVG file which I created with Inkscape. The file is served by JMRI.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;JMRI has a &#8220;JSON server&#8221; which can be used to query the status of turnouts and receive commands to change them.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;JMRI provides a Javascript extension (&#8220;jquery.jmri.js&#8221;) that a web page can trivially use to query and set the turnouts. It integrates with the JMRI JSON server seamlessly.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;JMRI advertises its server location using ZeroConf, which a custom script on the computer stick reads to figure how to connect to the JMRI web server. This means when the computer stick boots, it automatically finds the JMRI server on the wifi network, and connects to it to retrieve the web page and runs Chrome in Kiosk mode to display it.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:321.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:706.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_75bbe76aaba8552791e34a8ec928e3f32e27d404599dc648bb011f145602f1a6d.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Another nice thing here is that as far as this project is concerned, it does not matter which DCC Command Station is being used, nor which kind of DCC-controlled turnouts are used as long as JMRI can control them. It could be an NCE or Digitrax or even an SPROG or a DCC++ command station for example. Turnouts can be controlled by anything that can read DCC accessory packets on the DCC bus, from &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.ncedcc.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;Switch-8 to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.digitrax.com/products/stationary-decoders/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Digitrax&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;DS64 or &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.dccspecialties.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;DCC Specialties&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8217; Wabbit / Hare. JMRI can also support an heterogeneous mix so it could even be a combination of &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;all&lt;/span&gt;&lt;span&gt;&amp;nbsp;of these and more.&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;h.ilsxuwd6np58&quot; style=&quot;padding-bottom:6pt;padding-top:20pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:20pt&quot;&gt;3- The Need for Turnout Feedback&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;&lt;span&gt;Turnout feedback is recommended here; it&#8217;s optional yet it does impact how this kind of solution is used if not present.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;When a turnout is defined in JMRI, the software has no idea if the physical turnout is closed or thrown so all new turnouts are marked as &#8220;undefined&#8221; in JMRI. When the software actually throws a turnout, it then consequently knows its position.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However if there&#8217;s a physical button controlling the turnout, users can change the turnout and the JMRI server will not know about this -- it will only know the last position that it did control.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For example let&#8217;s say a user aligns turnout 200 to normal using WiThrottle or Engine Driver. This sends a command to JMRI which then knows the turnout is &#8220;closed&#8221; (JMRI&#8217;s terminology for a normal turnout). Then another user uses a fascia button connected to a Wabbit to throw the turnout. JMRI doesn&#8217;t know about that state. The touch panel will show the turnout as normal/closed when it is in fact reverse/thrown -- the display will simply be wrong and misleading!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;JMRI supports reading turnout states from some command stations such as NCE and Digitrax. Even this is not real feedback and only displays the state that the command station knows, typically when users throw a turnout using their cab.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To really have an accurate view of the turnouts states, one needs extra hardware to monitor the position of the turnouts.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There are multiple ways to do that and giving a list of these is out of the scope of this document. A typical and non-exhaustive example is using the extra contacts from a Tortoise or from a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.dccspecialties.com/products/pdf/man-wabbit.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Wabbit&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and feed them to a sensor card such as the Team Digital &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.dccspecialties.com/products/src8_dccspecialties.htm&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SRC8&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, NCE AIU01, Digitrax DS64 or Lenz LR101. The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.dccspecialties.com/products/pdf/man-wabbit.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;DCC Specialities Wabbit&#8217;s documentation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(section D, page 11) has a clear example of how to connect these to get feedback. After that, JMRI can be configured to read the sensors from the Digitrax LocoNet or NCE Cab Bus and update its internal turnout state to match the actual sensors.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Some personal opinions here:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Digitrax products work well but their documentation is annoyingly complex and verbose.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;NCE products are ridiculously easy to use but they have noticeable performance issues. For example, from experience, JMRI reads from NCE AIU01 cards by polling each one by one, at a rate of one per second or less. That results in noticeably sluggish feedback.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Is turnout feedback &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;really&lt;/span&gt;&lt;span&gt;&amp;nbsp;necessary? Personally I think &#8220;really yes&#8221; if you have fascia buttons that control turnouts &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;directly&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &#8220;really no&#8221; if you don&#8217;t have fascia controls.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;I explicitly did not mention custom DIY Arduino-like solutions. I love that kind of stuff. I do it all the time &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;at home&lt;/span&gt;&lt;span&gt;. But if this is on a club layout and not on a personal layout, I stick to commercial offerings. It may be a bit more expensive but that way the day the next superintendent is elected, nobody will be cursing my name for having used some kind of obscure and unmaintainable arduino thing that nobody knows how to use anymore. Remember: when people can&#8217;t figure out what some device does, they generally trash it or bypass it and then add their own solution instead. It&#8217;s easier to reinvent the wheel than to figure how it was made round in the first place.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Turnout feedback means even more wiring on the layout. &amp;nbsp;Using a commercial product like the NCE AIU01 or the Digitrax DS64 means having wires from each turnout DCC decoder to the sensor board, then a bus (NCE cab bus or LocoNet) going to the command station or a PR3. I made a quick prototype of a custom solution based on a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://amzn.to/2Bk4ybg&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ESP32 board using Wifi&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;that I should detail in another post.&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;h.hpytgk8a8vf&quot; style=&quot;padding-bottom:6pt;padding-top:20pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:20pt&quot;&gt;4- Setting up JMRI&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s dig in what needs to be set in JMRI to make this work.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note: I&#8217;m going to do this like a &#8220;tutorial&#8221;. If interested, just follow the steps as-is and try to get it working. Once it works you can think of customizing it, as you&#8217;ll inevitably want to change things like the club name, the map, the turnouts numbers, etc.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For this tutorial, I&#8217;d recommend that a new profile be created in JMRI (you do have backups, right?) in case you want to revert any changes. The map provided below expects NCE turnouts with an &#8220;N&#8221; prefix so that needs to be created first (or edit the files as indicated below).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Both the JSON server and the Web server will be used so they need to be enabled in the JMRI preferences and set to startup automatically:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:245.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:669.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_5fc617810a8829e8e5c191c192f9fe95d4530678f8beedafd2fa530865dd677di.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note that the preference dialog changes slightly based on the version of JMRI yet the concept remains the same: open Edit &amp;gt; Preferences, select the &#8220;Start Up&#8221; panel, then &#8220;Add &amp;gt; Perform Action&#8221; for the &#8220;Start JMRI JSON Server&#8221; and again for &#8220;Start Web Server&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;By default JMRI uses port 12080 for the web server (this is configured in Edit &amp;gt; Preferences &amp;gt; Web Server). If you have no idea what that means, just leave it as-is. Simply remember that number and if you use a different port, you&#8217;ll want to adjust other files later accordingly.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Then hit &#8220;Save&#8221; to save these preferences. JMRI will ask if you want to restart now or later. It&#8217;s just easier to restart right now.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Next you need to copy 3 files into the JMRI web server directory.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Where that folder is located depends on which operating system you use. Typical examples:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Windows 7, 8, 10: C:\Programs Files (x86)\JMRI\web&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Linux: /home/user/JMRI/web&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span&gt;First create a new folder in the &#8220;web&#8221; folder, in my case &#8220;cmrs&#8221;, and copy these 3 files in there:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;JMRI/web/cmrs/&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/cmrs-layout/blob/main/jmri/web/cmrs/index.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;index.html&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;JMRI/web/cmrs/&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/cmrs-layout/blob/main/jmri/web/cmrs/map1.svg&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;map1.svg&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;JMRI/web/cmrs/&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/cmrs-layout/blob/main/jmri/web/cmrs/svg-2.6.3.min.js&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;svg-2.6.3.min.js&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:1.33px solid #000000;display:inline-block;height:136.00px;margin:-0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:297.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_830a6d7728f905b5f9a113a3444a8e5018809c472cc5dbaf70dea104d0844800i.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The files are stored in this Bitbucket git repository: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/cmrs-layout&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/model-railroad/cmrs-layout&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Next we need to create the turnout entries. The map provided above uses numbers from 200 up to 356 so let&#8217;s create them:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Open the Tools &amp;gt; Tables &amp;gt; Turnout dialog&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Select the NCE connection (or whatever else you use), click &#8220;Add&#8221;, enter 200 as the base number, enable the &#8220;sequential range&#8221; and enter 157 as the &#8220;number to add&#8221;. Click OK twice.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Now we have turnouts with a &#8220;JMRI system name&#8221; of NT200 up to NT356. Note that they start in the &#8220;Unknown&#8221; state.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:344.43px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_ef0462e3f29ab339f3a33e1e9de44803485925a7743bd31fb51d841c0a03ac7ed.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Check whether your turnouts are created with feedback enabled or not as it will matter later:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:301.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_f2ed9962cab15a3bee78c5baa43bbfdd53efcddfa83bf8e842b6d8b8ca4710cfd.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The type of feedback available and the default depends on which command station is used in the Edit &amp;gt; Preferences &amp;gt; Connections panel.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;If you are not using the default NCE connection with an &#8220;N&#8221; prefix, you need to edit the &#8220;index.html&#8221; file.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Open the file with a text editor (I recommend &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://notepad-plus-plus.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Notepad++&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;on Windows, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.vim.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;vim&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;on Linux).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Change line 118 that reads: &#8220;&lt;/span&gt;&lt;span style=&quot;background-color:rgb(255, 255, 255);color:rgb(23, 43, 77);font-family:&amp;quot;Roboto Mono&amp;quot;;font-size:9pt;font-weight:700&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;background-color:rgb(255, 255, 255);color:rgb(23, 43, 77);font-family:&amp;quot;Roboto Mono&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;jmriName &lt;/span&gt;&lt;span style=&quot;background-color:rgb(255, 255, 255);color:rgb(23, 43, 77);font-family:&amp;quot;Roboto Mono&amp;quot;;font-size:9pt;font-weight:700&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;background-color:rgb(255, 255, 255);color:rgb(23, 43, 77);font-family:&amp;quot;Roboto Mono&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:rgb(255, 255, 255);color:rgb(187, 136, 68);font-family:&amp;quot;Roboto Mono&amp;quot;;font-size:9pt&quot;&gt;&quot;NT&quot;&lt;/span&gt;&lt;span style=&quot;background-color:rgb(255, 255, 255);color:rgb(23, 43, 77);font-family:&amp;quot;Roboto Mono&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:rgb(255, 255, 255);color:rgb(23, 43, 77);font-family:&amp;quot;Roboto Mono&amp;quot;;font-size:9pt;font-weight:700&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;background-color:rgb(255, 255, 255);color:rgb(23, 43, 77);font-family:&amp;quot;Roboto Mono&amp;quot;;font-size:9pt&quot;&gt;&amp;nbsp;tid;&lt;/span&gt;&lt;span&gt;&#8221;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Replace the &#8220;NT&#8221; prefix that whichever connection prefix is appropriate for your connection, for example typically &#8220;LT&#8221; for a LocoNet.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now we are ready to try this. Open a Chrome window and point it to your JMRI web server.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;For example if you are reading this on your JMRI computer and it uses the default 12080 port, you can simply click on this link:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-indent:36pt&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://localhost:12080/web/cmrs/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://localhost:12080/web/cmrs/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Adjust the URL or the port number as needed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This should load the index.html files, which will in turn load the map1.svg and display it:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:440.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_29c217b54d6aca4bf778c57c2e15a16acfe4f9fa62b91716b4edf88ba5b95e95i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note that the mainline turnouts are represented this way:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-left:auto;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:199.2pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;Unknown State&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:98.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:87.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_255a83d42a2f7c5abee990ba24847ba5cf5f589eada24b83a19b052c6daf817di.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:199.2pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;Closed (a.k.a. Normal)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:100.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:86.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_cec013e2bac723d006b3ab64a5e9d021612acca0c64fc062151eed5d978195cdi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:199.2pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;vertical-align:baseline&quot;&gt;Thrown (a.k.a. Reverse)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:98.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:90.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_2cc0143c876faa5219a59b221772dbd31bf4b2fca790aa1a7e2009a76cc41f38i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Clicking a turnout on the mainline should toggle its state between &#8220;closed&#8221; and &#8220;thrown&#8221;. When a turnout is &#8220;unknown&#8221;, it will be set to &#8220;closed&#8221; first. Depending on the way turnouts are configured, the change on the map can be instantaneous or take several seconds to reflect the command.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What happens exactly: when you click on a turnout on a map, it sends a JSON command to JMRI to toggle the turnout in the desired state. JMRI sends a DCC command via the command station. Then JMRI in turn sends a signal back to the web page to update it to match its current state. The exact behavior depends on how turnouts are configured:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;If JMRI turnouts do not use feedback, the new state will be reflected on the web page immediately and purely reflect what JMRI &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;thinks&lt;/span&gt;&lt;span&gt;&amp;nbsp;is the state of the turnout.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;If JMRI turnouts use feedback, the new state will be reflected only &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;after&lt;/span&gt;&lt;span&gt;&amp;nbsp;JMRI got feedback from the command station or the sensors. So there might be a delay between when the turnouts are taped on the map and when the drawing actually changes.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The default depends on the command station used. LocoNet feedback should be fairly fast. NCE feedback using the &#8220;Monitoring&#8221; option can take a few seconds to happen. The low-cost NCE command stations (PowerCab, DCC Twin) do not support monitoring, in which case the feedback appears to be instant.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;You can double check the turnouts states in the JMRI Turnouts Table:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:236.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_cf16fd6c5354db9db4fe84298fa1c1f337bbcfeac2642fa9cf09ef5f038b6d6ei.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;h.qizug6j7zgz8&quot; style=&quot;padding-bottom:6pt;padding-top:20pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:20pt&quot;&gt;5- Editing the Map &amp;amp; HTML&lt;/span&gt;&lt;/h1&gt;
&lt;h2 id=&quot;h.7hxz6qkl8ldy&quot; style=&quot;padding-bottom:6pt;padding-top:18pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:16pt&quot;&gt;The SVG Map&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;The latest version of the file can be found here:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/cmrs-layout/blob/main/jmri/web/cmrs/map1.svg&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/model-railroad/cmrs-layout/blob/main/jmri/web/cmrs/map1.svg&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The SVG map has been created using &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://inkscape.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Inkscape&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Any other SVG editor will do. Unless you really know what you&#8217;re doing, I don&#8217;t recommend editing SVG directly by hand. If you know what you&#8217;re doing, you&#8217;d not be reading this anyway :-)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:472.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_8ec8a50a74405a18ee0066afbc978026612cdc1790a558c62e4b2b1205b8113ci.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;m only providing some quick notes and not going in extensive details here as I think most of it is fairly self explanatory:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The top layer &#8220;Touch Zones&#8221; contains yellow rectangles. They must stay visible. The JS code uses them to define hit targets for the turnouts and animates their visibility when they are touched.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;As you can see I started with rectangular hit targets. I plan to switch them all to circles and make sure they don&#8217;t overlap.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There&#8217;s a layer for all turnouts in the thrown position and another for all the turnouts in normal position. These are clones of master objects so that I can just edit the master and all the clones change at the same time. All these work as overlays -- the normal position object is shown when the turnout is normal and hidden when the turnout is thrown, and vice versa.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;All the master objects (before being cloned on each turnout) must be visible and not hidden (otherwise all clones are hidden too). They are simply tucked in a corner of the map, hidden under a rectangle matching the background color. The center objects are for mainline-to-sidings and the outer objects are for the mainline crossovers:&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:127.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:276.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_f5b9e5b85bbe3aaa7dd91b8e9b6d8c57ebbcfa26d5e35f0eea9d1b62b22b873ci.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Naming patterns must match the Javascript:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;All touch hit targets are named &#8220;Touch123&#8221; where 123 is a turnout number, e.g. &#8220;Touch200&#8221; for turnout number 200.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;All &#8220;normal position&#8221; objects are named &#8220;TN123&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;All &#8220;reverse position&#8221; objects are named &#8220;TR123&#8221;.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Follow-up: when I did the version for Randall Museum, I revisited the SVG a bit. Using clone elements is actually a problem (the javascript code must be careful not to change the visibility on the original element). Although the blue/red gradient thing looked nice at first, it grew old very quickly and design-wise I prefer a flat look. The one I redesigned for Randall uses less layers and is easier to edit.&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;h.bjjb8oefpy61&quot; style=&quot;padding-bottom:6pt;padding-top:18pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:16pt&quot;&gt;The HTML file&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span&gt;The latest version of the HTML file can be found here:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/cmrs-layout/blob/main/jmri/web/cmrs/index.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/model-railroad/cmrs-layout/blob/main/jmri/web/cmrs/index.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I&#8217;ll go very quickly over this because there&#8217;s not much to see here.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The HTML file relies on the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://svgjs.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SVG.js&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;library to load and manipulate the SVG file. The minified svg-2.6.3.min.js is saved locally and served by the JMRI server since the wifi network used for WiThrottle does not have internet access.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Loading the SVG is done dynamically:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(252, 229, 205);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;lt;div id=&quot;svg_container&quot; class=&quot;svg&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;lt;div id=&quot;loader&quot; class=&quot;load&quot;&amp;gt;Please wait, loading...&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&#8230;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;function loadSvg() {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; console.log( &quot;document loaded&quot; );&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; $(&quot;#svg_container&quot;).hide();&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; svgDoc = SVG(&quot;svg_container&quot;);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; $.get(svgUrl, function(contents) {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var _tmp = $(&quot;svg&quot;, contents);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; svgDoc.attr(&apos;viewBox&apos;, &amp;nbsp;_tmp.attr(&apos;viewBox&apos;));&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; svgDoc.attr(&apos;width&apos;, &amp;nbsp; &amp;nbsp;_tmp.attr(&apos;width&apos;));&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; svgDoc.attr(&apos;height&apos;, &amp;nbsp; _tmp.attr(&apos;height&apos;));&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; svgDoc.svg(_tmp.html());&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; console.log(&quot;SVG loaded&quot;);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;#svg_container&quot;).fadeIn();&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;#loader&quot;).fadeOut();&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;[id^=&apos;TN&apos;]&quot;).hide();&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;[id^=&apos;TR&apos;]&quot;).hide();&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; setupJmri();&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; }, &quot;xml&quot;);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;JMRI provides a jQuery plugin to communicate with the JMRI JSON server. On Chrome, it uses a websocket. Once the javascript requests the state of a turnout, it will automatically receive updates as soon as the state changes, without having to poll the server periodically. This results in some neat and compact code:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 234, 211);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;lt;script src=&quot;/js/jquery-1.11.2.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;lt;script src=&quot;/js/json2.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;lt;script src=&quot;/js/jquery.websocket.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;lt;script src=&quot;/js/jquery.jmri.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&#8230; &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;function setupJmri() {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; jmri = $.JMRI(jmriUrl, {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; open : function() { console.log(&quot;JMRI: open &quot;); },&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; close: function() { console.log(&quot;JMRI: close&quot;); },&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; console: function(data) { console.log(&quot;JMRI: &quot; + data); },&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; goodbye : function() { console.log(&quot;JMRI: goodbye &quot;); },&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; didReconnect : function() { console.log(&quot;JMRI: didReconnect &quot;); },&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; failedReconnect &amp;nbsp;: function() { console.log(&quot;JMRI: failedReconnect &amp;nbsp;&quot;); },&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; hello : function() {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; console.log(&quot;JMRI: hello&quot;);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; svgDoc.select(&quot;[id^=&apos;Touch&apos;]&quot;).each(function () {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; setupTurnout(this);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; },&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; turnout: function (name, state, data) {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; console.log(&quot;Got turnout \&quot;&quot; + name + &quot;\&quot; with state &quot; + state + &quot;.&quot;);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var tid = name.substring(2);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var idNormal = &quot;TN&quot; + tid;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; var idThrown = &quot;TR&quot; + tid;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;#&quot; + idNormal).fadeTo(250, (state === jmri.CLOSED) ? 1 : 0);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $(&quot;#&quot; + idThrown).fadeTo(250, (state === jmri.THROWN) ? 1 : 0);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; svgDoc.select(&quot;[id=Touch&quot; + tid + &quot;]&quot;).each( function() {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this._state = state;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; })&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; jmri.connect();&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Each touch hit point is selected and configured to have a callback when &#8220;clicked&#8221; that sends the JRMI setTurnout command. Two important notes here:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The &#8220;jmri.getTurnout&#8221; call does not actually receive anything -- it registers this turnout to receive all updates automatically via the $.JMRI( { turnout } ) object defined previously.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The &#8220;jmriName&#8221; needs to be tweaked. In particular this implementation just extracts the number and assumes all turnouts are NCE turnouts using the &#8220;N&#8221; prefix, thus having names such as &#8220;NT200&#8221;. This needs to be adjusted for specific layouts. For example the turnout prefix could be part of the &#8220;Touch&#8221; label (e.g. &#8220;TouchNT200&#8221;) or it could be customized using a range (e.g. &#8220;jmriName = &amp;nbsp;(tid &amp;lt; 200 ? &#8220;LT&#8221; : &#8220;NT&#8221; ) + tid;&#8221;).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 234, 211);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;function setupTurnout(t) {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; var tid = t.attr(&quot;id&quot;).substring(&quot;Touch&quot;.length);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; var jmriName = &quot;NT&quot; + tid;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; console.log(&quot;Setup turnout: &quot; + jmriName);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; jmri.getTurnout(jmriName);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; t._state = 0;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; t.style(&quot;visibility&quot;, &quot;visible&quot;);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; t.style(&quot;opacity&quot;, &quot;0&quot;);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; t.click(function() {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; console.log( t + &quot; &quot; + t._state );&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; t.animate(125, &quot;&amp;lt;&amp;gt;&quot;, 0).style(&quot;opacity&quot;, &quot;1&quot;).animate(125, &quot;&amp;lt;&amp;gt;&quot;, 0).style(&quot;opacity&quot;, &quot;0&quot;);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (t._state == jmri.CLOSED) {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; jmri.setTurnout(jmriName, jmri.THROWN);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; jmri.setTurnout(jmriName, jmri.CLOSED);&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; });&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I see these files as merely templates that need to be adjusted to specific customer developments.&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;h.vyqld4w7clca&quot; style=&quot;padding-bottom:6pt;padding-top:20pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:20pt&quot;&gt;6- Configuring Ubuntu on the Intel Compute Stick&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;&lt;span&gt;The Intel Compute Stick I choose is the &#8220;lower-end model&#8221; one. It comes with Ubuntu which is much better suited for our needs here than the more powerful version with Windows 10.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First time the computer stick is plugged, it will go through the standard Ubuntu install and there&#8217;s nothing very specific to say about this except to set the user to auto-login.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Once the Ubuntu install is finished, I added some convenience packages:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(207, 226, 243);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;$ sudo apt-get install gvim screen openssh-server x11vnc&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;$ printf &quot;set modeline\nsyntax on\n&quot; &amp;gt; ~/.vimrc&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That way I can easily remotely administer it using SSH and VNC.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The first time I then let the Software Updater update the kitchen sink.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Two packages were problematic so I removed them after:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(207, 226, 243);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;$ sudo apt-get remove chestersmill-settings oem-hdmi-audio-dkms&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Next I used the Ubuntu Software Center to remove a bunch of packages that are not needed on this machine: Rhythmbox, Totem, all of Libreoffice (e.g. calc, impress, writer, math, draw, etc), Shotwell, Uunity Lens Photos, Chestersmills.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Out of the box, Chromium was crashing when I was trying to open a page. That was easily solved by removing it using the Software Center then reinstalling it. Once I got Chromium working, I launched it to change some settings:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Settings &amp;gt; Manage Passwords &amp;gt; Turn off&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Settings &amp;gt; Autofill Settings &amp;gt; Turn off&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Very important, I had to change the power settings:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;System Settings &amp;gt; Brightness &amp;amp; Lock&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Disable &#8220;Dim screem&#8221;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Turn screen of &#8230; Never&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Lock Off&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Uncheck require password when waking from suspend&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;System Settings &amp;gt; Power&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Don&#8217;t suspend&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Next I created these 3 files:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The &#8220;chrome_loop&#8221; file tries to discover the JMRI server using ZeroConf and runs Chromium in Kiosk mode.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The &#8220;terminal_kiosk&#8221; one simply opens a terminal to run &#8220;chrome_loop&#8221;. This way the output of the script can be seen and users can alt-tab to select the terminal and close the kiosk.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The &#8220;autostart/.desktop&#8221; creates an entry that will run &#8220;terminal_kiosk&#8221; automatically once the user is auto-logged in.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ cat ~/.config/autostart/.desktop&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(234, 209, 220);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;[Desktop Entry]&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;Type=Application&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;Exec=/home/cmrs/bin/terminal_kiosk.sh&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;Hidden=false&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;NoDisplay=false&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;X-GNOME-Autostart-enabled=true&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;Name=CMRS Kiosk&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;Comment=Startup Script&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ cat ~/bin/terminal_kiosk.sh &lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 210, 233);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;/usr/bin/gnome-terminal --geometry=80x20+200+200 -x sh -c &quot;/home/cmrs/bin/chrome_loop.sh | less&quot;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;$ cat ~/bin/chrome_loop.sh &lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 210, 233);border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;# vim: set ts=2 sw=2:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;#&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;# Find the first accessible JMRI web server advertised via ZeroConf on the local&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;# network then opens the CMRS turnouts web page using Chrome in kiosk mode.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;while true; do&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; echo&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; JMRI_IP_PORT=&quot;&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; while [[ -z &quot;$JMRI_IP_PORT&quot; ]]; do&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; for J in $(avahi-browse -a -t -p -r | grep &#8220;IPv4&#8221; | grep &quot;Web Site&quot; | grep jmri | awk -F &quot;;&quot; &apos;{print $8 &quot;:&quot; $9}&apos;); do&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; IP_PORT=&quot;$J&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; IP=&quot;${J%:*}&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; PORT=&quot;${J#*:}&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; echo &quot;Trying $IP_PORT...&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if printf &quot;GET / HTTP/1.0\r\n\r\n&quot; | nc -n -w 2 $IP $PORT | grep -q html ; then&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; echo &quot;Found JMRI Web Server at $IP_PORT&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; JMRI_IP_PORT=&quot;$IP_PORT&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; fi&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; done&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; if [[ -z &quot;$JMRI_IP_PORT&quot; ]]; then&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sleep 1s&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; echo -e &quot;\nJMRI Web Server not found. Retrying...\n&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sleep 1s&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; &amp;nbsp; fi&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; done&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; echo -e &quot;Starting Kiosk for $JMRI_IP_PORT\n&quot;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; sleep 1s&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; chromium-browser --incognito --password-store=basic --kiosk http://$JMRI_IP_PORT/web/cmrs/&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;&amp;nbsp; sleep 1s&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;done&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&#8217;s look at this last script.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I use &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.avahi.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;avahi-browse&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to do ZeroConf discovery. It prints all entries found in a terse &#8220;parsable&#8221; format. I only want IPv4 entries for jmri with the Web Site service. The awk command filters the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;address:port&lt;/span&gt;&lt;span&gt;&amp;nbsp;from the avahi output:&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;avahi-browse -a -t -p -r | grep &#8220;IPv4&#8221; | grep &quot;Web Site&quot; | grep jmri | awk -F &quot;;&quot; &apos;{print $8 &quot;:&quot; $9}&apos;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Next I use &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://netcat.sourceforge.net/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;netcat&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to check if there&#8217;s really a web server we can connect to at that &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;address:port&lt;/span&gt;&lt;span&gt;&amp;nbsp;combo:&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;printf &quot;GET / HTTP/1.0\r\n\r\n&quot; | nc -n -w 2 $IP $PORT | grep -q html&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Finally I open Chromium with a few options:&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:9pt;vertical-align:baseline&quot;&gt;chromium-browser --incognito --password-store=basic --kiosk http://$JMRI_IP_PORT/web/cmrs/&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;--kiosk puts the display in full screen. Note that it is not very hard to escape the kiosk mode here (see below for discussion on that topic).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;--password-store=basic prevents Chromium from trying to unlock the standard Ubuntu keychain. If that option were not present, Chromium would show a popup asking for the main user password to unlock the keychain, to be able to auto-save autofill and managed passwords. We don&#8217;t want that here. Note that the &#8220;basic&#8221; store is an unencrypted one, which is fine here.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;--incognito prevents Chromium from remembering this page was open. This prevents it from showing the dialog &#8220;do you want to restore pages&#8221; if the device is turned off before Chromium is properly closed.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now we should have a talk about security, and for that we need to start with &#8220;who are your users?&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;An important point here: in this current setup, it is trivial to &#8220;escape&#8221; the Kiosk mode by simply hitting Alt-Tab or event just Alt. From there, the terminal with Chromium can be closed and the user can do pretty much anything they want on the machine.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Given this is used in a private club, we don&#8217;t have to actively prevent users from being malicious. It&#8217;s not the type. However we want to actively prevent them from doing things by mistake, which is way more likely to happen. And for that:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;There is no keyboard connected to the machine. The Intel Compute Stick has a single USB port which is connected to the touch panel. So users cannot &#8220;Alt-Tab&#8221; by mistake.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;They can however long-press by mistake on the touch panel, which currently selects text in the SVG map and opens a menu with a &#8220;Copy&#8221; option. No harm here, but this is annoying so I&#8217;ll override it in javascript. &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now if I were to install this in a public location, I would take a few more drastic measures:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Lock the BIOS with a password. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Disable booting from the SDCard or USB in the BIOS.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Enforce a strong password on the JMRI wifi.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Create a secondary user with no admin privileges and not part of &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;suoders&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the computer stick and have this one be the auto-logged one.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Modify the kiosk javascript to absorb and ignore all keyboard input using the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;document.onkeydown&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;event.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To finish, I&#8216;d like to point out that the proper way to use this computer stick with Ubuntu would be simply get rid of Ubuntu and instead create a dedicated &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://debian-live.alioth.debian.org/live-manual/stable/manual/html/live-manual.en.html#tutorial-2&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Debian Live CD&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. This would allow reducing the OS to the strict minimum needed (x11, chromium and the network wifi stack) and reduce the boot time while making it harder to override behavior.&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;h.rin8mm83a8t3&quot; style=&quot;padding-bottom:6pt;padding-top:20pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:20pt&quot;&gt;7- Alternatives Considered&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;&lt;span&gt;The brainstorming on this project was interesting:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It started with &#8220;let&#8217;s have a 24-inch touch panel and donated Pentium-powered tower PC to drive it, running its own JMRI server&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;I scaled that down to a laptop instead of a tower PC.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Then to a Raspberry Pi 3 or similar.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Then to a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;Chromestick&lt;/span&gt;&lt;span&gt;&amp;nbsp;Chromebit.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Then scaled it back to a Intel Compute Stick running Windows 10&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;And finally scaled it down to an Intel Compute Stick running Ubuntu.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On the software side, iterations considered ranged from:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Running a separate instance of JMRI.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Writing my own C# &#8220;thin client&#8221; on Win&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;10 (to use the kiosk mode for Universal Windows Apps).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Or simply a Java-based web server coupled with a Jython extension for JMRI and a local browser on the stick.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Then it hit me that JMRI &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;already&lt;/span&gt;&lt;span&gt;&amp;nbsp;runs a &#8220;Java-based web server&#8221;, that the Jython extension would basically do exactly what the JMRI JSON server does and that if we use an Ubuntu stick we have Chrome in kiosk mode.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As far as the Intel Compute Stick goes, I really like it. The &#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://amzn.to/2DnbaYe&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;BOXSTCK1A8LFC&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221; (ouch, you do think Intel&#8217;s marketing would step in and come up with a name more catchy than this) is on par or even better than a Raspberry Pi 3. The Intel one comes with a power supply, WiFi, an HDMI cable, an internal 4 GB storage and all wrapped in a convenient form factor, all for the same or smaller price that the RPi 3 which comes with none of it. The equivalent for the RPi 3 would be a kit that adds power supply, wifi, box, sdcard and HDMI cable, which is going to add $20 or so to the base price. So in this regard the Intel stick is a better deal. The only thing the RPi 3 has for it is a catchy name, more hype than you can shake a stick at, and a GPIO which is of no use here.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The likely contender here, which is worth pointing out, is using a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://enterprise.google.com/chrome/devices/chromebit/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Chromebit&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;-- which is often improperly called a &#8220;chrome stick&#8221; except that&#8217;s not an actual product name, the actual official name is a &#8220;single app Chrome kiosk device&#8221;. It&#8217;s made by ASUS and is more expensive than the Intel one ($85, 2 GB RAM, 16 GB storage). The downside is that to develop a proper kiosk-mode &#8220;single-app&#8221;, it does require getting an enterprise license and it is not clear to me how it would work on the closed JMRI wifi network with no internet access.&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;h.hn8935kg3rno&quot; style=&quot;padding-bottom:6pt;padding-top:20pt;page-break-after:avoid&quot;&gt;&lt;span style=&quot;font-size:20pt&quot;&gt;8- Conclusion &amp;amp; Updates&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;&lt;span&gt;Overall I was extremely satisfied with how that was working. I gave a short limited demo of this at the club, and the initial response seemed quite positive. We all agreed I would rework the map to try a few variations. We also quickly identified the need to have turnout feedback, and I later explored that on the side using an ESP32 but I never got to demonstrate it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The one part that did not work as expected during my demo at the club was the ZeroConf discovery on the closed JMRI wifi network. I didn&#8217;t dig too much into what was going on, but I did notice that all Android phones were having trouble finding JMRI. Since they ran that wifi box with a fixed IP, the problem was quickly solved by changing the IP on the Intel stick.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;My only concern was the physical screens / touch panels which had been used for the experiment. I personally found the 32-inch panels too bulky and heavy for the task. I believe the logic behind that choice was to have the largest surface area to avoid people tapping the wrong turnout by mistake. But there are other ways to do it, for example it would be a bit more logical to look at the existing physical button panels and match that density, and using additional smaller screens each displaying less of the layout map.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In the meantime, I reused all this when I worked on the automation computer for the Randall Museum. I also have 10-inch tablets (not pictured here) with the map:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:296.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_6d0679efb9e254e6ed6b04577dd299f84d2add13a7e1754bd5d69c0af22762eci.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The laptop is a Linux server running JMRI. Once started, it also runs a full-screen kiosk-mode version of Chrome with the automated layout map:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:465.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_b479dcbc0c128c08749cc0de8536109494bd5d025ec00456792f4e4470bb81dai.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There is one nice thing about this setup. The computer startup is fully scripted, Linux boots automatically, starts JMRI and then starts Chrome with the map, which only displays properly after it connects to JMRI. Thus we know the whole system is up and running when the map is displayed. I can train the Museum staff to simply look at the laptop: if it displays the map, the whole JMRI setup is working as intended. They don&#8217;t need to figure out more than that.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;In this version I also have block sensors mapped on segments of the track as well as the state of the automation toggle switches clearly indicated. I reworked the way turnouts are represented in the SVG to make it simpler, and added the gray &#8220;hot spots&#8221; to indicate where the touch-enabled turnouts are located on the screen. The corresponding files are located in the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;randall-railroad git repo&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. It&#8217;s minimalist in purpose. These do exactly what I need and no more. Feel free to take that and reuse them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;</content>
<updated>2018-01-21T00:00:29-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">NCE AIU and Short Trigger Events</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2017-10-31_nce_aiu_and_short_trigger_events.html"/>
<id>https://www.alfray.com/trains/blog/train/2017-10-31_nce_aiu_and_short_trigger_events.html</id>
<category term="nce" label="NCE"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;On the Randall layout, visitors press a button to trigger the trains&#8217; automated sequence to start. Very quickly we noticed that sometimes the system would fail to notice the button was pressed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We use a large button but that&#8217;s irrelevant. The issue has to do with how long it is pressed. Most people give a quick short push, and that&#8217;s the problem.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-left:auto;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;vertical-align:middle;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:241.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:396.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_3c0dee1fe9afa6378d96b9e39bda694bde0d89c1749aceb2b234f7df25305d97i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;vertical-align:middle;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:268.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:396.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_cf00609e36f28098c30476973c54a2ead12ebb31cba31fba653133ede5c35f56i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The button directly closes the contacts on an &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933435-Auxilliary-Input-Unit-AIU01-&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE AIU01&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(Auxiliary Input Unit), which is regularly polled by the NCE command station. The computer runs my &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall_rtac.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor software&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which polls JMRI for the status at at least 30 Hz. The AIU01 is polled by the NCE Command Station at an appalling low refresh rate due to the NCE cab bus implementation: if an input doesn&apos;t trigger long enough (e.g. 1 second), it will be easily missed. In this case, it&#8217;s enough to give a short but quick push to the button and most of the time miss the polling window. The event is simply missed.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Question is what would be the simplest circuitry possible to make an input trigger longer?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;From the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933435-Auxilliary-Input-Unit-AIU01-&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE AIU01&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;pdf:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:234.28px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:318.50px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_44b004f2fa6f22fa9eba52c054b8f5954768500f561b2522db427beb6bf6b428i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There&apos;s a grounded common and a 5V pull up on each input.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;When the input is open, the Microchip input is pulled up and the inverter sets the other side of the LED to low.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;When the input is grounded, the Microchip input is pulled low, protected by the 10k resistor and the inverter sets the other side of the LED to high, thus lighting it.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The obvious way is to use an NE555 to generate e.g. a 1-second pulse. It can be powered by the 5V from the NCE AIU to make sure they share the same ground and power (both 5V need to match to be a closed circuit). This requires at least one RC circuit on the 555, and we need one per input to deal with. Potentially an NCE AIU has 14 inputs, even using a 558 (a quad 555) would still require 4 chips and some wiring or a PCB.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;At the other extreme, the &#8220;simplest&#8221; circuit would be to not have any extra circuitry at all. One option I do not have is reprogram the NCE AIU. I don&apos;t think NCE would give me the source, which is too bad because I could just trivially do the 1-second delay in software -- or more exactly, sample and latch any trigger input till the next read from the NCE bus.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A more &quot;modern&quot; solution would be to stick an Arduino in between, e.g. an Arduino Nano is fairly cheap. How many would I need for 14 inputs? 18 pins usable per Nano e.g. 9 inputs and 9 outputs. The Nano can be powered from the 5V from the NCE AIU and would basically simulate the inputs for the AIU. Although at that point, I&#8217;d basically add an RS485 shield to the Arduino and consider getting rid of the NCE AIU to begin with.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The cheapest and simpler solution (as in &quot;less wiring&quot;) would be to put a capacitor on the input, it should lower it slowy and then raise it slowly. That would introduce a delay into the trigger and the release so it might be good enough. The time constant to reach 63% is &#964; = R x C. Say the capacitor is fully discharged. We have R=10 k&#8486;, &#964;=1s &#8658; C=100 &#181;F and &#964;=0.5s &#8658; C=50 &#181;F. That&apos;s not unreasonable. There should be some resistance in series with the button to not fully short the capacitor say something like 100 &#8486; or 1 k&#8486;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;And I tried just this, using R=110 &#8486; and C=1000 &#181;F because that&#8217;s what I had around. A full long button press activates the signal for a good 5-7 seconds after release. Even a very short button press still activates the signal for a couple seconds.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The one consequence is that when powering the DCC, the signal is activated as the capacitor charges for also the same amount of time. This is not a problem since I have a full laptop with JMRI that needs to boot and it takes way longer than the initial charge time.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:199.78px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:453.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_96b62dc8dc91c87c7035f70fe5e2f78c9a3d0c4f3c43d106d9885333bbe6efb7d.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2017-10-31T00:00:15-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Powering a LED off DCC</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2017-04-12_powering_a_led_off_dcc.html"/>
<id>https://www.alfray.com/trains/blog/train/2017-04-12_powering_a_led_off_dcc.html</id>
<category term="dcc" label="DCC"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Very interesting discussion here: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://cs.trains.com/mrr/f/744/t/230553.aspx&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://cs.trains.com/mrr/f/744/t/230553.aspx&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Summary, TL/DR: We can power a LED directly from DCC, just add a resistor to limit to about 10 mA (or less if too bright).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Suggestion is &quot;nice to have&quot; a reverse parallel diode to limit the reverse voltage on the LED:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:204.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:222.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_957a5961a2d5c6fa2cc0cc84ae33d123bc875c6964a5b1c9d22d940e130ec6bfi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;However another comment indicates it&apos;s enough to compute R to be within the specs of the reverse voltage of the LED (assuming I have the specs).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;From [richg1998]: &quot;The NCE Power Cab uses a red led and a 1k resistor to monitor the AC out of the Cab. &#8230; No reverse diode&#8230;&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That&apos;s a good point. SGTM.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is nice and could apply to Randall on the reversing loops:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;span&gt;[Mark R.] &quot;I have four signals on my DCC layout that give polarity indication going into reverse sections. The green LED is attached to opposite rails on either side of the gap, and the red LED is attached to the same rail on either side of the gap. These LEDs have been running straight off of DCC track power with no inverse protection for over 15 years and have not damaged any of them.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Let&apos;s think on how that works electrically by taking an example. Let&#8217;s say we&#8217;re looking at the &#8220;end&#8221; of a reversing loop that uses a manual toggle to reverse the polarity.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;And if the rails polarity is A/B, we have across the gap:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:173.90px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:538.58px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_08cbb6d66780879b94c595ebf724bac25783afc0096e49537359f3549b54ee4ad.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Since it&apos;s a sort-of-AC signal, the 2 LEDs can be on either side:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The red can be on either rails, bridging the gap on the same side.&lt;br&gt;It will be off when the polarity matches (same voltage), on when mismatched.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;The green can be across opposite sides of the gap.&lt;br&gt;It will be off when the polarity matches (which is improper), on when mismatched (what it should be).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;It&apos;s interesting because we can do it with just 3 wires, one being common to both LEDs.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Now imagine the 2 LEDs are assembled to look like a dwarf signal placed next to the reversing loop turnout. It would make a visual indication on whether the power toggle is in the right direction. Even when using an automatic reverser module, this would be a nice display to have.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We can use the exact same principle to power a green/red mast to indicate alignment of a turnout, e.g. in the case of Sonora at Randall when we have 2 tracks going into one by using the polarity of the frog as a common to both LEDs.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2017-04-12T00:00:59-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Layout #3 &#8220;Test Track&#8221;</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2017-04-10_layout_3_test_track_.html"/>
<id>https://www.alfray.com/trains/blog/train/2017-04-10_layout_3_test_track_.html</id>
<category term="layout" label="Layout"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I tore down my &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/layout2.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;previous layout #2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;since it didn&#8217;t have a purpose anymore -- originally it was for the kids to play with and for me to play with cameras recognition of trains and automation. I&#8217;ve done my part, and the kids didn&#8217;t show interest anymore. Being a 4x9&#8221;, it was still taking valuable space in my small room. Time to update.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What I cared for is having a workbench and a simple test track on top of it. I came up with a very simple L-shaped workbench design. The workbench is designed to not have any legs in the way and lots of storage space underneath. For the test track, I have a bunch of EZ-Track around so I just used that. It&#8217;s suitable for minor switching. I won&#8217;t add any scenery, it does not need to look like a shelf layout since it&#8217;s a workbench.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:298.8pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:272.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:383.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_86d8854fdef501ceb026d2ff1610c442b9477cbd508e0196e53f75082d6f300fi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:0pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:0pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:0pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:0pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:298.8pt&quot;&gt;&lt;p&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:221.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:383.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_86c6d942d9d70528e0f9e1a240ddd310d4a1837c0d3a9979efd8837fe7842df5i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I find EZ-Track really sturdy and easy to work with. The electrical connections are really good so the whole thing can be powered by a single rerailer terminal. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Although I do like the EZ-Track for the ease of snapping and the good contact they make, the turnouts are frankly quite so-so. Using two #4 head-to-head is guaranteed to make an S-curve issue that will derail a lot of rolling stock, for example. On all of them the point isn&#8217;t always flush with the rail and lacks a spring to keep it in place once the twin-coil has pushed it in one direction.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;A few of my &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://amzn.to/2zUYDZL&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;EZ-Track #6 turnouts&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;started creating shorts over time&lt;/span&gt;&lt;span&gt;. The frog can be either powered or unpowered. I like it powered but on some of them the frog can make contact with the inside rails -- there&#8217;s an insulating gap and it&#8217;s not very consistent in size. When installing the turnout, it&#8217;s easy to push the inside rails enough to close the gap and create shorts. This is easily fixed by using an &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://amzn.to/2yj8HiS&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Atlas Model Railroad Super Saw&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to recreate the gap:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:348.20px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:621.90px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_655e2dd6bf9b526dd8c5854601a4429a131a3c1ff8666db6f9faa90137463bcdd.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2017-04-10T00:00:47-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor Automation Software</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2017-01-16_conductor_automation_software.html"/>
<id>https://www.alfray.com/trains/blog/train/2017-01-16_conductor_automation_software.html</id>
<category term="RTAC" label="Rtac"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221; is the name of the software that controls the automation on the Randall Museum Model Railroad. It&#8217;s written in Java and integrates into JMRI. The other part is the Android tablet display software. Combined, both create &#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;RTAC&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221; -- the Randall Train Automation Controller. I started the conductor project in mid-2016 and by the end of 2016 I had a working version deployed on the layout at the museum. Immediately after that, I started thinking about extending it already :-)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;RTAC / Conductor source&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;can be found in this git repo &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/model-railroad/conductor&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;with a GNU GPL v3 license.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;--&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Here&apos;s a rethink of the automation software.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Right now I have JMRI for sensor management and DCC throttles. Conductor acts as a plug-in that drives the automation purely on sensor+timer event based script.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One useful thing in RocRail is the notion of routes, which JMRI has too of course (but annoyingly complex to set up).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The idea is to describe the layout using a chain of blocks with turnouts on or between them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The timer/sensor script remains the same, but the goal is to have the software know which engine number is on which block. This in turn will drive the display and make it possible to lock routes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Example, for the Passenger and Branchline automation:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;BL1 &#8658; BL2 [T324] &#8658; void &#8658; BL3 &#8658; BL4&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;B503b &#8658; B503a &#8658; [T504] &#8658; [T321] B321 [T322] [T326] &#8658; [T330] B330 &#8658; void &#8658; B360 &#8658; B370&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;[T322] &#8658; B322 [T324] &#8658; [T326]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;B310 &#8658; [T320] B320 &#8658; [T330]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;B311 [T311] &#8658; [T321]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One difficulty is to express the relation of turnouts and blocks. There are also some unknown blocks where the software has no visibility but can easily assume that the train is located there.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;That&apos;s one thing that determinist software like JMRI or RocRail do not handle.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;E.g. in the case of the passenger automation, right now the blocks B321 and B330 up to B350 are not detected, but once the automation has started we know that the train must be there somewhere till it reaches B360, at which point the train info can be transferred to B360.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Note that a train can be on two blocks at the same time if they are continuous. That&apos;s the case when crossing from one block to the next one, especially if there are lighted cars or push-pull engines.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;What is this information good for?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;First for display. One goal is to have a summary track representation on the tablet with the blocks and the train number should show up on that where the software thinks it is. That means if something is wrong, the viewer can notice it and act on it.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Second for emergency handling. When doing the Passenger automation, we expect the train leaving B503a to reach B330 in a specific amount of time, namely 50 seconds till we reduce the speed past the Sonora turnout. We can add some margin to it, e.g. say 60 seconds max. If we have not detected B330 turning on within 60 seconds, we can assume something is wrong.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Third for turnout protection. It would be ideal if the automation could prevent from aligning turnouts if their block or the next one is occupied. This would be only for automated routes. Manual operators could always realign turnouts.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Finally for automating train speed under automatic block control. E.g. if the passenger automation is returning to the station, the following would happen:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;T330 (Sonora) needs to be aligned. However this can only be done if all of B330, B320 and B321 are not occupied.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;If B330 is occupied or if T330 cannot be aligned, the train needs to stop &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;before&lt;/span&gt;&lt;span&gt;&amp;nbsp;the occupied block. Luckily for us, blocks are long enough that if we stop a train just when it enters a block, it will stay in that block and not stop in the next one. Otherwise we would have to program it to stop 2 blocks before. Also in this example, &quot;before B330&quot; going down is that &quot;void&quot; block but that&apos;s OK since we know that a train that passes B360 going enters that void block.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Finally, when whatever is occupying block B330, B320 &amp;nbsp;and B321 leaves and the 3 blocks are free, the automation can throw the T330 turnout and resume the train.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Knowing in which block the train is, it would not block itself from throwing a turnout. E.g. if the train is itself in B330, that should not prevent it from throwing T330.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One issue we have is that we have no real feedback on turnout position. We can only query JMRI to tell us what the turnout is likely to be at, unless an operator has manually changed it. JMRI has no knowledge of that. The NCE PH Pro command station does but I don&apos;t believe JMRI is querying that. (Update 2018-05-10: JMRI has a monitoring more specific to pull turnout state data from the NCE PH Pro. It&apos;s not fast and slows down the CS reportedly.)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Once we have all this, we could rewrite the automation in a completely different way. For example for the passenger automation, the events could be purely block based and their order forming a route, e.g. something like this:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;State Station:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;span&gt;B503b &amp;amp; Stopped &amp;amp; Start &#8658; Align T504, T322, T321; State Up; Speed Fwd Normal; Expect B321 in 10s.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;State Up:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;span&gt;B321 &#8658; Align T322, T326, T330; After 40s do F3; Expect B330 in 50s.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;span&gt;B330 &#8658; Speed Fwd Restricted; Expect void1&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;span&gt;Void1 &#8658; Align T370; Expect B360; After 10s do Speed Fwd Normal; After 15s do Horn&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;span&gt;B360 &#8658; Expect B370 in 10s&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;span&gt;B370 &#8658; After 8s do Speed Fwd Restricted; After 11s do Stop; After 15s do State Down.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;State Down:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt&quot;&gt;&lt;span&gt;B370 &#8658; Speed Rev Restricted; Expect B360&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Etc.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;So this describes the movement from block A to block B. Technically we don&apos;t even need to indicate which turnouts to throw, the software can compute that using the map described earlier.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;One tricky part is that block &quot;void1&quot; since switching to that state relies on the block B330 going off instead of another sensor going on. Also calling it a &quot;virtual block&quot; instead of &quot;void&quot; may be better.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;As far as the block graph is concerned, a train is thus located on a specific block (even if virtual) and with a specific direction within the block graph.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;An end-goal of that is to allow &quot;free&quot; automated running. E.g. another train waiting at station track 2 could leave after the PA train once the blocks are free, or one could circle on the mainline and wait for the PA one when needed. For this we need to extend the concept of occupied block to occupied region -- e.g. B330 up to B370 is one region and can only have a single train at a time.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;</content>
<updated>2017-01-16T00:00:09-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">IR Sensors</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2016-12-01_ir_sensors.html"/>
<id>https://www.alfray.com/trains/blog/train/2016-12-01_ir_sensors.html</id>
<category term="electronics" label="Electronics"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;To detect trains on the branchline, I experimented with using IR reflective sensors instead of block detectors. These have the advantage that they are inexpensive and can be connected directly to an &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933435-Auxilliary-Input-Unit-AIU01-&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE AIU01&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;board.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The original idea was to embed the sensors in the track bed. The sensors are fairly small and fit nicely between ties. The one chosen have a detection range of 2-15 mm, which would be ideal to detect when an engine truck passes over the sensor. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:159.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:98.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_57c7e189932a1554934abe8d4c5b7b72e9fbee661dd19708c2e04dee61c5d6c0i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The IR reflective sensor used are &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://amzn.to/26NywA3&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;TCRT5000&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.vishay.com/docs/83760/tcrt5000.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Vishay spec&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;can be found &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.vishay.com/docs/83760/tcrt5000.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;here&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This model is nothing more than 2 separate &quot;LEDs&quot; stuck together in a flimsy small plastic shell. They can be easily removed from the plastic shell and mounted in the track flush with the ties, pointing upwards (technically one LED is an emitter and the other is a receiver so calling it a LED is abusing the term, although it may look like one).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;The photodetector on the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://amzn.to/26NywA3&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;TCRT5000&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;varies its current based on the amount of light received. No light, no current; lots of light, more current. The amount of light that bounces and the collector current depends on the distance between the detector and the object. The nominal distance is 2 millimeters and experimentation showed that I could get away with much more.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;One of the LED is an emitter and needs to be powered by 5 V and a resistor (to limit and adjust the current). The other side is a phototransistor, NPN type.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;How is the IR sensor going to connect to the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933435-Auxilliary-Input-Unit-AIU01-&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE AIU01&lt;/a&gt;&lt;/span&gt;&lt;span&gt;?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;This is how I use the IR sensors with an Arduino using the internal pull-up and next to it is the AIU input circuitry:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:217.07px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:221.50px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_b56fcf770c69c388b126823e70081ceb1899d0d3ad3ded182eb776699a3a9d73d.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:226.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:326.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_1209aee838432695eaf1ffe715138f74f553f325909bea0977bf2e04629bb243i.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;There&apos;s a good match here: connecting the IR receiver collector to the 5V/pull-up side of the AIU should do exactly what we want with the AIU input driven low when an IR reflection occurs.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;We need a 5 V source and there again the NCE AIU is a perfect match. It has a 7805 voltage regulator on board that generates 5 V from the cab bus, which we can directly tap into. There is no pin output with that 5 V but it&apos;s easy to solder one from the 5 V bus anywhere on the output side of the 7805.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:274.55px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:331.64px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_1133460646a193e9f5771b91137a2a5c17eb39c798909686e7967ceab109f674d.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Pros:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;As planned, they are easily hidden between ties. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Current usage is reasonable enough to tap it from the NCE AIU01&apos;s 5V supply.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Data sheet indicates that in reflective mode, distance is ideally up to 2-15 mm. That does not seem to be a problem when the reflective surface is a truck or tank, assuming the surface is reflective to IR.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;This works with the given issues:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Bottom black plastic on engines is not reflective enough.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Some gray plastic work, others seem to not be too efficient.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;One workaround is placing some kind of reflective tape or paint under the engines. Good success using ducting metallic tape under the engine&apos;s tank.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;However they don&apos;t trigger long enough. E.g. a strip of 2 inches will trigger for about 1 second as the engine moves, which might not be enough to be detected in time. Too much potential for NCE or JMRI to miss it depending on their own scan timing.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The length will depend on the shape of the engine&apos;s under body.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Other solutions to try:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;2- Run it in &quot;face to face&quot; instead of bouncing mode. Experimental tests show that distance can be around up to 7 cm that way. Sideways, the distance was about 2 cm max.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Idea is to have a relay box on the side modified with the emitter pointing to the track. Initial tests show that the receiver would have to be mounted slanted towards the emitter, not straight up and proper alignment is going to be tricky.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The sensor will work in &quot;reverse&quot;, being on when not occupied and off when occupied.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;margin-left:36pt;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:134.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:297.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_018a3f157004a887aa7d63329f9b21b128b8bdac9ec41b53edd25366b3f52665d.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;3- Use multiple emitters mounted between ties to get a more powerful illumination.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Will ruin the &quot;stealth&quot; mode, may look bulky.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;4- Use another IR sensor with a more powerful emitter.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;5- Find an IR flood lamp matching the receiver&apos;s bandwidth and place it on top of the layout, pointing down.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;According to the Vishay specs, &quot;Emitter wavelength: 950 nm&quot; with a daylight blocker on the receiver.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;6- Make the signal turn on &#8220;longer&#8221; for the NCE AIU, either by using some kind of RC circuit or a 555 in single shot mode or some Arduino contraption.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2016-12-01T00:00:24-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">JMRI Logix</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2016-10-11_jmri_logix.html"/>
<id>https://www.alfray.com/trains/blog/train/2016-10-11_jmri_logix.html</id>
<category term="jmri" label="Jmri"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Looking at JMRI Logix, this is a non-script click-o-drome if-this-then-that.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Conditions range from block, sensors. Actions are signals, turnouts, scripts or warrants.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Conditions can act when set or on change.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;No direct throttle control, maybe indirectly via warrant scripts to run &quot;auto trains&quot;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;One possibility is starting a script when some condition happen.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Seems interesting for people who don&apos;t want to write scripts. Tons of clicking to get things done.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Seems ideally suited for simple linear decision trees, not for free-form scripting.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Examples would be signals or turnouts set depending on block usage.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;For my automation purposes, it seems fairly weak and I&#8217;ll design my own software that uses a text file for configuration. Somehow it makes non-tech people very nervous and Windows users especially seem to enjoy clicking ad nauseum in poorly designed modal dialog boxes instead of having a single text file script they can look at quickly. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-10-11T00:00:32-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">NCE Limitations</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2016-10-08_nce_limitations.html"/>
<id>https://www.alfray.com/trains/blog/train/2016-10-08_nce_limitations.html</id>
<category term="nce" label="NCE"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933425-Common-Cab-Questions&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://ncedcc.zendesk.com/hc/en-us/articles/200933425-Common-Cab-Questions&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2VVj4nH&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE PowerCab&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;/ &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/39AshWB&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;DCC Twin&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;can only use cab bus addresses up to 10.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;0-1 are the internal twin cabs.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;2-7 are for throttles.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;8-9-10 are for cab devices.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933435-Auxilliary-Input-Unit-AIU01-&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE AIU01&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;can use only cab bus address 4 or 48-63. That means effectively on a PowerCab bus it can only use address 4, there can&apos;t be more than one on the whole bus. Quite disappointing but OK enough for home since I had no plan to have more.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;I&#8217;ll repeat this in case it&#8217;s useful for others:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;On an &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2VVj4nH&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE PowerCab&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/39AshWB&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE DCC Twin&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;command station, only &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;one&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933435-Auxilliary-Input-Unit-AIU01-&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE AIU01&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;board is supported and at only cab bus address 4.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Regarding the NCE cab bus and the NCE USB interface, I realized I have two of them at home (one straight, and one modified for the direct serial-to-Arduino). They are both on address 63. I just realized the other day they were on the same address and it&#8217;s somehow not a problem, although only one polls the NCE AIU, the other one just sends commands.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;On the NCE Power Pro: highly recommended to ditch USB and use the RS232, otherwise will have limited functionality &#8658; it was OK for pure cab command as I was doing before at Randall but all indications say it is not suitable to get the AIU stuff. Oddly enough, AIU status works with the Twin but the pages all say it will probably not work with the higher end Power Pro.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Update: Tried it with the Power Pro and I can confirm.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The PowerCab / Twin can query one NCE AIU. I connect JMRI to the cab bus via an NCE USB interface and I can read the NCE IAU status. The refresh rate is appalling but it works. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;I plug the same NCE AIU on a Power Pro, and the same NCE USB on the cab bus of the Power Pro. JMRI cannot read the data back from the AIU.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;I plug the same NCE AIU on a Power Pro and this time use an USB-to-RS232 adapter on the computer. JMRI can now read the data back from the AIU.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Of course, now I remember that I read about this a while ago:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://sites.google.com/site/markgurries/home/nce-info/nce-usb-limitations&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://sites.google.com/site/markgurries/home/nce-info/nce-usb-limitations&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Bottom line for Randall I&apos;m going to have to switch to RS232 with a USB adapter.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;All forums and sites point to the same Keyspan USA-19HS adapter: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://amzn.to/2dBYkNY&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://amzn.to/2dBYkNY&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp; &#8230; $25&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Cable: Straight (not null modem) RS232 cable. 50 ft one &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://amzn.to/2zn4vfl&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://amzn.to/2zn4vfl&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&#8230; $8 from monoprice.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;RS232 max length is 50 feet. That cable worked fine for me.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;If the AIU had turned to be a dead end, the fallback plan B would have been to get an arduino with a wifi or ethernet shield, wire sensors directly to it and have a Go program generate NCE AIU status like at home. This is similar to the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/layout-wifi/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Translate&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;project where I have a local program on the computer that simulates an NCE bus protocol and JMRI just thinks it&#8217;s connected to some NCE thingy over ethernet. Works like a charm.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-10-08T00:00:12-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">NCE Switch-8</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2016-10-07_nce_switch-8.html"/>
<id>https://www.alfray.com/trains/blog/train/2016-10-07_nce_switch-8.html</id>
<category term="nce" label="NCE"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;I got an NCE Switch-8 to learn what I can (and cannot) do with it for Randall. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Looking at the electronics on the board&#8230; If there&#8217;s one thing I like about the NCE electronics, it is that they are &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;fancy. This is the tech I grew up with and I can look at the board and recognize the components and understand what they do. I hope it will stay like that.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Microproc: PIC16F1936&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.microchip.com/wwwproducts/en/PIC16F1936&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://www.microchip.com/wwwproducts/en/PIC16F1936&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://ww1.microchip.com/downloads/en/DeviceDoc/41364E.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://ww1.microchip.com/downloads/en/DeviceDoc/41364E.pdf&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Pin 1 = Vpp (programing voltage)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Pin 8 = Vss (-)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Pin 20 = Vdd (+)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Power: MCC 7805CT&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.mccsemi.com/up_pdf/MC7805CT(TO-220).pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://www.mccsemi.com/up_pdf/MC7805CT(TO-220).pdf&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Front Left to Right : Pin 1 / 2 / 3&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Pin 1 = Input / Left&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Pin 2 = GND&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Pin 3 = Output / Right&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;On the Switch-8, the large programming header can be used to get the +5 from the 7805.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;From top, #2 is the +5 and #3 is the Gnd from 7805 (shared with the GND headers).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;NCE AIU01: there&apos;s a similar 7805. A +5V can be soldered on the little through-hole just on top of the 7805 on the board. Measures 5V. For a single IR sensor, use a 220 &#8486; resistor.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-10-07T00:00:06-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Direct Access to NCE Q-Snap Mk2</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2016-09-26_direct_access_to_nce_q-snap_mk2.html"/>
<id>https://www.alfray.com/trains/blog/train/2016-09-26_direct_access_to_nce_q-snap_mk2.html</id>
<category term="nce" label="NCE"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;From both the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200590909-Board-Versions-and-Jumper-Settings&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE USB v7&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;doc (see NCE website) or from&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://jmri.sourceforge.net/help/en/package/jmri/jmrix/nce/packetgen/NcePacketGenFrame.shtml&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://jmri.sourceforge.net/help/en/package/jmri/jmrix/nce/packetgen/NcePacketGenFrame.shtml&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Example: 0xAD is for switching an Accy/Signal. There is no provision to read the state.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;E.g. 0xAD 0x00 0x03 0x03 0x00 &#8658; throw 0x0003 in normal direction&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;E.g. 0xAD 0x00 0x03 0x04 0x00 &#8658; throw 0x0003 in reverse direction&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;0 is an invalid address.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Max address is 2044 (0x7FC) which is a broadcast address for Accy.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Note: when trying in JMRI &amp;gt; NCE Command, &quot;Binary&quot; means hex without x, seriously \o/ ?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Lockout CV 556:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Use on Address of input #1, which is 4 for my home one.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;556 = 0x022C&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;0xAF is Ops ACCY programming.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;AF 00 04 02 2C [0=unlocked | 1=locked]&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;This works. It locks buttons out.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;ACCY on controller can still be used to throw turnouts.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;That means I can trivially command that from an Arduino and bypass JMRI if needed.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-09-26T00:00:27-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">NCE Q-Snap and EZTrack #6 Crossovers</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2016-08-25_nce_q-snap_and_eztrack_6_crossovers.html"/>
<id>https://www.alfray.com/trains/blog/train/2016-08-25_nce_q-snap_and_eztrack_6_crossovers.html</id>
<category term="nce" label="NCE"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Experiment from tonight: control the EZTrack #6 crossovers using the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/201689279&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE Q-Snap&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. &#8658; Failed.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;I have 2 EZTrack #6 turnouts mounted in cross-over configuration. The idea was to power them from a single Q-Snap output to save one output for each cross-over.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The Q-Snap has no problem driving a single #6. But ever the largest timing I tried does not make the crossover (2 turnouts in parallel) toggle properly. They either bounce or switch half-way.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;I also tried using a 9V DC power brick instead of the DCC power. That didn&apos;t help. Supposedly that way the turnout should get 9x2-2 = 16 VDC. However from experience I remember I always failed to trigger them in DC, which is why I previously used the AC from the EZTrack ACC power brick.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-08-25T00:00:15-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Home Control Panel</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2016-08-22_home_control_panel.html"/>
<id>https://www.alfray.com/trains/blog/train/2016-08-22_home_control_panel.html</id>
<category term="train" label="Train"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://digistump.com/products/50&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;DigiX&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: 11 x 6 in&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/201689279&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE Q-Snap&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: 4 x 3 in (DCC bus)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933435-Auxilliary-Input-Unit-AIU01-&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE AIU01&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: 4 x 3 (2 RJ12, comes with one cable)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.gabotronics.com/development-boards/xmega-xminilab.htm&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;XminiLab scope + board&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: 2 x 3 // 3.5 x 3 in&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200526389-UTP-Universal-Throttle-Panel&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE UTP&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: 3 x 2 x 2 in deep&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:448.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:621.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_c985daf3252ab87f2b786481eb693894a2892801de0919ad7654291ee92b4cadd.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Notes:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Q-Snap really needs 3 outputs per turnouts, it carries its own common per twin-coil. It&apos;s not clear whether I can share the commons since each one has its own capacitor.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The DigiX relays OTOH work by sharing the AC common so I have 2 outputs per turnouts plus one common.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-08-22T00:00:38-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Yard Design Links</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2016-08-04_yard_design_links.html"/>
<id>https://www.alfray.com/trains/blog/train/2016-08-04_yard_design_links.html</id>
<category term="train" label="Train"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:1.33px solid #000000;display:inline-block;height:133.00px;margin:-0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:488.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_cefc7d55fc11b9d817e12d072f79832e5c2c3edd5b29d104347c6b46074a6e0ai.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Yard Design 10 Rules: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.housatonicrr.com/yard_des.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://www.housatonicrr.com/yard_des.html&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;very good intro.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Somewhat unrelated, very interesting read on &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.housatonicrr.com/Index.htm&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Housatonic Railroad Design Philosophy&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Tips of Freight Yard design: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.featherrivertrains.com/documents/kal_12248.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://www.featherrivertrains.com/documents/kal_12248.pdf&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Yard Operations and Design: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.x2011west.org/handouts/ldBootcamp-YardOps.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.x2011west.org/handouts/ldBootcamp-YardOps.pdf&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Many LayoutVision pages relevant: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.layoutvision.com/id18.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://www.layoutvision.com/id18.html&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Love for the yard: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.layoutvision.com/id19.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://www.layoutvision.com/id19.html&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;How to classification yard: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.layoutvision.com/id20.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://www.layoutvision.com/id20.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Ops on a classic 4x8: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.layoutvision.com/id39.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://www.layoutvision.com/id39.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Beware of CAD: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.layoutvision.com/id40.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://www.layoutvision.com/id40.html&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(agreed on the S curves!)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:168.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:454.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_b9589bdc650cce2b73b25e6cc75884061aaef73a6ca4b1627b519d6bfc639f9ci.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Interesting design. Note that according to LayoutVison, typical west yards don&apos;t have an A/D.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-08-04T00:00:30-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Use an NCE AIU and IR sensors</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2016-04-09_use_an_nce_aiu_and_ir_sensors.html"/>
<id>https://www.alfray.com/trains/blog/train/2016-04-09_use_an_nce_aiu_and_ir_sensors.html</id>
<category term="nce" label="NCE"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Since I have IR reflective sensors, the idea would be to connect them to an &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933435-Auxilliary-Input-Unit-AIU01-&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE AIU01&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to detect position in 2 or 3 spots for speed control and automation.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;(Also I got an &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/201689279&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE Q-Snap&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to control 4 twin-coils, This would cover the front cross-over (2 turnouts), the yard entrance Y1 and the Y1/Y2 yard turnout. Really the point is learning and see what it&#8217;s good for since I can already control these turnouts with the Arduino/DigiX).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;One idea is for speed matching, using one NCE AIU and 2 sensors.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Embed the sensors in the EZTrack pointing up rather than side mounted.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Use these directly using JMRI/jython.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;This leaves 12 unused inputs on the AIU.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;How do I connect my IR sensors to the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ncedcc.zendesk.com/hc/en-us/articles/200933435-Auxilliary-Input-Unit-AIU01-&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NCE AIU01&lt;/a&gt;&lt;/span&gt;&lt;span&gt;?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;This is how I use the IR sensors with an Arduino using the internal pull-up and next to it is the AIU input circuitry:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:217.07px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:221.50px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_766c0544a1358b88092c0c1f3dc9d7b9b23c239de92588ed9e237677d422f4f0d.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:226.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:326.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_1209aee838432695eaf1ffe715138f74f553f325909bea0977bf2e04629bb243i.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;There&apos;s a good match here: connecting the IR receiver collector to the 5V/pull-up side of the AIU should do exactly what we want with the AIU input driven low when an IR reflection occurs.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;I can get 5 V to drive the LEDs out of the DigiX.&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-04-09T00:00:33-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">JMRI WiThrottle protocol</title>
<link rel="alternate" type="text/html" href="https://www.alfray.com/trains/blog/train/2014-09-07_jmri_withrottle_protocol.html"/>
<id>https://www.alfray.com/trains/blog/train/2014-09-07_jmri_withrottle_protocol.html</id>
<category term="jmri" label="Jmri"/>
<content type="html" xml:lang="en" xml:base="https://www.alfray.com/trains/blog/train/">&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;This is my own understanding of the JMRI WiThrottle protocol based on reading the JMRI source code and connecting to a local JMRI server. I apologize in advance for the highly condensed notation style. I originally started looking into this to create my own python program; then back in 2014/2015 I used this &amp;nbsp;to create a Python extension of Scratch running on a Raspberry Pi to control JMRI. It was pointless yet it was absolutely cool and totally worth it. Eventually I used that same information to create my own &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/cab_app.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Cab Engineer: DCC Throttle&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;android app.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;-- (start of info dump) --&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;JRMI WiThrottle protocol in action using [&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://jmri.sourceforge.net/help/en/package/jmri/jmrit/withrottle/Protocol.shtml&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;WiThrottle protocol doc&lt;/a&gt;&lt;/span&gt;&lt;span&gt;].&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Server code: &lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/JMRI/JMRI/blob/master/java/src/jmri/jmrit/withrottle/DeviceServer.java&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;DeviceServer.java&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;for main codes (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;old sourceforge link: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline line-through;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://sourceforge.net/p/jmri/code/HEAD/tree/trunk/jmri/java/src/jmri/jmrit/withrottle/DeviceServer.java&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;DeviceServer.java&lt;/a&gt;&lt;/span&gt;&lt;span&gt;).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/JMRI/JMRI/blob/master/java/src/jmri/jmrit/withrottle/ThrottleController.java&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ThrottleController.java&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;for single throttle (T and S codes) (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;old sourceforge link: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline line-through;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://sourceforge.net/p/jmri/code/HEAD/tree/trunk/jmri/java/src/jmri/jmrit/withrottle/ThrottleController.java&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ThrottleController.java&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;)&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;[2020 update: code now at &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/JMRI/JMRI&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/JMRI/JMRI&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Also note that all T/S throttle commands are now considered obsolete, using the MT multi-throttle commands is pretty much a given.&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;$ sudo apt-get install nc&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;$ nc 192.168.1.39 20004&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;lt; VN2.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- this is the protocol version number&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;lt; RL4]\[RS3 #36}|{36}|{S]\[RS3 #38}|{38}|{S]\[Steam 260}|{4}|{S]\[Yellow SD70}|{3}|{S&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- this is the roster, Entries are delimited by ]\[ and fields by }|{.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- so 4 entries with name|address|short-or-long for each entry.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;lt; PPA2&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- TrackPowerController&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;lt; PTT]\[Turnouts}|{Turnout]\[Closed}|{2]\[Thrown}|{4&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;lt; PTL]\[NT1}|{Yard_1}|{4]\[NT2}|{Yard_2}|{2]\[NT3}|{Maintenance}|{2]\[NT4}|{Spur}|{2&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;lt; PRT]\[Routes}|{Route]\[Active}|{2]\[Inactive}|{4&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;lt; RCC1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- number of consists to follow (0 if none)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;lt; RCD}|{86(S)}|{86(S)]\[38(S)}|{true]\[36(S)}|{false&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- this is obviously the consist roster: 86 address composed of 38 front + 36 rear.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;lt; PW12080&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- port web site&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;Them my turn to control:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;gt;NSomeName -- sets the name of the throttle for the JRMI server&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;gt; TS3&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- select loco at short address 3 (or TL1538)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- replies with the capabilities of the loco (function names + function states.)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- running it again reply &quot;TNot Set&quot;, which &apos;releases&apos; the loco.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;gt; TR0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- set direction to reverse&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;gt; TR1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- set direction to forward&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;gt; TV0 &#8230; TV126&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- set speed&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;gt; TI&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- idle, sort-of similar to TV0, stop loco&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;gt; TX&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- emergency stop, stops really right away + deactivate sound/functions.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;-- Restoring speed deactivates the emergency stop.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;gt; TF18&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- push (1) button F8. So that&apos;s mute toggle on/off&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- For toggles use 1 (push), then 0=light, 1=bell, 2=horn&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;-- and send it again to toggle.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;-- replies with the *new* state:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;lt; RPF}|{T]\[F8}|{true&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;gt; TF02&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- that seems the only one that releases the horn.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- so TF12 &amp;nbsp;+ TF12 (push horn button twice) does the same as TF12 + TF02&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;(push then release)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;gt; TQ&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- quit / releases loco (which stops them) + closes TCP connection.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Switching locos with TS (e.g. TS3, TS4) stops the other loco as soon as a new command is given. There&apos;s a S prefix for a &quot;secondary throttle&quot; but when using it, it also stops the main loco. So this doesn&apos;t allow me to control more than one at the same time. Instead there&apos;s a &quot;multi throttle&quot; protocol:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;gt; NTelnet&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;gt; MT+1&amp;lt;;&amp;gt;S3&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- register multi-throttle T id 1 for DCC S3. &amp;lt;;&amp;gt; is the field separator.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;gt; MTA1&amp;lt;;&amp;gt;V4 ...&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;gt; MT-1&amp;lt;;&amp;gt;S3&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;(replies with loco caps / functions).&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;OK I get it, both the MT (multi controller) and the T/S (single controller) commands work the same: T &amp;amp; S can be effectively used to control 2 engines at the same time without releasing them; *however* when using DCC addresses 3 and 4, there&apos;s a conflict with the DCC Twin and this one takes over for whichever address is not being addressed. e.g:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Set speed V5 for S3 &#8658; takes over the DCC Twin A (S3)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Set speed V5 for S86 &#8658; both engines 3 and 4 change to match the DCC Twin A/B speeds.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Changing speed of S3 / S4 seems OK and does not remove control. However changing directions (R0 / R1) or applying any function or changing the speed of something else than S3 / S4 does affect speed.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;When using TQ (quit), the S3/S4 locos immediately adopt the DCC Twin&apos;s speed.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The behavior is the same when using the EngineDriver android app.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Using MT, there&apos;s no difference between using MT+1/2/3 vs MS (secondary controller in multi-controller mode), e.g. using the T/S controller entries vs the multi-controller IDs does not change the behavior.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Once I start this route, it seems the potar speed control on the DCC Twin A (S3) doesn&apos;t work anymore yet the B (S4) still works. Powering off/on fixes it.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;WiThrottle is exposed via zeroconf:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;$ sudo apt-get install mdns-scan&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;$ mdns-scan&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;+ Home Layout._withrottle._tcp.local&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&#8230;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;There is a [&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/paulsm/pyzeroconf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;pyzeroconf in python&lt;/a&gt;&lt;/span&gt;&lt;span&gt;] library (and a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/jstasiak/python-zeroconf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;fork here&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) but I failed to see how to use it right away to get the IP address of the JMRI WiThrottle server.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The goal is to make a python &quot;module&quot; for the lapse timer, and then adapt it for Scratch.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Standalone module, create a single class that:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Init: create socket, send the throttle name, takes single loco address.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Close: send a TI (idle) before closing with TQ.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Use T with that loco short address.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Commands:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;direction forward / reverse&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;speed 0..126&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;toggle_bell&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;toggle_horn&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;short_horn&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;toggle_sound&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;toggle_light&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Trivial toggles: just send command, ignore response.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;More advanced toggles: take on/off argument. Send command, check response matches (true/false); if not, send command again.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;API to expose for Scratch:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Scratch can have broadcasts or variables&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Simple API: control a single loco at a time.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;var: loco_number (3, 4, 86)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;var: loco_speed (0..126)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;broadcast: loco_forward ; loco_reverse (apply R0/R1 + V) ; loco_stop (TI)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;remember moving state internally&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;changing loco_speed if moving sends a V.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;optional: changing loco_number sends a TI first if moving.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Complex API: control multiple locos.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;provide 3 vars: loco3_speed ; loco4_speed ; loco86_speed.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;3 broadcasts per loco = 9 broadcasts.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;seems harder to use.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;&#8658; Not doing this right now.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;[2014-12-23] More on the WiThrottle protocol:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Server source main file is at &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline line-through;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://sourceforge.net/p/jmri/code/HEAD/tree/trunk/jmri/java/src/jmri/jmrit/withrottle/DeviceServer.java&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://sourceforge.net/p/jmri/code/HEAD/tree/trunk/jmri/java/src/jmri/jmrit/withrottle/DeviceServer.java&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/JMRI/JMRI/blob/master/java/src/jmri/jmrit/withrottle/DeviceServer.java&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/JMRI/JMRI/blob/master/java/src/jmri/jmrit/withrottle/DeviceServer.java&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;- &quot;*&quot; is an heartbeat:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;nbsp; *+ &amp;nbsp;starts heartbeat&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;nbsp; *- &amp;nbsp;stops heartbeat&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;&amp;nbsp; * &amp;nbsp; heartbeat&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Roster:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;sendRoster() &quot;documents&quot; the roster entry&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;- FS field sep }|{&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;- ES entry sep ]\[&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;- syntax RL &amp;lt;num-entries&amp;gt; N*[ ES &amp;lt;name&amp;gt; FS &amp;lt;dcc-address&amp;gt; FS &amp;lt;S|L&amp;gt; ]&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;On connection, various controllers send their states:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;RouteController.java sends PRT (Panel Routes Titles) + PRL (Panel Route List)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;TrackPowerController.java sends PPA&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;TurnoutController.java sends PTT (Panel Turnout Titles)&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/JMRI/JMRI/blob/master/java/src/jmri/jmrit/withrottle/TurnoutController.java&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/JMRI/JMRI/blob/master/java/src/jmri/jmrit/withrottle/TurnoutController.java&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Command: PTA&amp;lt;one letter command&amp;gt;&amp;lt;system name or user name or number&amp;gt;&lt;br&gt;Command letter: 2=toggle, C=closed, T=thrown&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;&#8658; a single &#8220;turnout&#8221; number is converted into the default system prefix (e.g. 3 &#8658; NT3).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;&#8658; reply is PTA&amp;lt;2 or 4&amp;gt;&amp;lt;name&amp;gt; or &#8220;HM&#8221; with human error string for unknown turnouts.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;&#8658; an invalid command is ignored..&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Enumeration syntax:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;FS field sep }|{&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;ES entry sep ]\[&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;PTT gives &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;generic&lt;/span&gt;&lt;span&gt;&amp;nbsp;state names: name for closed, thrown, turnout table:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:0pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(0, 0, 0);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(0, 0, 0);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(0, 0, 0);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(0, 0, 0);border-top-style:solid;border-top-width:1pt;padding:5pt 5pt 5pt 5pt;vertical-align:top;width:597.6pt&quot;&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;PTT]\[value}|{turnoutKey]\[value}|{closedKey]\[value}|{thrownKey&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;- keys are &#8220;Turnout&#8221;, &#8220;2&#8221; (closed) and &#8220;4&#8221; (thrown)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;PTL lists the actual turnouts and states:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;PTL N*&amp;lt; ]\[SysName}|{UsrName}|{CurrentState &amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align:left&quot; class=&quot;console &quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Consolas&amp;quot;;font-size:8pt;vertical-align:baseline&quot;&gt;- States are 1=Unknown, 2=Closed, 4=Thrown.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;ConsistController.java sends RCC + one RCD per consist&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://sourceforge.net/p/jmri/code/HEAD/tree/trunk/jmri/java/src/jmri/jmrit/withrottle/ConsistController.java&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://sourceforge.net/p/jmri/code/HEAD/tree/trunk/jmri/java/src/jmri/jmrit/withrottle/ConsistController.java&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/JMRI/JMRI/blob/master/java/src/jmri/jmrit/withrottle/ConsistController.java&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/JMRI/JMRI/blob/master/java/src/jmri/jmrit/withrottle/ConsistController.java&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Formal syntax:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;FS field sep }|{&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;ES entry sep ]\[&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;syntax RCC &amp;lt;num-consists&amp;gt; or RCL &amp;lt;num-consists&amp;gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;syntax RCD FS &amp;lt;consist-address&amp;gt; FS empty-string or &amp;lt;consist-ID&amp;gt; N*[ ES &amp;lt;address-string&amp;gt; FS &amp;lt;is-forward:bool&amp;gt; ]&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;is-forward is true (forward) or false (reverse)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;consist-ID seems to be be the consist-address&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;address string: &amp;lt;number&amp;gt; &quot;(&quot; [S|L] &quot;)&quot;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;For the &quot;T&quot; (throttle) commands:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://sourceforge.net/p/jmri/code/HEAD/tree/trunk/jmri/java/src/jmri/jmrit/withrottle/ThrottleController.java&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://sourceforge.net/p/jmri/code/HEAD/tree/trunk/jmri/java/src/jmri/jmrit/withrottle/ThrottleController.java&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/JMRI/JMRI/blob/master/java/src/jmri/jmrit/withrottle/ThrottleController.java&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/JMRI/JMRI/blob/master/java/src/jmri/jmrit/withrottle/ThrottleController.java&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;- on connection, throttle sends:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Address&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;function labels =&amp;gt; RF&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;all function states =&amp;gt; RPF&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;current speed &amp;nbsp;=&amp;gt; empty, not sent&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;current direction =&amp;gt; empty, not sent&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;speed step mode =&amp;gt; empty, not sent&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;property change: RPF FS &amp;lt;throttle-prefix=T&amp;gt; ES &amp;lt;event-name&amp;gt; FS &amp;lt;value&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;even name: for example &quot;F18&quot;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;sources notes event name can be &quot;F##Momentary&quot; instead of &quot;F##&quot;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Function labels: RF &amp;lt;number=29&amp;gt; FS &amp;lt;address-string&amp;gt; N=29*[ ES &amp;lt;label&amp;gt; or empty ]&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;address string: &amp;lt;number&amp;gt; &quot;(&quot; [S|L] &quot;)&quot;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Function states: RPF FS &amp;lt;throttle-prefix=T&amp;gt; 29* [ ES &amp;lt;F&amp;gt; &amp;lt;0..28&amp;gt; FS &amp;lt;value:bool&amp;gt; ]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Throttle received commands with a T prefix:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;V &amp;lt;int&amp;gt; = velocity, range 0..126&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;X = eStop&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;F &amp;lt;c&amp;gt; &amp;lt;int&amp;gt; = function, c: 1=button down, 0=button up, maps directly on internal getFn method.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;f = *force* function if VN &amp;gt;= 2.0&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;R &amp;lt;0|1&amp;gt; = 0=reverse, 1=forward (in fact: bool is-forward)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;r = address release&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;d = address dispatch (?)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;L &amp;lt;int&amp;gt; = release current + set long address&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;S &amp;lt;int&amp;gt; = release current + set short address&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;E = address from roster entry if VN &amp;gt;= 1.7&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;C = set loco for consist functions&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;c = Consist Lead from RosterEntry if VN &amp;gt;= 1.7&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;I = idle (internally does set-speed-0)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;s = VN &amp;gt;= 2.0, set speed step mode&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;m = VN &amp;gt;= 2.0, handle momentary : similar to F&amp;lt;0|1&amp;gt;&amp;lt;int&amp;gt; but for throttle getFnMomentary methods.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;q = VN &amp;gt;= 2.0, handle request : ask throttle to send a state.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;qV: send current speed (method is void)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;qR: send current direction (method is void)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;qs: send current speed step mode (method is void)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;qm: send current momentary states&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Q alone with no prefix: shutdown throttle connection&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;2021 Update from &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/JMRI/JMRI/blob/master/java/src/jmri/jmrit/withrottle/DeviceServer.java&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;DeviceServer&lt;/a&gt;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;N&amp;lt;string&amp;gt; = device name.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Replies back with &#8220;*&amp;lt;int&amp;gt;&#8221;, number of seconds to send a heartbeat before triggering eStop.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;H = hardware&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;HU&amp;lt;string&amp;gt; = device UUID.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;* = Heartbeat (alone)&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;*+ = start HB.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;*- = stop HB.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Server side HB is a repeat timer task that sends an eStop on all throttles.&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Default interval is 16 seconds.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;However the Java Timer object is created using (interval * 900) milliseconds, so it&#8217;s going to execute sooner than the advertised 16 seconds, in this case 14.4 seconds!&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;line-height:1.15;padding-bottom:0pt;padding-left:0pt;padding-top:0pt&quot;&gt;&lt;span&gt;Suggestion is to send a &#8220;*&#8221; hb at half the requested time.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;/p&gt;</content>
<updated>2014-09-07T00:00:01-07:00</updated>
</entry>
</feed>
