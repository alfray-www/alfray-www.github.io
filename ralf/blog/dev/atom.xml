<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title type="html">R&#8217;alf Dev Log</title>
<updated>2025-09-01T01:07:08.269903-07:00</updated>
<link rel="alternate" type="text/html" hreflang="en" href="http://www.alfray.com/ralf/blog/dev/"/>
<link rel="self" type="application/atom+xml" hreflang="en" href="http://www.alfray.com/ralf/blog/dev/atom.xml"/>
<id>http://www.alfray.com/ralf/blog/dev/atom.xml</id>
<generator uri="https://github.com/ralfoide/rig4" version="0.1-Exp-0c45755">Rig4j</generator>
<entry>
<author><name>Ralf</name></author>
<title type="html">GA4 Stats from an ESP32?</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2025-04-12_ga4_stats_from_an_esp32_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2025-04-12_ga4_stats_from_an_esp32_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;At Randall, I&#8217;ll soon have the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://github.com/model-railroad/distant-signal&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Distant Signal&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;panel installed. This connects to the local wifi and gets the turnout state from the local MQTT broker. I want to track the &#8220;health&#8221; of that wifi connection, as that has been an issue in the past. The simplest way is to reuse my existing Google Analytics dashboards, thus I want the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://circuitpython.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;CircuitPython&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;script on the ESP32 to send pings to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/ga4&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;GA4&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The goal is to measure the &#8220;uptime&#8221; of the display. The display is working when it is able to receive messages from the MQTT server. It can receive them when it can connect to the wifi. Thus we want to track the wifi state, or some kind of proxy for it.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Since this is CircuitPython, we have &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.adafruit.com/welcome-to-circuitpython/circuitpython-libraries&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;AdaFruit libraries&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;to already deal with JSON and network.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;So really &#8220;all&#8221; I need is something similar to the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor/blob/main/jmri/conductor/common/src/main/java/com/alflabs/conductor/util/Analytics.java&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Analytics class in Conductor 2&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Queue stats to be sent.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Stats are sent as JSON payloads.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;POSTs can fail, in which case they need to be retried with a backoff delay.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; Obviously a &#8220;wifi lost&#8221; event would have no wifi to send the stat.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Do I need to put a real date/timestamp in the events?&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; These ESP32 don&#8217;t have a &#8220;date&#8221; clock, so it&#8217;s nice if I don&#8217;t have to.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There&#8217;s an NTP library which I&#8217;ve used on the LitterTimer experiment but it makes the logic more complicated since we need to expect that the device may not have wifi.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;So what do we need to do &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developers.google.com/analytics/devguides/collection/protocol/ga4/sending-events?client_type=gtag&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;custom pings to Google Analytics 4&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;?&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A &#8220;GA4_CLIENT_ID&#8221;, typically configured in settings.toml&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A &#8220;GA4_MEASUREMENT_ID&#8221;, also configured in settings.toml&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A &#8220;GA4_API_SECRET&#8221;, also configured in settings.toml&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The feature is disabled if either of these settings is missing.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Placing them in setting.toml avoids leaking these in any GIT source, and it makes it easier to configure a new panel.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;See below on where to find these.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A base URL:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;https://www.google-analytics.com/debug/mp/collect&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; -- debugging version&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;https://www.google-analytics.com/mp/collect&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; -- real pings version&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The POST URL is:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;%(base)s?api_secret=%(GA4_API_SECRET)s&amp;amp;measurement_id=%(GA4_MEASUREMENT_ID)s&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;POST mime type: text/plain&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Payload is JSON, and is used as such in Conductor:&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&apos;client_id&apos;: GA4_CLIENT_ID,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&apos;events&apos;: [ {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&apos;name&apos;: event_action ,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&apos;params&apos;: {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&apos;items&apos;: [ ] ,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&apos;value&apos; : value_int ,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&apos;currency&apos; : USD &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} ]&lt;br&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.circuitpython.org/projects/requests/en/latest/examples.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;AdaFruit &#8220;requests&#8221; library&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;is the simplest way to send a POST request. It accepts either a JSON (using a Python dictionary) or a string payload.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When POSTing to the debug URL, print the response.status_code and the response.content.decode() to get valuable information on why requests fail.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;When POSTing to the real ping version, the GA server replies with 204 (Success w/ No Content) and a complete lack of response body.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Some details on the JSON payload:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The only required field is really the event&#8217;s name.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The &#8220;currency&#8221; is only needed if there&#8217;s a value, which is an optional field.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s possible to provide a date in YYYY-MM-HH-mm-ss to &#8220;back timestamp&#8221; an event. This is useful when doing some kind of retries with an exponential back-off. However the ESP32 does not have the current date time -- that would require adding an NTP library and corresponding calls to initialize it. Possible, yet extra work for little benefit.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Example of usage for &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);font-weight:700;text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://github.com/model-railroad/distant-signal&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Distant Signal&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;GA3 used to have an event with fields &#8220;category, &#8220;action&#8221;, &#8220;label&#8221; that formed a nice hierarchy. GA4 simplified all that and removed these fields. The only event field is &#8220;name&#8221;. Custom fields are possible yet they add setup complexity, processing delay, and other complications.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;We need to pass in some kind of &#8220;panel id&#8221;, to differentiate multiple &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://github.com/model-railroad/distant-signal&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Distant Signal&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;panels, and some events need to have a parameter that is a string. However the &#8220;value&#8221; field in the event is really a &#8220;currency value&#8221; and as such is only a number. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The GA4 event name can &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;only&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;be alphanumeric and underscore.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A simple solution is to adopt a pattern for the name:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;text-indent:36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;&amp;lt;turnout&amp;gt;__&amp;lt;category&amp;gt;_&amp;lt;action&amp;gt;___&amp;lt;extra&amp;gt;&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The schema would become:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Event Name &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Value &amp;nbsp; &amp;nbsp; &amp;nbsp;Description&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&lt;br&gt;&amp;lt;ID&amp;gt;__wifi_connected &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;rssi&amp;gt; &amp;nbsp; &amp;nbsp; WiFi connected&lt;br&gt;&amp;lt;ID&amp;gt;__wifi_hb &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;rssi&amp;gt; &amp;nbsp; &amp;nbsp; WiFi heart-beat&lt;br&gt;&amp;lt;ID&amp;gt;__mqtt_connected &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;rssi&amp;gt; &amp;nbsp; &amp;nbsp; MQTT connected callback&lt;br&gt;&amp;lt;ID&amp;gt;__mqtt_disconnected &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;rssi&amp;gt; &amp;nbsp; &amp;nbsp; MQTT disconnected callback&lt;br&gt;&amp;lt;ID&amp;gt;__msg_script &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; n/a &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;MQTT &#8220;script&#8221; message received&lt;br&gt;&amp;lt;ID&amp;gt;__msg_turnout___&amp;lt;state&amp;gt; &amp;nbsp; &amp;nbsp;n/a &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;MQTT &#8220;turnout/state&#8221; message received&lt;br&gt;&amp;lt;ID&amp;gt;__msg_block___&amp;lt;block&amp;gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;1 or 0 &amp;nbsp; &amp;nbsp; MQTT &#8220;block/state&#8221; message received&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Explanation:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The point of the wifi / MQTT messages is to also convey the state of the wifi.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;We do that by passing the wifi RSSI (signal strength) as a value to graph it over time.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;We don&#8217;t have a callback when the wifi is lost, nor could we send a ping to GA4 (since there would be no network, duh). Instead we&#8217;ll use a heart-beat, say every 15 minutes or every 30 minutes. I don&#8217;t need much more granularity than that.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The MQTT library has its own heart-beat and thus can call a &#8220;disconnected&#8221; callback. That can happen due to lack of wifi (in which case we won&#8217;t receive the event), or due to the MQTT broker server being offline. Consequently, we shall treat that event as unreliable. A good proxy for it is the MQTT &#8220;connected&#8221; event -- by definition it happens when the network is up, and it happens once at startup and then once after each disconnection.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;My main goal is currently to track the wifi health, but let&#8217;s future proof it by also sending pings for the obvious core task of &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://github.com/model-railroad/distant-signal&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Distant Signal&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;, which is to process the MQTT messages.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The &#8220;turnout&#8221; message selects a state, which is a string. Thus we cannot place it in the &#8220;value&#8221; field of the GA4 payload (it&#8217;s a currency, really). Instead we&#8217;ll sanitize it and append it to the event name, making it easier to split/extract later if needed.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The &#8220;block&#8221; message has 2 values: the block name, and its state. The state can easily be converted to a value (1 for &#8216;active&#8217;, 0 for &#8216;inactive&#8217;), and the block name can be sanitized and appended to the event name.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Using this pattern, we can use get these in the graphs using custom filters:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;starts with PanelID__&#8221; to filter specific panels.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;contains -mqtt_dis&#8221; to filter specific categories/actions.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Filter &#8220;everything after ___&#8221; to display a table with turnouts/blocks changes.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;font-weight:700&quot;&gt;Configuring Google Analytics&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Now we need to set up GA and &#8220;prime&#8221; it to make this all work.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Head to the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://analytics.google.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Google Analytics&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;web site.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Create an Account if you don&#8217;t have one, or use an existing one. We don&#8217;t need its ID.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Using the Admin toolbar on the left, create a Property.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;If asked what type of property you need, make sure to select a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;web property&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;. That&#8217;s important.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Give it some dummy base URL, something that belongs to you. We won&#8217;t be using that URL anyway. I typically select &amp;lt;my web site/my project name&amp;gt; even if there&#8217;s no such web page.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Under Data settings, select the Data Stream that has been created when creating the new Property. That&#8217;s the key to use the Measurement API. If you were using an existing property, you might want to add a new Data Stream to separate things. The point is that the Data Stream has to be a &#8220;web&#8221; one.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Enter the &#8220;Web stream details&#8221; screen. This gives us what we need:&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;GA4_CLIENT_ID is named the &#8220;Stream ID&#8221; on this page. IIRC &#8220;client id&#8221; is the old nomination under GA3, and GA4 refers to it as a &#8220;stream ID&#8221; in the configuration pages, whilst the JSON payload keep the old name of &#8220;client_id&#8221;. Same stuff. It looks like a large int64 number.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;GA4_MEASUREMENT_ID is the &#8220;Measurement ID&#8221; on this page. It&#8217;s the &#8220;G-&amp;lt;letter&amp;gt;&#8221; code that we use in the gtag.js block.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Down in the &#8220;Web stream details&#8221; screen, select the &#8220;Measurement Protocol API secrets&#8221; and create a new one. The secret values goes in GA4_API_SECRET.&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Now at this point, I typically run everything using the debug POST URL and check the server&#8217;s response and fix issues as reported. A typical issue is that I always forget that the event name must be &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;only&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;alphanumeric and underscore, and I often start with some more fancy event names that I need to simplify.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The second point is that at first nothing will work. POSTs will properly return a 204 indicating they are accepted, yet no stats are visible in the GA4 dashboard, and the Admin page has a cryptic message about &#8220;no data received in past 48 hours&#8221;. The fix is that data collection needs to be &#8220;initialized&#8221; by sending at least some successful pings from a real web page using the proper gtag.js library.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;On a web server you own, create a new page. I typically match the one used for the stream URL.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Copy paste the Google tag Javascript using the link at the bottom of the &#8220;Web stream details&#8221; page.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Load that page to execute the google tag with your measurement ID in it.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Don&#8217;t forget to disable any ad blocker you&#8217;d have since they may be blocking the Google Analytics pings in the first place!&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;After a while, you should see the &#8220;Web stream details&#8221; having a green banner at the top with &#8220;Data collection is active in the past 48 hours&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-style:italic&quot;&gt;However at first, it will still display &#8220;no data&#8221; for a while&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;. That page is really misleading, and instead you want to use the &#8220;home&#8221; button in the left toolbar, and that should indicate &#8220;your data collection is active&#8221;, with hopefully something in the &#8220;active users in the last 30 minutes&#8221;. Clicking the &#8220;View Realtime&#8221; link should show more. That&#8217;s progress yet it&#8217;s a bit early, and as the disclaimer indicates on the page, you will likely find no data if you try to create a custom dashboard right away. &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Generally speaking, one major change from GA3 to GA4 is the major loss of &#8220;realtime&#8221; processing in the dashboards. Whilst the GA page can display some &#8220;real time&#8221; data in the one pre-made existing &#8220;Realtime overview&#8221; dashboard, that&#8217;s about it. I find that custom dashboards never have real time data. The processing delay seems to be at least 12 hours, especially if you use the GA connector for &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://lookerstudio.google.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Google Looker Studio&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2025-04-12T00:00:18-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">CircuitPython on ESP32: &#8220;pystack exhausted&#8221;</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2025-04-10_circuitpython_on_esp32_pysta_7694d270.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2025-04-10_circuitpython_on_esp32_pysta_7694d270.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Well, that escalated quickly.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;I&#8217;ve been battling with this in &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://github.com/model-railroad/distant-signal&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Distant Signal&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span&gt;@@ MQTT: Failed with &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;pystack exhausted&lt;br&gt;&lt;/span&gt;&lt;span&gt;Traceback (most recent call last):&lt;br&gt; &amp;nbsp;File &quot;code.py&quot;, line 498, in &amp;lt;module&amp;gt;&lt;br&gt; &amp;nbsp;File &quot;code.py&quot;, line 354, in _mqtt_loop&lt;br&gt; &amp;nbsp;File &quot;adafruit_minimqtt/adafruit_minimqtt.py&quot;, line 956, in loop&lt;br&gt; &amp;nbsp;File &quot;adafruit_minimqtt/adafruit_minimqtt.py&quot;, line 1027, in _wait_for_msg&lt;br&gt; &amp;nbsp;File &quot;adafruit_minimqtt/adafruit_minimqtt.py&quot;, line 381, in _handle_on_message&lt;br&gt; &amp;nbsp;File &quot;code.py&quot;, line 328, in _mqtt_on_message&lt;br&gt; &amp;nbsp;File &quot;script_loader.py&quot;, line 27, in newScript&lt;br&gt; &amp;nbsp;File &quot;script_parser.py&quot;, line 316, in parseJson&lt;br&gt; &amp;nbsp;File &quot;script_parser.py&quot;, line 289, in _parseGroup&lt;br&gt; &amp;nbsp;File &quot;script_parser.py&quot;, line 214, in _parseInstructions&lt;br&gt; &amp;nbsp;File &quot;script_parser.py&quot;, line 278, in _parseInstructions&lt;br&gt; &amp;nbsp;File &quot;adafruit_display_text/label.py&quot;, line 88, in __init__&lt;br&gt; &amp;nbsp;File &quot;adafruit_display_text/__init__.py&quot;, line 273, in __init__&lt;br&gt; &amp;nbsp;File &quot;adafruit_display_text/__init__.py&quot;, line 294, in _get_ascent_descent&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;font-weight:700&quot;&gt;RuntimeError: pystack exhausted&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It turns out that CircuitPython is built with a max stack depth of 15-16 calls (*), at least for this version of the MatrixPortal S3.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s entirely possible to rebuild it with a different stack depth, if one is inclined to do so.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The stack size is controlled by CIRCUITPY_PYSTACK_SIZE which is defined globally here:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/adafruit/circuitpython/blob/HEAD/py/circuitpy_mpconfig.h#L455&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/adafruit/circuitpython/blob/HEAD/py/circuitpy_mpconfig.h#L455&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;and is also architecture dependent -- e.g. the SAM arch overrides the default.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Documentation on CIRCUITPY_PYSTACK_SIZE is here:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/adafruit/circuitpython/blob/HEAD/docs/environment.rst#circuitpy_pystack_size&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/adafruit/circuitpython/blob/HEAD/docs/environment.rst#circuitpy_pystack_size&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(*) As can be seen above, the &#8220;stack size&#8221; is not really a number of calls but really a size in bytes. Thus I expect calls with more arguments will exhaust the stack faster, or whatever else needs to be pushed on the stack for each call.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;At runtime, the &#8220;ustack&#8221; module can give the current max and used size:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline line-through;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.circuitpython.org/en/latest/shared-bindings/ustack/index.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.circuitpython.org/en/latest/shared-bindings/ustack/index.html&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Well, not on the MatrixPortal S3 port at least.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So how does one solve that? Since I do not want to rebuild CircuitPython, it means I can just amend the code to reduce stack usage.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For example the main starts with this:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;if __name__ == &quot;__main__&quot;:&lt;br&gt; &amp;nbsp; &amp;nbsp;setup()&lt;br&gt; &amp;nbsp; &amp;nbsp;loop()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This conveniently mimics an Arduino sketch setup. But we don&#8217;t need that &#8220;loop()&#8221; function. Just place everything under the &#8220;if main&#8221; and save one call stack entry.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The MQTT error above happened when a message was received -- I&#8217;d parse the script right there in the MQTT handler. Instead, what I do is save the script in a temporary global variable, and process it from the main loop, after the MQTT handler has returned. That way we&#8217;re &#8220;saving&#8221; about 5 calls depth on the stack.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The parser is about 5 calls deep. I could probably save one call in there, if I really have to.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Another easy strategy is to create lambdas, and queue them for processing in the main loop.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That&#8217;s more or less what I do with the delayed processing of the script, except since there&#8217;s only one thing to do, I keep the string reference around rather than wrap the processing in a lambda. Delayed processing can quickly become hard to follow, it&#8217;s harder to understand and debug.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2025-04-10T00:00:52-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">The HUB75 Protocol for LED Matrix Displays</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2025-04-07_the_hub75_protocol_for_led_m_3fc341e2.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2025-04-07_the_hub75_protocol_for_led_m_3fc341e2.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Over there in the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;trains/electronics blog&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, I have a little write up about the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ralf.alfray.com/trains/blog/train/2025-04-07_distant_signal_the_hub75_pro_6347ebc3.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;HUB75 Protocol for LED Matrix Displays&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, as used in the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://github.com/model-railroad/distant-signal&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Distant Signal&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;project. Go read it &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ralf.alfray.com/trains/blog/train/2025-04-07_distant_signal_the_hub75_pro_6347ebc3.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;there&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2025-04-07T00:00:13-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Wifi APIs on Android 13</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2025-02-09_wifi_apis_on_android_13.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2025-02-09_wifi_apis_on_android_13.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;I&#8217;m still in the process of updating &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;RTAC&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;to work properly on Android 13.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RTAC uses a number of APIs which have been deprecated since Android 10. Since it was running on 2017 hardware with Android 9, that wasn&#8217;t much of a problem. Now I want to move to newer hardware that runs Android 13 so I need to deal with it.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;WifiLock:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/reference/android/net/wifi/WifiManager.WifiLock&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;WifiManager.WifiLock&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;API is still present and usable.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;I&#8217;ve added a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/tcm/commit/15cdab990476a53f704ad4c4570f8eb0fee3e235&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;handler class&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;for it in TCM.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;However it&#8217;s not absolutely clear what it really provides.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/reference/android/net/wifi/WifiManager#enableNetwork(int,%20boolean)&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;WifiManager#enableNetwork&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;is reserved to &#8220;Device Owners&#8221; and system apps.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;It seems that &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/reference/android/net/ConnectivityManager#requestNetwork(android.net.NetworkRequest,%20android.app.PendingIntent)&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ConnectivityManager#requestNetwork&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;could be an adequate replacement?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A first try of the ConnectivityManager#requestNetwork API wasn&#8217;t conclusive.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The app suddenly displayed a model dialog &#8220;connecting to device&#8221; with a spinner, which has the undesirable side-effect of pausing the main TCM activity.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Configuring the request for a known SSID did&#8230; nothing. It stayed on that spinner and did not switch to that wifi network.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Configuring the request for a known SSID and its WPA password did something weird where the wifi list showed a second entry of the SSID &#8220;for this particular app&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So far that didn&#8217;t work as expected. My goal is to switch the wifi to an already known SSID that has already been configured in the Android wifi setting and already set up with password et al.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;To be continued.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2025-02-09T00:00:42-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Here we go again&#8230;</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2025-02-05_here_we_go_again_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2025-02-05_here_we_go_again_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Somehow the same wishes always circle back: &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;Aww, wouldn&apos;t it be cool if &amp;lt;insert random unfinished project name&amp;gt; had a built-in editor and I could code the app on my {phone, PDA} whilst I&apos;m using it?&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;A few decades ago that&apos;s how the Hint project started, which quickly got nowhere -- mostly because I was trying to get &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;everywhere&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;at the same time.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;And of course later I realized the goal is its own anti-goal -- it&apos;s already hard to finish one project, so adding another project inside that project pretty much guarantees that neither gets anywhere, fast.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2025-02-05T00:00:40-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Moving Again&#8230;</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2025-01-29_moving_again_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2025-01-29_moving_again_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Another month, another problem&#8230; I&#8217;ll spare you 2 days of internal discussion and I&#8217;ll just summarize it in one sentence:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I pretty much have decided to move all my open source repositories from BitBucket to GitHub.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Historically I had all my code on Google Code. When that service shut down, a lot of folks went to GitHub and I had my reservations about that service. Instead I chose BitBucket. I still have some philosophical issues with GitHub, but right now I have even more of them with BitBucket so&#8230; a lengthy migration is in order.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2025-01-29T00:00:24-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Motivation to Write Games</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2025-01-06_motivation_to_write_games.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2025-01-06_motivation_to_write_games.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Recently I&#8217;ve started two game projects at home, none of which are in a good enough state to be published. One of them is TD1 which I&#8217;ve discussed here in the previous years, and I finally built a prototype, originally to have a concrete way to explore the issues in a specific defense-vs-attack gameplay. There were some interesting challenges. Then I&#8217;ve discussed that with some friends. Now that this is done, I have had little motivation to actually implement the discussed gameplay changes. Instead I have thoughts on other projects.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Then I see a lot of little short games on Itch.io that are &#8220;playable&#8221; -- small scopes and essentially &#8220;mostly&#8221; finished. But I honestly don&#8217;t feel like playing them much besides the initial intro. Each time I think I&#8217;m maybe jealous because these games are finished and mine aren&#8217;t&#8230; but is that really the case?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Well, let&#8217;s analyze this a bit more.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;1- I&#8217;m jealous these games are &#8220;finished&#8221; and I don&#8217;t finish mine.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Well, it turns out the first part is only the appearance of it. I fully understand some of the games I see in the various itch.io Jams are only finished &#8220;on the surface&#8221; -- good enough for a Jam deadline. Each time I try some, I feel like there&#8217;s a lack of depth.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;It&#8217;s not true that I don&#8217;t finish my games. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/labs/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;My Labs&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;has &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/labs/archived/Nerdkill/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Nerdkill&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/labs/apps/asqare/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Asqare&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which, also on the surface, can appear &#8220;finished&#8221; -- and in fact these 2 are actually finished from &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;my&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;point of view.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;2- These games lack gameplay depth. Well, yeah. Totally. All of them.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/labs/archived/Nerdkill/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Nerdkill&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;is a good example as I never intended for the &#8220;game&#8221; to have a scoring system because then it would become the game I don&#8217;t want it to be (gratification of violence). Not having a scoring system is a core part of this gameplay (&#8220;violence is pointless&#8221;).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/labs/apps/asqare/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Asqare&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;could do more, but really what for? It&#8217;s a me-too kind of gameplay and the more I add to it, the more it would be clear it&#8217;s not Bejeweled -- when I started, I was trying to not be that game, as part of the original implementation was to try &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;different&lt;/span&gt;&lt;span&gt;&amp;nbsp;gameplays&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;-- but the problem is that no matter what, it would be compared to that baseline.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;3- I do have a number of totally unfinished games. Or maybe it&#8217;s better to see them as &#8220;not even really started&#8221;. They are not even on the Labs page or anywhere to be found.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Cangrejo is one. It&#8217;s 200% me-too and not even clearly defined where it was going anyway. Jump! is another one such. They are essentially technological demos with a complete lack of interest in producing even a finished MVP. I only started them because I saw some other game and I thought &#8220;hey how would I implement &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8221;. But once I found the core engine implementation, I didn&apos;t really care about all the work needed to make it a playable game.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In a way TD1 falls into that category as well. I had a vague idea, but I see a huge gap between what the prototype is and where I&#8217;d want it to be, and it&#8217;s not clear to me the end result would be interesting. Thus, yeah, I have little motivation to put in the effort to bridge that gap, only to end up with something I don&#8217;t care for at the end.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;In essence, that last part is key: I measure the cost of the project in terms of involvement versus result, and I don&#8217;t find it motivation compared to other stuff I may be doing. For example stuff like &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/conductor&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Conductor&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/randall/rtac.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;RTAC&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, or even &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/model-railroad/sdb&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SDB&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;have a high involvement cost, yet on the other hand I can see the tangible benefits to me of having them working -- the Randall Museum visitors may not see the software behind the train automation, yet I know what drives that automation and I&#8217;m proud of it.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The other aspect of these game projects is that I tend to focus on the wrong thing. I find it more interesting to focus on the engine and the framework than the gameplay or the rendering itself. I&#8217;m not really a game designer, and I&#8217;m definitely not a graphic artist. Eventually implementing the gameplay is the least interesting part of game development so far.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2025-01-06T00:00:47-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Kotlin Web</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2024-12-29_kotlin_web.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2024-12-29_kotlin_web.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&apos;s time to look again at Kotlin for web development. Last time I tried it, a few years ago, it was embryonic and really not suitable for usage. Since then things have changed. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The entry point is Kotlin Multi Platform. It has now a version of Jetpack Compose: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.jetbrains.com/lp/compose-multiplatform/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.jetbrains.com/lp/compose-multiplatform/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The goal is to evaluate that against my use of Dart / Flutter on Firebase GCP.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There&apos;s currently some uncertainty in the future of Flutter. Dart should survive a bit longer as it still seems to be used internally by core projects, however the same can&apos;t be said of Flutter according to the water tank hearsay.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Evaluation criteria:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;How to build a Kotlin MP project.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What can Compose do for the web.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Overall app architecture. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Integration with Firebase authentication.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Integration with Firebase DB.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Ecosystem of 3rd party libraries.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Ease of maintenance over time.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;These are all points where Flutter more or less excels. Dart seemed like a barrier at first, until I understood it as basically &#8220;Java/Kotlin meets Typescript&#8221;. After that, it just made sense and it&apos;s easy to work with and pick it up again when I only tweak a project once a year. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The &#8220;web UI&#8221; aspect of Flutter is familiar -- it&apos;s basically ReactJS, but easier to use, and better documented. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The Flutter doc is very strong, and the IJ plugin is a delight to use. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;background-color:rgb(255, 255, 0)&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The Firebase Flutter library was a bit more annoying. It felt like a side project, with confusingly 2 names or implementations, and the doc was weak. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It sure works, but feels clumsy at times. For example the authentication has all sorts of knobs, yet the generated UI layout is not flexible at all and hard to customize -- clearly designed for mobile and weak on desktop. I have a feeling they almost expect users to ditch the UI and rewrite their own, using only the underlying API. I&apos;m very afraid that&apos;s what I will have to do with Compose.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Anyhow, I need a guinea pig project. I&apos;m thinking the Randall Automation Status web page might be a good candidate.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2024-12-29T00:00:27-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">ESP32 with Arduino-esp32, IDF 5.1.x, and C++20</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2024-11-11_esp32_with_arduino-esp32_idf_7a53fbf9.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2024-11-11_esp32_with_arduino-esp32_idf_7a53fbf9.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Time to try again if this combo finally works.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;My main motivation is to use &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://en.cppreference.com/w/cpp/language/modules&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;C++20 Modules&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;(TL;DR Summary: it works&#8230; and yet it doesn&#8217;t. C++ Modules require a very specific compilation ordering due to cross module dependencies, and the Arduino CLI simply &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;cannot&lt;/span&gt;&lt;span&gt;&amp;nbsp;do that. However with ESP-IDF and CMake, it should be fine.&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2024-11-11T00:00:17-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Rig4j: Addressing Pagination</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2024-11-09_rig4j_addressing_pagination.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2024-11-09_rig4j_addressing_pagination.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There are 2 issues, which keep haunting me:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The &#8220;N+1&#8221; problem with the first page repeating some but not all of the index.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Using the &#8220;next page&#8221; is &#8220;page N&#8221; and &#8220;next page&#8221; after that is &#8220;N-1&#8221; till page 1.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I have reverse ordering. The design is that each blog page has a stable URL with N articles each, so let&#8217;s say 10: page 1 is 1..10, page 2 is 11..20, etc. up to page N that &#8220;fills&#8221; up to N articles so that the last page always has an overlap with the index.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s telling that even I get surprised when I click on the &#8220;Next Page&#8221; link on the index and end up on &#8220;Page 6&#8221; rather than &#8220;Page 1&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Issue 1: Previous / Next Links&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The other issue is the navigation links.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I went from this, which was problematic:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8656; Previous Posts&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Next Posts &#8658; &lt;br&gt;to this, which IMHO has other issues:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8656; Previous Page&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Next Page &#8658; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The problem with &#8220;previous/next post&#8221; is that it&#8217;s ambiguous: &#8220;previous&#8221; is implied to mean &#8220;page N-1&#8221; or &#8220;older in time&#8221;, and &#8220;next&#8221; would mean &#8220;page N+1&#8221; or &#8220;newer in time&#8221;. But because the pages are in reverse chronological order, the &#8220;next&#8221; link actually points to an older-in-time content and page N-1. That&#8217;s the reverse of what one would expect.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I think we can solve that conundrum by renaming the links to be more technically correct:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8656; Newer Page&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Older Page &#8658; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8656; Newer Post&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Older Post &#8658; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That&#8217;s a small trivial change that I think that would be less ambiguous:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Newer / Older only imply time-based ordering, not index-based ordering.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;We&#8217;re not implied what is a &#8220;previous&#8221; or a &#8220;next page&#8221; anymore.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Navigation is &#8220;[page N+1] &amp;lt;&amp;lt; Newer || current is page N || Older &amp;gt;&amp;gt; [page N-1]&#8221;.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; Done. Implemented. Seems very nice.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Also added an &#8220;{{If.IsIndex}}&#8221; command in the template so that we can have &#8220;Newer Post&#8221; in the single blog full page vs &#8220;Newer Posts&#8221; in the index blog pages. This required adding a crude support for nested {{If}}...{{Endif}}.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;background-color:rgb(255, 255, 0)&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;font-weight:700&quot;&gt;Issue 2: The Index/Page Duplication&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Let&#8217;s re-discuss the pagination issue.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The actual concerns are:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The duplication of entries between the index and the &#8220;first&#8221; page.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As pointed out in Rig4k&apos;s [2023-06-28] Pagination Issue, I sometimes re-inject old articles, so these &#8220;stable&#8221; pages are not actually so stable.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One point of view is that the desire to have &#8220;stable&#8221; page numbers is antagonistic to having static pages that &#8220;fill up&#8221; with reverse ordering.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;If we discard the requirement for &#8220;stable&#8221; page numbers, everything can work easily:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Let&#8217;s say we have N..1 articles, and 10 articles per page.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Index has N..(N-9)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Page 1 has (N-10)..(N-19).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Page 2 has (N-20)..(N-29).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;etc&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Navigation is now in order Index &amp;gt; Page 1 &amp;gt; Page 2 &amp;gt; &#8230; Page M.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Yes, it does mean that as the blog grows, page 2, for example, contains entries that perpetually change. If users want permalinks, they should really use links to individual post pages rather than the numbered-index pages.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s telling that even I get surprised when I click on the &#8220;Next Page&#8221; link on the index and end up on &#8220;Page 6&#8221; rather than &#8220;Page 1&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; Done. Implemented. Turned out to be easier to implement than expected. Very satisfied with the result so far.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2024-11-09T00:00:30-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">PiFace on Raspberry Pi 4 with Linux Kernel 6.x</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2024-10-06_piface_on_raspberry_pi_4_wit_a6ef1f7e.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2024-10-06_piface_on_raspberry_pi_4_wit_a6ef1f7e.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pi5 uses the latest version of the &#8220;Raspberry Pi OS&#8221;, which is currently Deban bookworm with a Linux kernel 6.6.51. That breaks some stuff expected by the Piface &#8220;pifacedigitalio&#8221; library.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The first (unexpected) change is that we can&#8217;t use PIP to install packages in the system-wide Python provided by the Debian install. Instead a virtual env is enforced to ensure such packages do not break the entire system.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;There is apparently a flag &#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/questions/75608323/how-do-i-solve-error-externally-managed-environment-every-time-i-use-pip-3&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;pip --break-system-packages&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8221; that works around that check, and interestingly that option is not in the man page.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For a quick test, there&#8217;s some value in using a virtual env folder that I&#8217;m going to trash later.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The next realization is that none of the stuff works anymore:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;text-indent:36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Error &#8220;No such file or directory: &apos;/sys/class/gpio/gpio25/value&#8221; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;On an RPi 1, that means the user is not part of the group &#8220;gpio&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Here it is apparently due to the fact that the GPIO driver has been changed and the &#8220;sysfs&#8221; paths are no longer valid. Fun. The core issue seems to be with GPIO interrupts here: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/piface/pifacecommon/blob/master/pifacecommon/interrupts.py&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/piface/pifacecommon/blob/master/pifacecommon/interrupts.py&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;This describes the (now deprecated) sysfs interface: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.kernel.org/doc/Documentation/gpio/sysfs.txt&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.kernel.org/doc/Documentation/gpio/sysfs.txt&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Translating these:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The old way was to &#8220;echo 25 &amp;gt; /sys/class/gpio/export&#8221;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That would make create/expose &#8220;/sys/class/gpio/gpio25/&#8221; at which points the pseudo files for direction etc could be used.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;However:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Instead now we have /sys/class/gpio/gpiochip512/base (512) + /sys/class/gpio/gpiochip512/ngpio (58) which means this &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;controller&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;handles gpio&#8217;s in the range 512..up to 570 excluded. Then there&#8217;s &#8220;gpiochip570&#8221; which has base=570 and ngpio=8.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;$ gpioinfo | grep 25&#8221; &#8658; this lists all the pins and we can find that &#8220;GPIO25&#8221; is actually #25 (from 0-base) on that gpiochip0 which is actually the giochip512 above.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;512 + 25 = 537&#8230; so that&#8217;s the new &#8220;sysfs&#8221; number for GPIO25.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ echo 537 | sudo tee /sys/class/gpio/export&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; And that makes &#8220;/sys/class/gpio/gpio537/&#8221; appear.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;background-color:rgb(255, 255, 0)&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Thus in essence all we need is to &#8220;translate&#8221; the old GPIO number to the new sysfs numbers. Even though the sysfs interface is deprecated, it seems to still be present and should likely work as usual.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Considering that &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/piface/pifacecommon/blob/master/pifacecommon/interrupts.py#L17&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/piface/pifacecommon/blob/master/pifacecommon/interrupts.py#L17&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;only seems to access one pin (GPIO25) this way and that we don&#8217;t need to be generic, it seems to me like a little fork of that project to rename the number to 537 would be just good enough for my needs. Let&#8217;s try that.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Here&#8217;s my fork with this change:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/ralfoide/pifacecommon&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/ralfoide/pifacecommon&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;and the documentation on how to use it:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;# Create a new Python Virtual Environment&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ python3 -m venv my_piface&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ cd my_piface&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;margin-left:36pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;# Install PiFaceCommon from a locally checked out source&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ git clone https://github.com/ralfoide/pifacecommon.git&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ bin/pip3 install pifacecommon/&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;margin-left:36pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;# Install PiFaceDigitalio from the repository&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ bin/pip3 install pifacedigitalio&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;margin-left:36pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;# Try one of the examples&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ git clone https://github.com/piface/pifacedigitalio.git&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ bin/python3 pifacedigitalio/examples/presslights.py&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2024-10-06T00:00:39-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Analysis: DroidVNC-NG VNC Server</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2024-09-15_analysis_droidvnc-ng_vnc_server.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2024-09-15_analysis_droidvnc-ng_vnc_server.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=net.christianbeier.droidvnc_ng&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://play.google.com/store/apps/details?id=net.christianbeier.droidvnc_ng&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;and&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/bk138/droidVNC-NG&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/bk138/droidVNC-NG&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There are 2 things that interest me here:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This app auto-starts using the Accessibility API. I want to understand that API so that I can use it in TCM, since Android 14 does not support the old &#8220;Boot Receiver&#8221; method.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What are the steps needed to embed a VNC server in an app?&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A use case would be TCM sharing its own view, without access to the entire tablet. Is it worth it to even consider that, or just install DroidVNC-NG on the side?&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;font-weight:700&quot;&gt;Accessibility Service API&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/guide/topics/ui/accessibility/service&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://developer.android.com/guide/topics/ui/accessibility/service&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What it is:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Android 8 (API 26) and above.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A service, declared in the manifest.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It can listen to events, and inspect the view hierarchy.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;Explore by Touch&#8221;: respond to gestures by interacting with screen elements.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/reference/android/accessibilityservice/AccessibilityService#performGlobalAction(int)&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;AccessibilityService#performGlobalAction&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;to perform an action.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/reference/android/accessibilityservice/AccessibilityService#getSystemActions()&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;AccessibilityService#getSystemActions&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;to figure available actions.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It doesn&#8217;t seem like an AccessibilityService could start an app directly per se.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;However it could potentially use &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/reference/android/accessibilityservice/AccessibilityService#GLOBAL_ACTION_HOME&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;GLOBAL_ACTION_HOME&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;to invoke the Home app, then explore the hierarchy and click on the relevant app icon to trigger it. It&#8217;s not clear whether the service can do that on its own; it&#8217;s likely it needs to respond to a user gesture first.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;font-weight:700&quot;&gt;ACTION_BOOT_COMPLETED and RECEIVE_BOOT_COMPLETED&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;background-color:rgb(255, 255, 0)&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The debate is up on whether an app can still &#8220;receive&#8221; &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/reference/android/content/Intent#ACTION_BOOT_COMPLETED&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ACTION_BOOT_COMPLETED&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The documentation in &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/reference/android/Manifest.permission#RECEIVE_BOOT_COMPLETED&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Permission.RECEIVE_BOOT_COMPLETED&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;indicates it is still sent.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The problem is what can be done with it:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/about/versions/15/behavior-changes-15#fgs-boot-completed&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://developer.android.com/about/versions/15/behavior-changes-15#fgs-boot-completed&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;clearly indicates that the action can no longer start some types of foreground services, and also I don&#8217;t see it directly documented as such the problem in RTAC and TCM was that I cannot run a start activity anymore from the boot receiver.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This is what logcat looks like:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;onReceive: intent=Intent { act=android.intent.action.BOOT_COMPLETED flg=0x89000010 cmp=com.alflabs.tcm/.app.BootReceiver (has extras) }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;ActivityTaskManager &amp;nbsp; &amp;nbsp; system_server &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;I &amp;nbsp;START u0 {flg=0x10000000 cmp=com.alflabs.tcm/.activity.MainActivity} from uid 10151&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Background activity start [callingPackage: com.alflabs.tcm; callingUid: 10151; appSwitchState: 2; isCallingUidForeground: false; callingUidHasAnyVisibleWindow: false; callingUidProcState: RECEIVER; isCallingUidPersistentSystemProcess: false; realCallingUid: 10151; isRealCallingUidForeground: false; realCallingUidHasAnyVisibleWindow: false; realCallingUidProcState: RECEIVER; isRealCallingUidPersistentSystemProcess: false; originatingPendingIntent: null; allowBackgroundActivityStart: false; intent: Intent { flg=0x10000000 cmp=com.alflabs.tcm/.activity.MainActivity }; callerApp: ProcessRecord{e668429 4343:com.alflabs.tcm/u0a151}; inVisibleTask: false]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;ActivityTaskManager &amp;nbsp; &amp;nbsp; system_server &amp;nbsp;E &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;font-weight:700&quot;&gt;Abort background activity starts from 10151&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The one in DroidVNC is not different -- they actually just start a background service.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;font-weight:700&quot;&gt;Android Accessibility Service&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/reference/android/accessibilityservice/AccessibilityService&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://developer.android.com/reference/android/accessibilityservice/AccessibilityService&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Requires BIND_ACCESSIBILITY_SERVICE permission.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Create a service with that permission + an intent filter AccessibilityService&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Configure the service using a meta-data &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/reference/android/R.styleable#AccessibilityService&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;AccessibilityService XML&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In DroidVNC case:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;service&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; android:name=&quot;.InputService&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; android:label=&quot;@string/app_name&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;android:permission&lt;/span&gt;&lt;span&gt;=&quot;android.permission.&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;BIND_ACCESSIBILITY_SERVICE&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; android:enabled=&quot;true&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; android:exported=&quot;false&quot;&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;intent-filter&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;action android:name=&quot;android.accessibilityservice.&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;AccessibilityService&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;/&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/intent-filter&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;font-weight:700&quot;&gt;meta-data&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; android:name=&quot;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;android.accessibilityservice&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; android:resource=&quot;@xml/&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;input_service_config&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;/&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/service&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There are 2 versions of xml/input_service_config: one in xml/ and one in xml-v30/.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;xml/:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;lt;!-- accessibilityFeedbackType seems needed pre API 30 so onAccessibilityEvent() triggers,&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; but it seems we don&apos;t need flagRetrieveInteractiveWindows --&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;lt;accessibility-service xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; android:accessibilityEventTypes=&quot;typeViewFocused|typeViewClicked|typeViewSelected&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;android:&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;accessibilityFlags&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;=&quot;flagDefault|flagIncludeNotImportantViews&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; android:notificationTimeout=&quot;30&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;android:description=&quot;@string/input_a11y_service_description&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;android:canPerformGestures=&quot;true&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;android:canRetrieveWindowContent=&quot;true&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;android:accessibilityFeedbackType=&quot;feedbackVisual&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;and xml-v30/:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;lt;!-- On API 30 and later flagRetrieveInteractiveWindows canRetrieveWindowContent&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;are needed for onAccessibilityEvent() to trigger &amp;nbsp;--&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;lt;accessibility-service xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;android:accessibilityEventTypes=&quot;typeViewFocused|typeViewClicked|typeViewSelected&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;android:&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;accessibilityFlags&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;=&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;flagDefault|&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;flagRetrieveInteractiveWindows&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;|flagIncludeNotImportantViews&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; android:notificationTimeout=&quot;30&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;android:description=&quot;@string/input_a11y_service_description&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;android:canPerformGestures=&quot;true&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;android:canTakeScreenshot=&quot;true&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;android:canRetrieveWindowContent=&quot;true&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; /&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Bottom line &#8658; This cannot be used to start the activity.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;TL;DR: DroidVNC uses the Boot Receiver event, which does work in Android 14. The only difference is that it&#8217;s not possible to start a foreground activity. But in their case they don&#8217;t do that, they just run the background service.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2024-09-15T00:00:50-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Kotlin KMP</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2024-08-04_kotlin_kmp.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2024-08-04_kotlin_kmp.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://kotlinlang.org/docs/multiplatform.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://kotlinlang.org/docs/multiplatform.html&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Evaluate this against my needs: &lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Android development&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Web development&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Existing libraries&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rationale: KMP is all about the &#8220;multiplatform&#8221; aspect. I have zero multiplatform projects.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Android development: I don&apos;t do Android/iOS parity, so is there a point over Android Kotlin native? I doubt so.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Web development: This is competing with Flutter. I&apos;m fine with Dart and Flutter. It beats anything React, whilst being mostly the same design. There are good libraries to interact with GCloud, Firebase, and it&apos;s been easy to find 3rd party libraries when needed.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Framework updates are the only thing tedious.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Before starting the Flutter way, I remember trying &#8220;Kotlin for the web&#8221; and that was not good. Was it KMP? Worth another look. Criterias are IDE support, Firebase integration support, framework updates, distrib size.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2024-08-04T00:00:15-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Godot GDSCript Static Typing</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2024-07-09_godot_gdscript_static_typing.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2024-07-09_godot_gdscript_static_typing.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;GDSCript: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/index.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/index.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/static_typing.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/static_typing.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;var damage = 10.5&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; no typing, this is essentially a Variant&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;var damage:= 10.5&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; inferred typing&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;var damage: float = 10.5&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; explicit typing&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;For constants&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;const MOVE_SPEED = 50.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; inferred (= and := are the same)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;const MOVE_SPEED := 50.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; inferred&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;const MOVE_SPEED: float = 50.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; explicit&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;For functions&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;func sum(a: float = 0.0, b: float = 0.0) -&amp;gt; float: &#8230; &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;func sum(a := 0.0, b := 0.0) -&amp;gt; float:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Which types to use&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/static_typing.html#what-can-be-a-type-hint&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/static_typing.html#what-can-be-a-type-hint&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Types can be:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Variant, void (only function return, see below)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Built-in types, global classes, inner classes (gdscript has inner classes?!)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Native classes, enums (gdscript has enums?!)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Constants that are preloaded as class types (see below)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;func blah() -&amp;gt; Variant: &#8230; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; forces the function to return something&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;func blah() -&amp;gt; void: &#8230; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; forces the function to not return a value&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;background-color:rgb(255, 255, 0)&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;A note about class_name&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When used, it &#8220;registers&#8221; the class name globally, and it can be used anywhere.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Without it, one can &#8220;locally&#8221; preload a gd into a constant to create a class name:&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left;text-indent:36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const Rifle = preload(&quot;res://player/weapons/rifle.gd&quot;)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var rifle: Rifle&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;load(&#8220;some.gd&#8221;) happens at runtime and can go only into a &#8220;var&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;preload(&#8220;some.gd&#8221;) happens at compile time (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/gdscript_basics.html#classes-as-resources&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;reference&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;) and goes into a &#8220;const&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Array types&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The syntax is &#8220; var: Array[type]&#8221;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;text-indent:36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;var scores: Array[int] = [10, 20, 30]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;text-indent:36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;var vehicles: Array[Node] = [$Car, $Plane]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;text-indent:36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;var items: Array[Item] = [Item.new()]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Used for for loops, but ignored in array methods and operators (array + array, or array[index]).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In Godot 4.2, an untyped array can be locally typed in a for loop:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for name: String in names: &#8230;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Typed dictionaries are currently not supported&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Type casting and checking&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Example:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;func _on_body_entered(body: PhysicsBody2D) -&amp;gt; void:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var player := body as PlayerController&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# &#8656; null if it cannot cast&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if not player:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The type casting keyword is &#8220;as&#8221; : &#8220;instance as type&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Warning &#8658; Use := to force the var to be typed -- apparently, it would not be overwise.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The destination var would be null if the type cannot be cast.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Warning &#8658; The silent null in case of non cast is allegedly a frequent source of bugs.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A safer way is thus to do an &#8220;is&#8221; check (like I was doing, because I didn&#8217;t know better anyway):&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if not (body is Type): &#8230; skip or pass&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var player: Type = body&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# &#8656; this throws if it cannot cast&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;etc&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(I typically just write &#8220;if not body is Type&#8221; but I notice the example wraps that in parentheses??)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;font-weight:700&quot;&gt;Inner Classes&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Not related to type hinting, just types in general, GDScript does have inner classes:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/gdscript_basics.html#doc-gdscript-basics-inner-classes&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/gdscript_basics.html#doc-gdscript-basics-inner-classes&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;class_name SomeClass&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8230;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;class SomeInnerClass:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var a = 5&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;func someFunc(): &#8230;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;func _init():&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var c = SomeInnerClass.new()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Question: are these static inner classes or are they bound to their parent class?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;font-weight:700&quot;&gt;Class Constructor vs Static Constructor&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;An init constructor can call a parent base class:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;class_name SomeClass&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;func _init(arg):&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super(&#8220;some value&#8221;, arg)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;and have a static initializer:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;static var my_static_var = 1&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;static func _static_init():&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;my_static_var = 2&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Typed Getters and Setters&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Example:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;var seconds: int:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;get:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return milliseconds / 1000&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;set(value):&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;milliseconds = value * 1000&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Note the &#8220;: Type:&#8221; syntax.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;If the getter/setters have functions, there&#8217;s an alternative syntax:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;var my_prop:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;get = get_my_prop, set = set_my_prop&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;var my_prop: get = get_my_prop, set = set_my_prop&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Lambda Functions&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Lambda functions are created inline as such:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var myLambda1 = func (param1, &#8230;paramN):&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;body&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var myLambda2 = func(): print(&#8220;something&#8221;)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;or directly as arguments:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;someobject.connect( func(): print(&#8220;blah&#8221;) )&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The type of a lambda is a Callable &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.godotengine.org/en/stable/classes/class_callable.html#callable&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.godotengine.org/en/stable/classes/class_callable.html#callable&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Note that a Callable is also a type that can call any function by name:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;func something(arg1, arg2) : &#8230;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var myCallable = Callable(self, &#8220;something&#8221;).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;myCallable.call(arg1, arg2)...&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2024-07-09T00:00:52-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Tablet 10&#8217; &#8220;G10&#8221; and RTAC</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2024-06-03_tablet_10_g10_and_rtac.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2024-06-03_tablet_10_g10_and_rtac.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/4bJ0iUw&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/4bJ0iUw&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;is the 10 Inch Android 12 Tablet I&#8217;m using for Enphase Enlighen.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It has a 1280x800 screen.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Even though it&#8217;s a &#8220;production&#8221; one, I can run a debug app from Android Studio.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When enabling developer settings, there&#8217;s a Drawing &amp;gt; &#8220;Plus petite largeur d&apos;&#233;cran&#8221; to control DPI:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;432 dp &#8658; makes all takes larger (simulates smaller screen)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;592 dp &#8658; the default value.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;601 dp &#8658; better for Enphase (better view of the graph)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;740 dp &#8658; makes everything look smaller (simulates larger screen like 1920x1200)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When trying out RTAC, the font for the throttles is way too big. It&#8217;s calibrated for the Chuwi&#8217;s 1920x1200 display. I realize I should customize it by &#8220;screen size&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2024-06-03T00:00:36-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor and Java 1.8 vs Java 11</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2024-04-28_conductor_and_java_1_8_vs_java_11.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2024-04-28_conductor_and_java_1_8_vs_java_11.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A few months ago I updated the Conductor project to new libraries, notably switching to Kotlin DSL 1.9. That made building with Java 11 a requirement.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In turn, that broke the way the Kotlin DSL is loaded under JMRI. I&#8217;m not sure why.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So fine, I reverted the Gradle files to a &#8220;Java 1_8&#8221; compatibility mode, and reverted to the older Kotlin DSL 1.6. This works fine when building the fat JAR, but it fails when trying to run the tests. It works fine when I actually build with a Java 1.8 JDK instead.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;When building with Java 11 and running the tests, I get this cryptic gradle error: &#8220;&lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;Incompatible because this component declares an API of a component and the consumer needed a runtime of a component&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;To be clear, the &#8220;build&#8221; part works. I get the fatJAR just fine. It&#8217;s the testing that fails, and only when doing it from Gradle on the command line. In IJ, I get the same behavior by selecting Conductor &amp;gt; All Tests on the root project.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I should try to replicate it with the gradle --info flag to see if that gives me more details on what is really breaking.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Another limitation is that only LibUtils v2 works with Java 1.8. LibUtils v3 already has Mockito dependencies that require Java 11.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;But that seems all academic anyway. What I really want is to build with a Java 11 compatibility target since at this point even JMRI requires 11.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Then once I get that working, I need to retry with Kotlin DSL 1.9.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One thing for sure is from now on, when updating, I need to account for these scenarios:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Testing does not work the same way under IJ or under command-line Gradle.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Kotlin DSL loading does not work the same in standalone (simulator) vs from JMRI.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2024-04-28T00:00:29-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">C++ unique_ptr</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2024-02-18_c_unique_ptr.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2024-02-18_c_unique_ptr.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s time to update SDB to use more unique_ptr and/or shared_ptrs.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Some simple examples come to mind:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;class SdbModManager {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; std::vector&amp;lt;SdbMod*&amp;gt; _mods;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; std::map&amp;lt;String, SdbMod*&amp;gt; _modsmap;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; std::vector&amp;lt;SdbSensor*&amp;gt; _sensors;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; std::vector&amp;lt;SdbServer*&amp;gt; _servers;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; std::vector&amp;lt;SdbBlock*&amp;gt; _blocks;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;All these should be either unique or shared pointers to clarify the ownership.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There are 2 or 3 aspects to clarify:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;How a new object is created.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;How a ptr is &#8220;moved&#8221; into the vector.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Users of the vector.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For each collection, I have a simple getter that returns the vector as a reference:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;text-indent:36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;const std::vector&amp;lt;SdbServer*&amp;gt;&amp;amp; servers() const &amp;nbsp;{ return _servers; }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;and then I use that in a for/auto loop:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;text-indent:36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;for(auto* s: _manager.servers()) { &#8230; s-&amp;gt;name() &#8230; &amp;nbsp;}&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The other kind of usage is the vector for Events. One goal here is to change that from a struct holding to holding unique ptrs, with the goal that events get automatically released when pulled out of the vector and used.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So first, I need to write down a few things about how to use unique_ptrs correctly.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://en.cppreference.com/w/cpp/memory/unique_ptr&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://en.cppreference.com/w/cpp/memory/unique_ptr&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;#include &amp;lt;memory&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;auto p = std::unique_ptr&amp;lt;Class&amp;gt;(new Class())&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;std::unique_ptr&amp;lt;Class&amp;gt; function() {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; return std::unique_ptr&amp;lt;Class&amp;gt;(new Class());&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;C++ ref mentions creating the instances using std::make_unique(), but apparently I don&#8217;t have that in the ESP IDF projects (N.D.L.R. it should be in ESP IDF 5.x but I&#8217;m using the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;previous&lt;/span&gt;&lt;span&gt;&amp;nbsp;one)&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2024-02-18T00:00:49-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Defold vs Godot</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2024-01-01_defold_vs_godot.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2024-01-01_defold_vs_godot.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Week of 2023-12-24 to 2023-12-31, I wrote &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/labs/#nerdkill&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Nerdkill Defold&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;. Worked well, was easy to use and get something.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One thing that was nice was that I ported the original game, with all the original 8 &#8220;weapons&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Started looking at Nerdkill w/ Godot 4.2, just to compare with Defold. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Not sure there&apos;s a point in concluding that one though.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A new Asqare using Godot 4 for Android would make more sense.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One angle of Nerdkill w/ Godot would be how to create a project that can produce both a web version and a mobile version? More specifically, I&#8217;d want the screen form factor to be different.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Nerdkill &#8220;desktop&#8221; in landscape can use the cartouche with the 8 weapons.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Nerdkill &#8220;mobile&#8221; in portrait can use the 5 weapons.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I could of course change the mobile version to have the same 8-weapons row, but I feel the mobile version looks better that way.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(Alternate idea: consider using 7 weapons on mobile; drop the flag. 2 rows of 5 slots each, the cartouche would occupy the 3 middle bottom slots.)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So one thing I realize I don&#8217;t know if it&#8217;s possible is to configure the window size dynamically, or at least static by export type. Or maybe it could be two projects using the same resources.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://forum.godotengine.org/t/how-to-change-window-size-using-gdscript/2861/3&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://forum.godotengine.org/t/how-to-change-window-size-using-gdscript/2861/3&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;get_window().size = Vector2i(width, height)&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.godotengine.org/en/stable/tutorials/rendering/multiple_resolutions.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.godotengine.org/en/stable/tutorials/rendering/multiple_resolutions.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;the size in Project Settings &amp;gt; Display &amp;gt; Windows&#8230; think of it as the design size&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;to support both landscape and portrait, consider using e.g. 720x720&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;background-color:rgb(255, 255, 0)&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So in my case, I&#8217;d target these resolutions:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Web/desktop mode: 640x480 (4:3 aspect ratio) in stretch &#8220;Viewport/Keep&#8221; mode.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Mobile: 320x640 (18:9 aspect ratio) in stretch &#8220;Viewport/Keep&#8221; mode.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Why this size? &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.gsmarena.com/compare.php3?idPhone1=10386&amp;amp;idPhone2=9256&amp;amp;idPhone3=12771&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Comparing Pixel 5 / 3 / Samsung S24&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pixel 5 is 1080 width with ~19:9 aspect ratio&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pixel 3 is 1080 width with 18:9 aspect ratio&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pixel 5 is 1440 width with ~19:9 aspect ratio&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So we go for an 18:9 ratio (double height) instead of 16:9.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;5 weapons is 320 pixels wide (5 x 64); we rescale the cartouche to that size.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Then we can:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Set the editor to 640x640 which is the common resolution (at least for working).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;We&#8217;ll need a flag somewhere to force the mode for testing/debugging.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Detect the running platform using the &#8220;features&#8221; set by export &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.godotengine.org/en/stable/tutorials/export/feature_tags.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.godotengine.org/en/stable/tutorials/export/feature_tags.html&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;OS.has_feature(name)&#8221;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;android&#8221; (not in web browser, that&#8217;s &#8220;web_android&#8221; or just &#8220;web&#8221;)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There are others but that&#8217;s all we need.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Set the screen resolution based on the OS feature.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Since I have a &#8220;skeleton&#8221; app to play with, let&#8217;s try this out. In the same vein that I discovered that the web export in Godot 4 is&#8230; problematic, I need to try the Android export. That&#8217;s the perfect project to experiment with stuff like that.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Note on Godot 4 Web Export&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One way to remove that &#8220;Service Worker&#8221; incompatibility issue is to use &#8220;coi-serviceworker&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;References:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/gzuidhof/coi-serviceworker&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/gzuidhof/coi-serviceworker&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;(what I used)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.npmjs.com/package/coi-serviceworker&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.npmjs.com/package/coi-serviceworker&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;(as an NPM)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://godotengine.org/asset-library/asset/1818&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://godotengine.org/asset-library/asset/1818&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;(as a Godot Plugin)&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Export the coi-serviceworker.js next to the index.html.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Modify Godot &amp;gt; Export &amp;gt; &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Header Include to add&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;font-weight:700&quot;&gt;&amp;lt;script src=\&quot;./coi-serviceworker.js\&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s not perfect, it seems to sometimes only work when reloading the page?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;TBD: I used the github JS directly, should try with the Godot 4 plugin instead.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2024-01-01T00:00:40-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Defold</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-12-24_defold.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-12-24_defold.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Started going through the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://defold.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Defold&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;tutorials.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I have 3 possible learning projects I could try with this:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Nerdkill.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Could be limited to an HTML5 output, purely as-is with no changes (e.g. no goals), and visible only via the Nerdkill web page.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Asqare.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This would be an Android output. I&#8217;d limit it to one of the 2 engines.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One goal would be to &#8220;finish&#8221; the game by adding more animation / interactions, and power ups, and better scoring.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Cangrejo.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That could be HTML and Android.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;On the Android side, an aspect would be to check the Play Game integration. E.g. leaderboards, achievements, profile management, saves/restores, etc.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One open question, similar to Godot: how does one separate the engine from UI, and how does one provide unit tests for the engine part? There seems to be a clear lack of MVC or MVP design in these tutorials.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-12-24T00:00:07-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Rig4 Index</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-11-21_rig4_index.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-11-21_rig4_index.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Just a quick thought on something that still bugs me with Rig4&#8217;s generated blog:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I write pages with 10 posts per page, from 00NN.html down to 0001.html.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I then write an index with the 10 most recent posts.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The rationale is:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The numbered pages are &#8220;stable&#8221;: older pages (with lower numbers) don&#8217;t change when new posts are added &#8220;normally&#8221;, that is when posts are added for the most recent day.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s exceedingly rare that I&#8217;d add a &#8220;late&#8221; post in the middle.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The last numbered page fills up and, once it reaches 10 posts, becomes stable.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I never link to page numbers, but I do expect them to be indexed by search engines and I&#8217;d like these links to become stable.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The downside:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The index page necessarily duplicates N &amp;lt; 10 posts from the last page.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When clicking the &#8220;next page&#8221; button from the index, we land on the top most page, which basically duplicates the same content, and that&#8217;s a bit confusing.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That last bit is what annoys me. I don&#8217;t have a solution for it.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-11-21T00:00:20-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">C++ &#8220;r-value reference T&amp;&amp;&#8221;</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-10-16_c_r-value_reference_t_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-10-16_c_r-value_reference_t_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Trying to make any sense of the &#8220;T&amp;amp;&amp;amp;&#8221; notation in C++.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;It means &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;&#8220;an r-value reference&#8221;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&#8220;a forwarding reference&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4549151/c-double-address-operator&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://stackoverflow.com/questions/4549151/c-double-address-operator&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/questions/5481539/what-does-t-double-ampersand-mean-in-c11&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://stackoverflow.com/questions/5481539/what-does-t-double-ampersand-mean-in-c11&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;(*)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s referenced in the C++11 &#8220;range-based for loop&#8221; loop construct:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://en.cppreference.com/w/cpp/language/range-for&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://en.cppreference.com/w/cpp/language/range-for&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;for (auto&amp;amp;&amp;amp; [first, second] : mymap) { &#8230; }&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8592; WAT?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The summary of the SO (*) above is:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;rvalue is the result of an expression or any temporary (e.g. type conversion).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Typically, it would be used as a &#8220;copy&#8221; using a &#8220;const T&amp;amp;&#8221; reference and becomes an lvalue. E.g. the user cannot modify the value (since it becomes const).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;T&amp;amp;&amp;amp; is used as a receiving argument type in a function.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;An argument of &#8220;T&amp;amp;&amp;amp;&#8221; preserves (forwards) the &#8220;rvalue&#8221; property and passes it down as-is. The user can modify the value (since it is not const).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When used in a template, &#8220;T&amp;amp;&amp;amp;&#8221; becomes either &#8220;T&amp;amp;&#8221; (for an lvalue), or &#8220;T&#8221; (for an rvalue / temporary).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As such it&#8217;s named a &#8220;forwarding reference&#8221; and is associated with std::forward&amp;lt;T&amp;gt;.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;About std::forward&amp;lt;&amp;gt;, it&#8217;s equivalent to performing a static cast of &#8220;T&amp;amp;&amp;amp;&#8221; to preserve its rvalue:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3582001/what-are-the-main-purposes-of-stdforward-and-which-problems-does-it-solve/3582313#3582313&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://stackoverflow.com/questions/3582001/what-are-the-main-purposes-of-stdforward-and-which-problems-does-it-solve/3582313#3582313&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Coming back to that &#8220;range-based for loop&#8221; construct:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://en.cppreference.com/w/cpp/language/range-for&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://en.cppreference.com/w/cpp/language/range-for&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;for (auto x : array) {}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8594; access by value (I guess &#8220;copy&#8221;)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;for (const T&amp;amp; x : array) {}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8594; access by const reference&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;for (auto&amp;amp;&amp;amp; x : array) {}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8594; access by &#8220;forwarding reference&#8221; (not const)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;are all possible.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-10-16T00:00:36-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">CMake</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-10-06_cmake.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-10-06_cmake.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://cmake.org/cmake/help/latest/guide/tutorial/index.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://cmake.org/cmake/help/latest/guide/tutorial/index.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In a file called CMakeLists.txt:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;cmake_minimum_required(version) &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;project(name)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;set(CMAKE_CXX_STANDARD 11)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;set(CMAKE_CXX_STANDARD_REQUIRED True)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;target_include_directories(ProjectName PUBLIC list_of_dirs)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;for an exe, the minimum is add_executable(Name file_list)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;for a library, add_library(Name file_list)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-10-06T00:00:21-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Game Engines to Look at</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-09-20_game_engines_to_look_at.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-09-20_game_engines_to_look_at.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Game engines to look at:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;2D: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://defold.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://defold.com/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Defold seems like an interesting choice to explore. It&#8217;s the King (candy crush) engine. I don&#8217;t think it&#8217;s truly open source. Programming is done in Lua.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-09-20T00:00:19-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Monitor Raspberry Pi Temperature</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-09-08_monitor_raspberry_pi_temperature.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-09-08_monitor_raspberry_pi_temperature.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Over here on the servers, I know have a script that monitors the Raspberry Pi (1 or 4) temperature and prints it when it rises:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;CA=0&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;CI=90000&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;while true; do&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; C=$(&amp;lt;/sys/class/thermal/thermal_zone0/temp)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; if [[ &quot;$C&quot; -gt &quot;$CA&quot; ]]; then CA=&quot;$C&quot;; fi&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; if [[ &quot;$C&quot; -lt &quot;$CI&quot; ]]; then CI=&quot;$C&quot;; fi&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; D=$(date)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; T=$(python3 -c &quot;print(&apos;min: %f C | curr: %f C | max: %f C&apos; % ($CI/1000., $C/1000., $CA/1000.))&quot;)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; echo &quot;$D : $T&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; sleep 5s&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;done&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Note this is not a service, just a basic shell/python script to run ad-hoc.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The RPi 4 is currently around ~50 C, with no fan.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;According to sources, it can go up to 80-85 C before it starts throttling to reduce heat.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-09-08T00:00:48-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Thought of the Day: DWM on Automation Computers?</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-07-29_thought_of_the_day_dwm_on_au_95af5628.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-07-29_thought_of_the_day_dwm_on_au_95af5628.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;So first, let&#8217;s make this clear: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dwm.suckless.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;DWM&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;is both terribly good, and terribly bad.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Excellent small footprint and minimal functionality.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Keyboard only usage is both excellent yet terrible. I generally don&#8217;t remember the shortcuts except for the 3 main ones: Alt-S (new shell), Alt-1..9 to select a workspace, and Shift-Alt-1...9 to move a window to a workspace (they call them &#8220;tags&#8221;).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A lot of programs aren&#8217;t designed for the &#8220;full screen / forced tiling&#8221; approach and require some kind of floating windows to be usable.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;DWM has basically one &#8220;window model&#8221;: a main shell, and a stack of secondary windows opening on the right of it. It&#8217;s really designed to have one shell per workspace.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;My window manager of choice is &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.lxde.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;LXDE&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;. It&#8217;s very light in resources, and in features, yet it&#8217;s a &#8220;proper&#8221; window manager. I could do without the session manager aspect.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As a thought exercise, how would I use Consist with DWM?&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I have 3 shells that start. Ideally they could be tiled on space 1.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;JMRI needs 3 windows: JMRI main, WiThrottle, and Conductor. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;JMRI main + WiThrottles could be tiled on space 2.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Conductor should be tiled on its own space. Is that possible, or does it need to be with the rest of the app?&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When debugging, I like to have Conductor + the JMRI shell window together.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When resetting a failed automation, I like to have Conductor + 1 or 2 new JMRI Throttle windows together.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That&#8217;s the part where DWM starts to suck. It&#8217;s not designed for this kind of functionality.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-07-29T00:00:51-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Updates: GA4, Rig4k / Rig4j; What&#8217;s Next?</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-07-03_updates_ga4_rig4k_rig4j_what_s_next_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-07-03_updates_ga4_rig4k_rig4j_what_s_next_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;On the GA4 front&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;, I now have some basic dashboards working for Randall:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left;text-decoration:line-through&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;text-decoration:none&quot;&gt;Alfray blog&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DONE&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left;text-decoration:line-through&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;text-decoration:none&quot;&gt;GGMRC&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DONE&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left;text-decoration:line-through&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;text-decoration:none&quot;&gt;Conductor 2&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DONE&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left;text-decoration:line-through&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;text-decoration:none&quot;&gt;Server Pings&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DONE&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left;text-decoration:line-through&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;text-decoration:none&quot;&gt;Inkblot3 (flutter)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Already GA4&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RTAC (tablet)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TBD&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left;text-decoration:line-through&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;text-decoration:none&quot;&gt;Vision&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DONE&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Other web pages?&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TBD&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;On the Rig4 front&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rig4k is slowly starting. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Have some good skeleton around.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Gdoc separation/caching is not as clean as desired.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Starting to focus on the html-to-izu.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rig4j:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Found a way to re-inject the missing CSS styles, so this temporarily fixes the web site&apos;s lack of bold / italics / tables.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So basically one more little bandaid keeps this working for now.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-07-03T00:00:06-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">SPA Web Alternatives: Flutter / ReactJS vs Smalltalk Seaside / AIDAweb</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-06-29_spa_web_alternatives_flutter_0382f95a.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-06-29_spa_web_alternatives_flutter_0382f95a.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Something to try:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Aida/Web: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.aidaweb.si/tutorial&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.aidaweb.si/tutorial&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Seaside: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.seaside.st/documentation/tutorials&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.seaside.st/documentation/tutorials&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Book: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://book.seaside.st/book&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://book.seaside.st/book&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pharo-by-example is a hijacked web site, just ignore it.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The critical question is why bother? Flutter / React already offer well-rounded frameworks, and Smalltalk is just yet-another-esoteric language. It&#8217;s on the same level as JS/TS/Dart when it comes to &#8220;stuff I only use occasionally&#8221;, with the typical issue of feeling mostly write-only.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;On that part, I ended up actually enjoying Dart as it seemed like a suitable compromise between Java, JS, and TS.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Flutter vs ReactJS:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pro of Flutter = dev in IJ&#8230; The integration is excellent.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Cons of Flutter = dev in IJ&#8230; Requires IJ to edit a project.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Same goes for ReactJS. The VS Code integration is good, but lacks an IJ-level project management.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;VS Code is good for short-sided projects (e.g. Wazz), whereas IJ is better for large project organization.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-06-29T00:00:12-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Web Stats Alternatives - MQTT?</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-06-26_web_stats_alternatives_-_mqtt_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-06-26_web_stats_alternatives_-_mqtt_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The Looker+GA4 behavior is currently limiting. It also exposes the typical issue when relying on external &#8220;free&#8221; services. Are there ways I can bring my stats in-house?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;2 aspects come to mind:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Sending the event data&#8230; &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;With the usual caveat of outage reliability, the data would be better hosted on my own server.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;An option would be to use MQTT to transport that data around.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Viewing the data&#8230;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Can I write my own Looker connector pulling data from my server?&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Are there other MQTT-based or similar web-based stats pages I can reuse?&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&#8217;m not particularly interested in writing my own graphs, even though I&#8217;ve certainly done that.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There are Linux packages that can pre-render graphs and I can expose them via ssl.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Can MQTT be used as either a transport mechanism, storage, or a data source?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-06-26T00:00:44-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">BitBucket SSH Host Key Migration</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-06-17_bitbucket_ssh_host_key_migration.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-06-17_bitbucket_ssh_host_key_migration.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;What: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://bitbucket.org/blog/ssh-host-key-changes&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://bitbucket.org/blog/ssh-host-key-changes&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Verify by running this command on each host:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ ssh git@bitbucket.org host_key_info&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;gt; You are using host key with fingerprint:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;gt; ssh-ed25519 SHA256:ybgmFkzwOSotHTHLJgHO0QN8L0xErw6vd0VhFA9m3SM&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;gt; ecdsa-sha2-nistp256 SHA256:FC73VB6C4OQLSCrjEayhMp9UMxS97caD/Yyi2bhW/J0&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;ECDA or ED25519 are GOOD.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Got &#8220;Permission denied&#8221;?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://confluence.atlassian.com/bbkb/permission-denied-publickey-302811860.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://confluence.atlassian.com/bbkb/permission-denied-publickey-302811860.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; This should happen for any machine where I did not load an SSH Key in my Bitbucket account. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; If I have an ssh-agent key, load it first.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; If I don&#8217;t expect to have ssh auth, then it&#8217;s fine. In this case, grep bitbucket ~/.ssh/known_hosts &#8658; vim ~/.ssh/known_hosts and remove any reference to bitbucket).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;To accept the new host on a machine that needs git access:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ ssh-keygen -R bitbucket.org &amp;amp;&amp;amp; curl https://bitbucket.org/site/ssh &amp;gt;&amp;gt; ~/.ssh/known_hosts&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;then rerun the host_key_info cmd, access the key with &#8220;yes&#8221;, and repeat again to remove any duplicated host entry.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-06-17T00:00:42-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Brace Yourself, Google Analytics 4 is Coming</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-06-10_brace_yourself_google_analyt_941602d6.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-06-10_brace_yourself_google_analyt_941602d6.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;No choice, GA is giving me more and more warnings about the incoming GA4 migration.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Tasks:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Build an exhaustive list of projects actually exporting to GA4.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Find how to send GA4 events from my bash scripts.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Taking a reverse approach to that, the Stats Pages I look daily are:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The Randall Camera Access stats. Data comes from wazz.js.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; This seems like a good contender to learn the &#8220;official&#8221; JS API.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The Train Activation stats generated by Conductor.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This uses ad-hoc URL pings.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;And also uses bash-based wget pings.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The Servers Ping stats. &amp;nbsp;This uses bash-based wget pings.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; This seems like the best candidate to look for a wget alternative.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The Inkblot Access stats. This uses the official Flutter library.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Migration guide: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://support.google.com/analytics/answer/10759417&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://support.google.com/analytics/answer/10759417&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Universal Analytics (UA) is the old one.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Setup Assistant: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://support.google.com/analytics/answer/9744165&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://support.google.com/analytics/answer/9744165&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Account Structure: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://support.google.com/analytics/answer/9679158&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://support.google.com/analytics/answer/9679158&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;UA structure: Account &#8658; N * Properties (e.g. website) &#8658; M * Views.&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The Property number starts with UA-&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;GA4 Structure: Account &#8658; N * Properties (e.g. website) &#8658; Data Streams.&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The property number is a long number.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Looks like GA4 numbers have already been created for each one.&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Events are changing: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://support.google.com/analytics/answer/11091422&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://support.google.com/analytics/answer/11091422&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;UA events have events category &amp;gt; event action &amp;gt; event label.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;GA4 events are firebase events: event name + event parameters.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;UA event action becomes the new GA4 event name&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;UA event category becomes a GA4 event custom parameter&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;UA event label becomes a GA4 event custom parameter&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-06-10T00:00:38-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Rig4j Needs a Rewrite</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-06-09_rig4j_needs_a_rewrite.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-06-09_rig4j_needs_a_rewrite.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Back there on the RIG 4 Spec [Idea] project page, I have a different angle for a rewrite of Rig4.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The summary is that the current version of Rig4j is still running the &#8220;early experiment&#8221;. Code base was mostly &#8220;feasibility&#8221;. When exploring the Rust-based Rig4r, I realized it would be better structured by separating the gdoc functionality from the &#8220;rig&#8221; generator functionality: one tool does the gdoc fetching, and then Rig works on purely local files.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The new angle is that the gdoc fetching should actually generate izu files, by parsing the gdoc html exports and rewriting them as izu/markdown text files. There would be some limitations on the format. Not all the formatting would make it through.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This would also involve looking at the format I use in the train blog, making an exhaustive list of features used, and try to match some level of parity. Luckily I don&#8217;t use too much stuff, but tables seem like they could be tricky, and I&#8217;d also want to support the linkable TOCs and their existing hrefs. Some things like usage of titles in article pages did not exist in izu.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I may also want to consider dropping my izu format, and focus on &#8220;official&#8221; markdown.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I can probably fairly simply translate old izu pages to markdown if such support is needed.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;OTOH it would solve one of the current problems, namely that the page format is dictated by the gdoc html export, and that has been known to change substantially over the time. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The end goal is to not have such a strong dependence on gdoc. That makes gdoc merely a convenience to more easily write the izu files, and then the izu files become the &#8220;source of truth&#8221; that I need to backup.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-06-09T00:00:05-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Rig4j: &quot;This file is too large to be exported.&quot;</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-06-07_rig4j_this_file_is_too_large_389f9203.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-06-07_rig4j_this_file_is_too_large_389f9203.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This is new:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;java.lang.RuntimeException: com.google.api.client.googleapis.json.GoogleJsonResponseException: 403 Forbidden&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &quot;code&quot; : 403,&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &quot;errors&quot; : [ {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;domain&quot; : &quot;global&quot;,&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;message&quot; : &quot;This file is too large to be exported.&quot;,&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;reason&quot; : &quot;exportSizeLimitExceeded&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; } ],&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &quot;message&quot; : &quot;This file is too large to be exported.&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; at com.alflabs.rig4.gdoc.GDocHelper.lambda$getGDocAsync$0(GDocHelper.java:491)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; at com.alflabs.rig4.struct.GDocEntity.getContent(GDocEntity.java:54)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; at com.alflabs.rig4.blog.BlogGenerator.parseSource(BlogGenerator.java:135)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; at com.alflabs.rig4.blog.BlogGenerator.parseSources(BlogGenerator.java:120)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; at com.alflabs.rig4.blog.BlogGenerator.processEntries(BlogGenerator.java:69)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; at com.alflabs.rig4.exp.Exp.start(Exp.java:60)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; at com.alflabs.rig4.EntryPoint.main(EntryPoint.java:53)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As usual, that makes me reconsider my dependency on the GDrive API.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-06-07T00:00:00-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">DaVinci Fusion Fuse</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-06-04_davinci_fusion_fuse.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-06-04_davinci_fusion_fuse.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Here&#8217;s the end result of the Fuse to perform image removal on my train videos:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://bitbucket.org/alf-labs/lightworks/src/master/fusion/fuses/RalfCamCarRodRemoval.fuse&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://bitbucket.org/alf-labs/lightworks/src/master/fusion/fuses/RalfCamCarRodRemoval.fuse&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;and here&#8217;s an example of the result:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/2023-06-04_davinci_resolve_plugin_for_t_4126bb12.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.alfray.com/trains/blog/train/2023-06-04_davinci_resolve_plugin_for_t_4126bb12.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:228.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:796.80px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_673fbb030272c01233bd80c03a06b5c0324fce61192038e863fd5a48ce27f759i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-06-04T00:00:11-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Lua Optimization Tips</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-05-21_lua_optimization_tips.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-05-21_lua_optimization_tips.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.lua.org/gems/sample.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.lua.org/gems/sample.pdf&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Locals are faster to access than globals. Copy globals to locals especially for loop access.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Tables are composed of an array (storing integer keys from 1..n) and a hash map for any other keys.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-05-21T00:00:54-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">DaVinci Fusion Plugin</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-05-17_davinci_fusion_plugin.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-05-17_davinci_fusion_plugin.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;How to write a Fusion video effect plugin?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;This &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://video.stackexchange.com/questions/30864/looking-to-write-a-davinci-resolve-plugin&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SO answer&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;leads to &#8220;we suck less&#8221; (aka WSL), and &#8220;eyeon&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;That last name &#8220;eyeon&#8221; is the company which &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.premiumbeat.com/blog/why-you-should-care-about-blackmagics-acquisition-of-eyeon-fusion/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;originally created Fusion before being acquired&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;by BlackMagic to integrate it in DaVinci Resolve.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.steakunderwater.com/wesuckless/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.steakunderwater.com/wesuckless/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;is the place to find a community behind plugins.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;API should be available via Help &amp;gt; Documentation &amp;gt; Developer. There&#8217;s a PDF IIRC.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;An older version (Fusion 8, 2016) can be found here: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://documents.blackmagicdesign.com/UserManuals/Fusion8_Scripting_Guide.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://documents.blackmagicdesign.com/UserManuals/Fusion8_Scripting_Guide.pdf&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Scripting:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;FusionScript&#8221;, to be used either in Lua or Python.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Uses LuaJIT for performance. Lua is the preferred choice.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Choice of Python 2 or 3.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Fuses:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;OpenCL for tools &amp;amp; filters&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Scripts:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Composition scripts (a &#8220;composition&#8221; is a full Fusion document)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Tool scripts (for a &#8220;single tool&#8221; aka a single node?)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Bin scripts (as in &#8220;media bin&#8221;)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Utility scripts (act on Fusion itself)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Script libraries (scriptlib, used by other scripts)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;External command-line script which can act on a composition.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Event scripts.&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Composition callbacks (load, save, render, etc)&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Button callbacks (for UI)&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;InTool scripts (executed when evaluating each frame)&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Fuses has its own SDK documentation:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://documents.blackmagicdesign.com/UserManuals/Fusion_Fuse_SDK.pdf?_v=1658361162000&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://documents.blackmagicdesign.com/UserManuals/Fusion_Fuse_SDK.pdf?_v=1658361162000&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Locally as &#8220;Fusion Fuse Manual.pdf&#8221; in C:\ProgramData\Blackmagic Design\DaVinci Resolve\Support\Developer\Fusion Fuse&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Plugin types: &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Image Processing, with inspector and onscreen crosshair.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Metadata processing.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Modified plugins (affects number inputs)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;View LUT plugins.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Using Lua with LuaJIT.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What I&#8217;d use is an Image Processing &#8220;Tool&#8221; plugin.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Plugin has code to register its name.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Code to register inputs (UI controls) but also Image input/output.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Callback NotifyChanged when UI controls change (e.g. to adjust UI).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Callback Process to process an image and compute an output.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Native methods that apply to the entire image:&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;ColorMatrixFull (RGBA offset, scale, etc)&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RGBA Color Gain, Gamma, Saturate.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Color Space conversion (RGB, HSV, etc)&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Clear/Fill&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Channel operations on 1 image with + - * / and RGB coefficients.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Channel operations on 2 images with RGB fg vs bg: Copy, Add, Multiply, Subtract, Divide, Threshold, And, Or, Xor, Negative, Difference.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Transform or Merge (center, pivot, size, angle, edge wrapping)&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Crop, Resize&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Blur (also for Glow)&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pixel Processing : create functions that take pixels from 2 images and return the resulting pixel. &lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Functions are &#8220;pre declared&#8221; and stored in an array, then used in Process.&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Processing has 8 channels: 4x RGBA and 4x Bg-RGBA (I guess for the background?)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Shapes: created using MoveTo/LineTo + matrix operations then filled and merged with image.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Text overlays: font management, then draw as shapes.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Per-pixel processing using for y/for x/getPixel/setPixel.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;DCTL (DaVinci Color Transform Language) &amp;nbsp;is a shader-style processing.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;C-like syntax, operates om x,y individual pixels.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Converted to GPU as needed.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Transform DCTL to change color data in one image.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Transition DCTL to compute transition between two images.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;OpenFX&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;C/C++ shader with VS.Net SLN project.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Some example of Fuses here:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.steakunderwater.com/VFXPedia/96.0.243.189/index8be6.html?title=Eyeon:Script/Reference/Applications/Fuse/Example_Fuses#Example_Fuses&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.steakunderwater.com/VFXPedia/96.0.243.189/index8be6.html?title=Eyeon:Script/Reference/Applications/Fuse/Example_Fuses#Example_Fuses&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-05-17T00:00:45-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Video Camera Object Removal</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-05-16_video_camera_object_removal.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-05-16_video_camera_object_removal.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Filming trains with the video car pulled by my &#8220;extended&#8221; coupler leaves that coupler visible on screen. It&#8217;s a tad distracting.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One question I had is: Can I write a Fusion plugin that would &#8220;erase&#8221; this object?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Let&#8217;s look at the obvious part: how would I erase this object?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;We can split the problem in two: how to detect the object, and how to erase it.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;First, the &#8220;coupler&#8221; appears as a gray-ish rectangle. It always touches the bottom edge of the screen and extends upwards. It&#8217;s roughly centered horizontally, but can move left and right as the train takes on curves. If we had to modify a movie frame by frame, one optimization would be on a given frame the coupler will very close to its position in the previous frame.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The coupler is more or less a vertical rectangle.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;If we were operating as a plugin in Fusion, ideally we could use a 2d ui crosshair to define its initial position, but we would also have to deal with the fact it moves slowly from frame to frame, and tracking would be ideal.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;If we were operating as command-line script without UI, the initial position could be given as parameters.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Its width is constant. It tapers as it gets farther from the camera, but overall we could parametrize the max/min width we are looking for -- e.g. what looks like a vertical gray box of W pixels wide and at least H pixels height starting from the bottom of the screen, roughly centered?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;If we have a UI giving us a starting pixel position, we can use a basic flood algorithm to detect the boundaries.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When looking at a still image capture, the coupler edges are naturally fuzzy. We cannot expect a stark transition between the coupler and its background. However we can parametrize this, as typically the fuzzy border will have a predictable width.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Although the coupler is mostly of the same gray color, that color can vary depending on illumination, not to mention tunnels, and there&#8217;s bound to be shade variation across the length of the object.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One option is to look at the image in HSL -- the coupler being gray should not have a hue.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Assuming we can detect the coupler, how do we &#8220;erase&#8221; it?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One suggestion is to treat the coupler as a mask of width W:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Shift the image horizontally left and right by W pixels.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Merge this over the coupler using an averaging algorithm.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Using the luminance as the coefficient to merge it.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Assuming this works for one image, the obvious concern is how will it look once applied to a 30 fps movie? We may need to do some temporal averaging -- that is apply a percentage of the last frame to smooth the output.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Implementation wise, why kind of framework would be used?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One option is to make a standalone processing app, either in Java/Kotlin/C++, with its own movie decoding + UI rendering. The input movie decoding would take advantage of either ffmpeg or vlc as libraries or avcodec on linux. Similarly this can write a movie result on the fly.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In this mode, we would convert a raw footage upfront -- cam files ar 10 minutes long.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The other option is to use a Fusion plugin as the framework -- in this case Fusion provides the input and the output. Debugging seems potentially more challenging this way. The Fuse SDK doc indicates the Lua code can be reloaded &#8220;live&#8221; to ease debugging. This has the side benefit that we can judge performance immediately, and that we can take advantage of the fuse UI widgets to e.g. select the initial position to look at or to select some parameters (width, blending, etc).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In this mode, we could apply the tool to only the segments being rendered in the final production rather than on the entire raw footage.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One thing I don&#8217;t see in the Fuse SDK is a way for a &#8220;tool&#8221; to incrementally operate across frames in an animation. We want to do some basic tracking of the coupler position, and it would be nice if it could be automated. The other option is to simply animate the initial position, and/or to use a planar tracker to define it.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-05-16T00:00:53-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">MQTT</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-02-24_mqtt.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-02-24_mqtt.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Just leaving this here to explore it later: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/protocols/mqtt.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/protocols/mqtt.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Guides:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.adafruit.com/alltheiot-protocols/mqtt&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://learn.adafruit.com/alltheiot-protocols/mqtt&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.arduino.cc/tutorials/uno-wifi-rev2/uno-wifi-r2-mqtt-device-to-device&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.arduino.cc/tutorials/uno-wifi-rev2/uno-wifi-r2-mqtt-device-to-device&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Spec for MQTT v5:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.oasis-open.org/mqtt/mqtt/v5.0/mqtt-v5.0.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.oasis-open.org/mqtt/mqtt/v5.0/mqtt-v5.0.html&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This would be useful for SDB: make it an MQTT client.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;But potentially that can be useful for other projects.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;For example, my current layout stats from Randall are sent via very &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;hackish&lt;/span&gt;&lt;span&gt;&amp;nbsp;REST post (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;hackish in the sense it&#8217;s received via a BASH CGI&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;:-p &#8658; not anymore, it&#8217;s a CGI py), and it may be better served by using this protocol: e.g. Conductor sending events to home via broker/gateways, and I&apos;d want to better understand the possibilities.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;From the adafruit guide above:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;An &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;MQTT broker&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;is a &#8220;stable&#8221; node to which (potentially ephemeral) MQTT clients connect. It&#8217;s basically the &#8220;local server&#8221; of a bunch of clients.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Brokers typically have their own local database but they do not have to.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;An &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;MQTT client&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;is any end-point sending or receiving messages.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Publish&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;: A client sends a message to a broker.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Subscribe&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;: A client receives messages from a broker.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A client keeps an open connection to a broker. The connection open/close is lightweight enough that it can be beneficial to open/close it when needed.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;MQTT messages have a fairly lightweight header, designed for lightweight payloads.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The protocol is mostly transport-agnostic.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The spec above recommends TCP, TLS, or WebSockets, and recommends avoiding UDP due to lack of ordering guarantee.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;QOS: 0=at most once delivery, 1=at least once delivery, 2=exactly once delivery.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Messages are sent to &#8220;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;topics&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8221;: a hierarchical string e.g. /root/part1/&#8230;/partn.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Concrete example: /building1/sensors/floor1/division2/temperature.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Subscription can be done using wildcards: + for any given part, and # for &#8220;anything till the end&#8221;.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Topics should be carefully defined upfront, as changing the schema later is not trivial especially with regards to wildcard subscriptions.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;An &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;MQTT gateway&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;is a client/bridge translating data from sensors to MQTT messages (example: sensor &#8660; RF/BLE &#8660; gateway &#8660; MQTT messages &#8660; &amp;nbsp;broker).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;MQTT Libraries&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Comprehensive list of brokers/clients here &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://mqtt.org/software/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://mqtt.org/software/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; Note that most of the time I want a &#8220;client&#8221; and not a &#8220;broker&#8221; (server).&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;ESP-IDF has &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/protocols/mqtt.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ESP-MQTT&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/arduino-libraries/ArduinoMqttClient&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ArduinoMqttClient&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.eclipse.org/paho/index.php?page=clients/java/index.php&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Eclipse Paho MQTT Client&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;Java library.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://mvnrepository.com/artifact/org.eclipse.paho/org.eclipse.paho.mqttv5.client/1.2.5&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://mvnrepository.com/artifact/org.eclipse.paho/org.eclipse.paho.mqttv5.client/1.2.5&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&#8658; Last updated in 2020, seems dead in Java?&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://mosquitto.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Eclipse Mosquitto&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;open source broker: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://mosquitto.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://mosquitto.org/&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Part of Debian or RPi packages. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://mosquitto.org/download/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://mosquitto.org/download/&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Mosquitto public &#8220;test&#8221; broker: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://test.mosquitto.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://test.mosquitto.org/&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Moquette : Java MQTT &#8220;lightweight&#8221; broker &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/moquette-io/moquette&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/moquette-io/moquette&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Note that most MQTT brokers try to be &#8220;comprehensive&#8221; with persistence support built on top of some database; there are very very few light Java libraries brokers.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Apache ActiveMQ: a broker and a client.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://activemq.apache.org/version-5-getting-started.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://activemq.apache.org/version-5-getting-started.html&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://mvnrepository.com/artifact/org.apache.activemq/activemq-client&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://mvnrepository.com/artifact/org.apache.activemq/activemq-client&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;HiveMQ MQTT Client - &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/hivemq/hivemq-mqtt-client&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/hivemq/hivemq-mqtt-client&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That looks fairly used, recent, instantly documented in the README with no need to go fishing around.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://mvnrepository.com/artifact/com.hivemq/hivemq-mqtt-client&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://mvnrepository.com/artifact/com.hivemq/hivemq-mqtt-client&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-02-24T00:00:24-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">DIY ESP32 Mount/Hardware Design</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-01-31_diy_esp32_mount_hardware_design.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-01-31_diy_esp32_mount_hardware_design.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Some interesting things here:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://forum.mrhmag.com/post/an-operating-steam-throttle-you-can-customize-12548356?&amp;amp;trail=25&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://forum.mrhmag.com/post/an-operating-steam-throttle-you-can-customize-12548356?&amp;amp;trail=25&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I don&#8217;t care about the &#8220;steam throttle&#8221; part. What I do care is this is using:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A 3d printed case.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;An ESP32 and other arduino-like accessories, such as OLED screens, buttons, etc.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I realize I can use a principle like that for my own contraptions. For example for the ToF sensor for the Software Defined Blocks [research] project, I was wondering whether I should solder pin headers on the sensors and the ESP32 to use. The headers make it easier to prototype, but then they expose contacts that I may not want exposed during the real application -- and once soldered, the headers are impossible to remove neatly.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So here&#8217;s what I could be doing:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;3d print my own case / support.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In there, have holes for the pin headers.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This would support the part in the direction I want.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Just solder connections on the back on the appropriate pins.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Or use Dupont connectors.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The soldering can also help hold the part in place.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s still possible to unsolder and remove the part.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The other option I had used before (for the motion sensor at Randall) was to use Dupont connectors for all the usable pins. That can also be worked in the 3d print to make room for only what I need, helping connect to the right pins.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Finally, for something like Software Defined Blocks [research], I&#8217;d want the sensor encased in a little box mimicking a railroad &#8220;trackside equipment house&#8221;, whatever that thing is called. It can just be a 3d printed rectangular box with a slanted root, painted in gray. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.hobbylinc.com/blms-modern-medium-electrical-box-large-ho-scale-model-railroad-trackside-accessory-4312&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Example 1&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;. These are called &#8220;electrical cabinet&#8221;, or &#8220;equipment house&#8221;, &#8220;relay house&#8221;, etc.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-01-31T00:00:23-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">VSCode and Terminal and Cygwin</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-01-29_vscode_and_terminal_and_cygwin.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-01-29_vscode_and_terminal_and_cygwin.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;VSCode &amp;gt; Terminal &amp;gt; use &#8220;v&#8221; icon &amp;gt; Terminal Settings&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;or&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;VSCode &amp;gt; File &amp;gt; Preferences &amp;gt; Settings (Ctrl + ,)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Scroll to Features &amp;gt; Terminal &amp;gt; Integrated &amp;gt; Automation Profile: Windows (or Linux)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;Edit in settings.json&#8221; &#8594; creates C:\Users\%USER%\AppData\Roaming\Code\User\settings.json&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In the JSON section:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;terminal.integrated.shell.windows&quot;: &quot;C:\\Windows\\Sysnative\\WindowsPowerShell\\v1.0\\powershell.exe&quot;,&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;replace by:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;terminal.integrated.shell.windows&quot;: &quot;C:\\cygwin64\\bin\\bash.exe&quot;,&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;terminal.integrated.shellArgs.windows&quot;: [&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;--login&quot;,&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;-i&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; ],&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;terminal.integrated.env.windows&quot;: {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;CHERE_INVOKING&quot;: &quot;1&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; },&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Try it with Ctrl-` (or Terminal &amp;gt; New)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Also copy that in the workspace profile rather than the user-wide profile.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Note that this method is deprecated as now there are &#8220;terminal profiles&#8221; but it still works.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-01-29T00:00:43-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">ESP32 Variants Available</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-01-29_esp32_variants_available.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-01-29_esp32_variants_available.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I have 3 types of ESP32 hardware available around:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;HelTex WIFI_Kit_32&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;, an ESP32 with Wifi/BT and an OLED screen (I2C).&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;IDF config: CPU freq 240 MHz, XTAL 26 MHz, SPI flash 4 MB (no RAM), internal SRAM 520 kB.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Features: USB serial CP2101, Wifi, BT, OLED (cannot be removed), battery plug.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Does NOT have: sdcard. No SPIRAM.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;ESP32-CAM&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;, an ESP32 with Wifi/BT, sdcard, camera.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;IDF config: CPU freq 240 MHz, XTAL 40 Mhz, SPIRAM 4MB (on SPI bus), SPI flash 4 MB (no RAM), internal SRAM 520 kB.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Features: Wifi, BT, OV2640, sdcard (shared with onboard LED!).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Does NOT have: USB serial, no OLED. Requires FTDI for access/program&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3QLqvZ5&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ESP-32S&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&#8230;Should have similar specs to the HelTek Wifi Kit 32, without the OLED or sdcard or camera. It has a micro USB and a CP2102 UART. The ESP-WROOM-32 is listed as having a XTAL 40 Mhz in the Espressif docs.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Features: USB serial (CP2102), Wifi, BT.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Does NOT have: No sdcard. No OLED. No SPIRAM.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-01-29T00:00:12-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">ESP32: Rust vs TinyGo are both no-go</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-01-28_esp32_rust_vs_tinygo_are_both_no-go.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-01-28_esp32_rust_vs_tinygo_are_both_no-go.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;TinyGo is not ready, and Rust is a crappy language.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;font-weight:700&quot;&gt;TinyGo&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So first let&apos;s have a look at TinyGo. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;This seems promising: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://tinygo.org/docs/concepts/faq/what-about-esp8266-esp32/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://tinygo.org/docs/concepts/faq/what-about-esp8266-esp32/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;As of September 2020, we now have support for the ESP32 and ESP8266 in TinyGo!&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;OK but below we find they support 2 boards: a &#8220;mini32&#8221; and an ESP8266 NodeMCU.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;They also explain that they get their &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/posborne/cmsis-svd/blob/master/data/Espressif-Community/esp32.svd&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ESP32 device definitions from the Rust esp-rs project&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;, which recreates them from the ESP-IDF source. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;No idea what a &#8220;mini32&#8221; is but it&#8217;s based on an ESP32 so it may work for us?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;We can find this: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/LilyGO/ESP32-MINI-32-V1.3&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/LilyGO/ESP32-MINI-32-V1.3&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;It&#8217;s not clear which ESP32 CPU that covers, so it &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;may&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;work with my modules. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;But we have a bigger problem:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://tinygo.org/docs/reference/microcontrollers/esp32-mini32/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://tinygo.org/docs/reference/microcontrollers/esp32-mini32/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;SPI&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; TinyGo Support = Yes.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;I2C&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; TinyGo Support = &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Not Yet&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Wifi&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; TinyGo Support = &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Not Yet&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That makes it&#8230; pointless. At least for now.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/tinygo-org/tinygo/blob/release/src/machine/i2c.go&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/tinygo-org/tinygo/blob/release/src/machine/i2c.go&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;is the implementation of the i2c interface for machines. I note the file is prefixed by &#8220;//go:build atmega || nrf || sam || stm32 || fe310 || k210 || rp2040&#8221;. Clearly esp32 is not in the list.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;From what I can see, the doc is up-to-date and that I2C is really not supported on their ESP32 port yet. It&#8217;s worth noting that none of their projects support an embedded wifi driver like the ESP32 contains. They have the usual &#8220;Arduino Wifi via UART with AT commands&#8221; support, which is not at all the same thing as it does not imply a &#8220;network stack&#8221;, even limited.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So right now TinyGo can be skipped. It&#8217;s only useful for projects not requiring wifi and no I2C.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;font-weight:700&quot;&gt;Rust&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;2 main issues with Rust in this project:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The language is insufferable.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The ownership rules are inscrutable, and the data types are impossible to understand clearly.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The libraries are not helping much.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Sure the esp_idf_hal seems to add an &#8220;oriented object&#8221; layer to the ESP IDF C functions, but overall it&#8217;s just the same API with lipstick on it, if and when I can find it. &lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The small project with 2 blinking LEDs builds a 230 kB binary.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There are just so many libraries injected in the build&#8230; Very similar in nature to a Node.JS build&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Obviously the initial part is a problem of familiarity with the Rust language. One could claim it can be fixed by learning the language more to understand the complex ownership rules, the insane trait types, and the box/ref count thing. But that&#8217;s also the worry -- generating write-only code that will be inscrutable when I pick up a side project years later.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So that&#8217;s going to be the end of this doc: TinyGo is a no-go, and Rust ESP-RS is a no-go.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For the SDB project, there are 2 possible options:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Regular C/C++.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;MicroPython was fairly reasonable and worth looking at again.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;There are projects that rebuild OpenCV as static *.a for ESP32: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/joachimBurket/esp32-opencv&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/joachimBurket/esp32-opencv&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-01-28T00:00:25-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">ESP32: MicroPython</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-01-28_esp32_micropython.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-01-28_esp32_micropython.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In the same vein that I tried Rust &amp;amp; TinyGo using the &#8220;Software Defined Blocks&#8221; project as an excuse, we&#8217;re going to restart all over again but this time with MicroPython.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Links for MicroPython:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.micropython.org/en/latest/esp32/quickref.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.micropython.org/en/latest/esp32/quickref.html&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;esp32 module: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.micropython.org/en/latest/library/esp32.html#module-esp32&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.micropython.org/en/latest/library/esp32.html#module-esp32&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There&#8217;s access to the NVM and a few other hardware centric properties.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;threads: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.micropython.org/en/latest/library/_thread.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.micropython.org/en/latest/library/_thread.html&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;[tutorial]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;However:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;FreeRTOS is used and pinned to core 0.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Micropython is pinned to core 1, including all threads.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For SDB, it is expected that some of the camera/vision part will have to be written in C, and then made available to MicroPython as a module. The goal is to never make image processing in Python; instead MicroPython will be the glue e.g. to get images from a driver/module, and pass around to an analyzer module.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;One thing I tried in the past is this customized version of MicroPython with the OV driver. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.google.com/search?q=micropython+esp32-cam&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.google.com/search?q=micropython+esp32-cam&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;for more links.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/lemariva/micropython-camera-driver&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/lemariva/micropython-camera-driver&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;specifically of interest.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This rebuilds uPy with a dedicated camera driver. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It can be a good example of how to add C level code to a forked MicroPython.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-01-28T00:00:21-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Django with NGinx?</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-01-21_django_with_nginx_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-01-21_django_with_nginx_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Since the kids are doing Python, I think it&#8217;s time to show them how to build a self-hosted web site. Django comes to mind since it&#8217;s Python, and as an exercise we would expose it on my NGinx server.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Django tutorial: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/4.1/intro/tutorial01/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.djangoproject.com/en/4.1/intro/tutorial01/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Django / NGinx tutorial: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://realpython.com/django-nginx-gunicorn/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://realpython.com/django-nginx-gunicorn/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;-- focuses on serving from a VM (in this case amazon), and using WSGI Http Server via GUnicorn.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Another obvious way to run this would be to run Django&#8217;s python-http server and then proxy from NG to that server.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The advantage of that is that the python server can be hosted on another machine on the local network, so that shows a real example of a distributed environment, and is likely easier for the tutorial aspect of this exercise.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-01-21T00:00:02-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">ESP32: Rust vs TinyGo</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2023-01-14_esp32_rust_vs_tinygo.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2023-01-14_esp32_rust_vs_tinygo.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&#8217;ll just leave this here: another option for ESP32 is TinyGo:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://medium.com/vacatronics/lets-go-embedded-with-esp32-cb6bb3043bd0&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://medium.com/vacatronics/lets-go-embedded-with-esp32-cb6bb3043bd0&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://tinygo.org/docs/concepts/faq/what-about-esp8266-esp32/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://tinygo.org/docs/concepts/faq/what-about-esp8266-esp32/&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;And of course &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://tinygo.org/docs/concepts/faq/why-go-instead-of-rust/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://tinygo.org/docs/concepts/faq/why-go-instead-of-rust/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;has actually the obvious 2 sides of the coin.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2023-01-14T00:00:18-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Software Defined Blocks</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2022-11-13_software_defined_blocks.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2022-11-13_software_defined_blocks.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Time to look at the ESP32-CAM to create a Software Defined Block solution again. This time I can use it at home first, then apply to Randall.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This was the rationale behind the ESP32-CAM Grade Crossing controller.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Coding the ESP32 as I wanted in C++ was a bit of PITA and thus I started looking at alternatives, namely Rust would seem appropriate for that task. There&#8217;s now more embedded Rust for ESP32 than 2 years ago so that&#8217;s good.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;OTOH a goal would be to use OpenCV and I don&#8217;t think there&#8217;s a good solution there. Preliminary research shows either OpenCV-for-Rust /or/ OpenCV-for-ESP32, but not sure there are libs for OpenCV-for-Rust-for-ESP32 yet.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Also to be honest, I&#8217;m not a big fan of Rust. I&#8217;m not super familiar with Rust so that may cause more problems than it would solve. &#8220;What would I expect from Rust&#8221; is the essential question. The answer is clear pointers/memory ownership especially in the context of multi-threading. From my cursory trying of Rust, it does solve the problem of &#8220;clarifying&#8221; at compile phase that memory management is sound. The syntax is a pile of crap, though.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2022-11-13T00:00:14-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Screen Alternative: TMUX</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2022-09-17_screen_alternative_tmux.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2022-09-17_screen_alternative_tmux.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I tried tmux a while ago, and didn&#8217;t like it, can&#8217;t remember why. Time to look at it again.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Let&#8217;s try it:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ sudo apt install tmux&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That does also require a few libs, libjpeg, lua (?!), etc.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Now the test is that I&#8217;m going to run Screen from Portal, and then inside I have Tmux on PiR.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;[pir] $ tmux&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;[pir] $ tmux a &amp;nbsp;| attach &amp;nbsp;| &amp;nbsp;attach-session&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# equivalent to -r -d &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;[pir] $ tmux list-sessions&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Tmux has &#8220;windows&#8221; and &#8220;panes&#8221;: a window contains 1 or more panes.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Contrary to screen, &#8220;split&#8221; creates a new &#8220;pane&#8221; with its own shell. I don&#8217;t see how to &#8220;bring&#8221; a different window pane into the current one like I do with screen.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Contrary to screen, re-attaching preserves the split panes in a window.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://tmuxcheatsheet.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://tmuxcheatsheet.com/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Nesting screen in tmux in screen:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I have this setup: screen &amp;gt; tmux &amp;gt; screen. I know &#55357;&#56853;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Ctrl-a + key for the first screen&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Ctrl-b + key for the first tmux.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Ctrl-a + a + key does send to the 2nd screen&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;That actually works well, and it&#8217;s better than nesting 3 screen sessions inside each other.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2022-09-17T00:00:41-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Android Kingdom Rush TD</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2022-08-31_android_kingdom_rush_td.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2022-08-31_android_kingdom_rush_td.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://love2d.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://love2d.org/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;-- open source 2d game framework over Lua&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://luajit.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://luajit.org/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Another site online mentioned the use of &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Cocos2d&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;cocos2d&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;which is not very interesting.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2022-08-31T00:00:27-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Nerdkill Android and Godot</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2022-08-14_nerdkill_android_and_godot.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2022-08-14_nerdkill_android_and_godot.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Nerdkill needs to be updated to satisfy the Play store requirements.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I started an &#8220;N2&#8221; branch in the Nerdkill Android repo, simply rebuilding the existing Android source under a modern AS / gradle project. This should be considered 90% done. The only known issues are:&lt;/span&gt;&lt;/p&gt;
&lt;ol start=&quot;1&quot; style=&quot;margin:0;padding:0&quot;&gt;
 &lt;li style=&quot;margin-left:36pt;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As for Asqare, I had to implement a &#8220;canvas zoom&#8221; in the rendering engine to simulate a smaller screen. This results in the desired pixelated look.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;margin-left:36pt;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The weapon / cartouche area is 50% height. Probably needs to be adjusted by the canvas zoom or similar. [&#8658; FIXED]&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;margin-left:36pt;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Lack of default Android menu. In Asqare, I fixed that by adding the window nav bar and populating a menu icon. I can do the same here, or I can just add a 3-dot menu icon in the intro screen. [&#8658; Not Needed]&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&#8217;m likely going to just fix issue #2 (or maybe even not) and release the game as-is to meet the store requirements to avoid delisting. That&#8217;s the &#8220;immediate band-aid&#8221; strategy. [&#8658; DONE, submitted to the store]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;But a bit more long term, I&#8217;ve been wanting to put out a Godot-based game, and after contemplating doing that for Asqare, I&#8217;ll use Nerdkill instead. After all that&#8217;s the core leitmotif of the project, to be a test bed for platform adoptance.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2022-08-14T00:00:28-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">D3 js chart Library and React</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2022-07-01_d3_js_chart_library_and_react.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2022-07-01_d3_js_chart_library_and_react.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Thinking of using &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/D3.js&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;D3&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;for learning how to use it, and RPisicine could be a good candidate for that. It&#8217;s a React app so how do we integrate them?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Many D3 tutorials: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.google.com/search?q=d3+js+tutorial&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.google.com/search?q=d3+js+tutorial&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;With React, apparently an obvious complexity is that they both manipulate the DOM, so need to use state/useEffects to combine them. This has more details:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.pluralsight.com/guides/using-d3.js-inside-a-react-app&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.pluralsight.com/guides/using-d3.js-inside-a-react-app&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://blog.griddynamics.com/using-d3-js-with-react-js-an-8-step-comprehensive-manual/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://blog.griddynamics.com/using-d3-js-with-react-js-an-8-step-comprehensive-manual/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There are some wrappers to help with that:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://react-d3-library.github.io/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://react-d3-library.github.io/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;In npm &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.npmjs.com/search?q=react%20d3&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.npmjs.com/search?q=react%20d3&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;, projects fall under 2 categories: &#8220;generic d3-in-react&#8221; libraries, and dedicated graphic components.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2022-07-01T00:00:11-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Bearing Waypoints</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2022-06-18_bearing_waypoints.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2022-06-18_bearing_waypoints.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Current waypoint management needs some improvements:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Compass screen&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Label Target waypoint (saved name)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Display save name, truncate as needed.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Menu save if new, vs edit if saved.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Waypoint screen&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Label list as &quot;saved Waypoints&quot;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Change selected buttons as row below text field. &lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Separate the delete button&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;Set target&quot; button to match the compass screen, with same icon.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Share to map on this screen&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A more menu with 3 dot icon&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Export all (use a simple JSON)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Import from JSON&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2022-06-18T00:00:29-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Android Studio Emulator</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2022-06-18_android_studio_emulator.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2022-06-18_android_studio_emulator.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In the latest version of Android Studio, the emulator shows up in a pane in the IDE. This is annoying and absolutely unusable on a small laptop screen. How do I get rid of that and have a separate window as usual?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;To get rid of that: AS &amp;gt; File &amp;gt; Settings &amp;gt; Tools &amp;gt; Emulator &amp;gt; uncheck &#8220;Launch in a tool window&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Also keep creating the AVD with the &#8220;Cold Boot&#8221; setting instead of &#8220;Quick Boot&#8221;. Most of the time the emulator starts &#8220;unpowered&#8221; in quick boot, nothing on screen, and no idea on how to fix it.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2022-06-18T00:00:31-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Android &#8220;simple&#8221; games: Jump, Cangrejo, Asqare</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2022-05-29_android_simple_games_jump_ca_f1322603.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2022-05-29_android_simple_games_jump_ca_f1322603.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;If I had to rebuild Asqare today, which framework would I choose?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Clearly I would use an existing one instead of rolling my own. There are lots of choices out there.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Godot is one obvious choice. It&#8217;s even officially listed in the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/games/engines/engines-overview#godot&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Using a game engine on Android&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;guide. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;libGDX is another obvious choice for something lower level. It&#8217;s not a &#8220;full stack&#8221; game engine, yet it&#8217;s a good foundation for someone to roll their own renderer.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For Jump!, the idea was to use scenes to implement everything in Godot. It&#8217;s a Godot thing, which just happens to export to Android. Some functionality can be provided by plugins, such as the screen sharing/export provided by GodotShare.aar &#8594; this is done by generating an &#8220;aar&#8221; library, and making it available to Godot..&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For something like Asqare, the native Android implementation has some advantages as the gameplay screen is a view in an actual activity. It would be nice to know how to implement that level of integration using Godot. E.g. ideally a scene is just one view, or maybe one fragment, which is controlled by an otherwise &#8220;pure&#8221; Android app. That is, I want the reverse: instead of adding android library functionality to Godot, I&#8217;d like Godot to generate a library that I integrate in an external android app. This mode doesn&#8217;t quite seem supported but this seems the closer we can get:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.godotengine.org/en/3.5/tutorials/export/android_custom_build.html#&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.godotengine.org/en/3.5/tutorials/export/android_custom_build.html#&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The obvious cons here is that this implies we now have to deal with two tools/frameworks and they might have incompatible release schedules or requirements. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Generally speaking for all these small games, there&#8217;s a strong desire to reorganize them in a clear MVP or MVC pattern -- model-view-presenter or model-view-controller. MVC makes the most sense here: the model is the core gameplay, which can be coded in a separate library (e.g. an aar import), the view is an android skeleton and/or godot, and the presenter is godot. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s worth pointing out that games like Asqare and even Nerdkill are already architectured like that.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In a sense that seems to run contrary to the default Godot game implementation: Godot naturally tends to architecture a game around its scene graph as being the directing entity. The scene graph is the model. Furthermore entities in the scene graph embed part of their own logic such as collision and event handling.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In the Asqare case, that&#8217;s not incompatible with the MVC pattern: the &#8220;core&#8221; Asqare &amp;nbsp;game can be modeled as a board representation (an array of e.g. integers) and a function computing the name board state as well as a list of view updates. The presenter part in Godot would basically map each board cell to a sprite entity. Updates are actions like select (implemented as blinking or rotating a sprite), vanish, or animate an entry. This is the way the game is currently implemented in its Java micro &#8220;game engine&#8221;, even though it&#8217;s all hard coded functions and nothing is really generic.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;From that description, it does read like using Godot for Asqare would be a bit of a stretch actually:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Godot drives the android app creation, instead of being an embedded view/fragment.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Godot strives to be the model with its scene graph.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The only benefit of using Godot is to use it as an animation engine (and without having to learn a new one). That&#8217;s more or less what using libGDX would do.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I should make the point that Nerdkill on Godot does make a lot of sense. The &#8220;scene graph is the model&#8221; works fine for Nerdkill.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;But what about Asqare. If not Godot, then what?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What do I want, ideally?&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Some kind of scene graph thingy.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;An animation engine with some basic effects.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Optional: 3d support with an orthographic top view. Would allow to draw elements in Blender and animate them without having to render them to static image maps&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The cons of that is the added complexity of a 3d GL view.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What if we took a different approach? Kotling game engines:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;MiniGDX: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://gamefromscratch.com/minigdx-kotlin-game-development-framework/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://gamefromscratch.com/minigdx-kotlin-game-development-framework/&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Besides the name, this has no affiliation with libGDX. It uses ljgl and al.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This is just a one-person game engine with no pedigree and no support team.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Same person has contributed to libKTX.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;libGDX is well known and documented.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Does both 2d and 3d.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://libgdx.com/wiki/jvm-langs/using-libgdx-with-kotlin&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://libgdx.com/wiki/jvm-langs/using-libgdx-with-kotlin&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://libktx.github.io/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://libktx.github.io/&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Korge: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://korge.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://korge.org/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://gamefromscratch.com/korge-engine-kotlin-powered-open-source-game-engine/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://gamefromscratch.com/korge-engine-kotlin-powered-open-source-game-engine/&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Korge is a set of libraries + some IJ plugin.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It focuses on 2d.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Kotlin-is-fabulous indoctrination is a cons.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That Flutter-simple-game thing?&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Meh to Dart.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;No desire to use it long term.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Android Jetpack Compose?&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In my case, looking at the long-term, say I update an app next in 5-10 years:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The IDE project may be obsolete. E.g. some of my projects still use Eclipse.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The project configuration may be obsolete, even if the IDE is still the same.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Example: gradle groovy now vs maybe gradle kotlin later.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Who knows about stuff from e.g. Godot?&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The language could become obsolete.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Example: go1 projects not compatible with go1.5, etc.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;C# has the same issue. I expect Kotlin to have the same issue.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Java has this &#8220;legacy&#8221; thinking model which saves it for now.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Who knows about GDScript?&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Library support for Android and older API models changes.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Compat library is min 14 these days.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A lot of stuff at G is min 21.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Having an app/game that depends on e.g. Godot + Android means to have to deal with all that, times 2, for each platform, plus their intersection.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2022-05-29T00:00:56-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Android Apps Update: Flashlight, Brighteriffic</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2022-05-28_android_apps_update_flashlig_8fe84f68.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2022-05-28_android_apps_update_flashlig_8fe84f68.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;I found the sources for both under the old &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://bitbucket.org/ralfoide/autosettings/src/master/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Autosettings project&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Back then I was using branches, instead of placing such projects in their own repository.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I should move them under their own git repo under bitbucket/ralfoide.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Flashlight matters; Brighteriffic not so much yet I may update it if it isn&#8217;t too cumbersome.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In both cases it makes sense to duplicate the autosettings repo entirely to preserve history, and limit it to these app folders only.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;lt;fork autosettings repo&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ git clone git@bitbucket.org:ralfoide/brighteriffic.git&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ git filter-branch --prune-empty --index-filter &apos;git rm &amp;nbsp;--ignore-unmatch --cached -r AlarmTest branches Flashlight wiki distrib/[aAfqtT]* trunk/AutoSettings trunk/TimerifficTest&apos;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ git push --force&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2022-05-28T00:00:06-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Android Apps Update: Asqare, Bearing</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2022-05-25_android_apps_update_asqare_bearing.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2022-05-25_android_apps_update_asqare_bearing.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Spent the last week or so &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://bitbucket.org/ralfoide/asqare/src/master/A2/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;&#8220;rebuilding&#8221; Asqare&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Only needs &#8220;one last little change&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Tradeoffs:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;See plenty of things I could change in the game, but that would delay release.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Did a few minor things to make the game usable on Android 12.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Will release a &#8220;1.4&#8221; which is mostly the same thing.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Wrote dev notes and maybe will do a &#8220;1.5&#8221; that has game changes.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One thing that works well: Android 12 + Android Studio chipmunk &#8658; Wireless Debugging. Enable in android settings, customize a quick setting tile to toggle it. Very convenient to push/debug from AS that way.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Question: can command-line adb also use Wireless Debugging?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For release, using the B3 script to create a bundle (aab), without the flavors.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This produces a signed AAB (for Dev Console) + temporary APKS for local deployment.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;My script signs the AAB using the old jarsigner. I had to work around it that way because the key format is old and I failed to update into a newer format.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Issue: the local APKS are signed with a debug key. Which means I can&#8217;t push and update an app store signed binary.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&#8658; &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/questions/50419286/install-android-app-bundle-on-device&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;According to this SO&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;, I should be able to sign the AAB with release and thus the APK should be signed too?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For the Dev Console, the only choice is to upload an AAB. I&#8217;m using the self-signed method where the console does not sign the APK for me (I think?)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;When uploading the AAB&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;: &#8220;Error: To upload an Android App Bundle you must be enrolled in Play App Signing.&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;When uploading the signed APK&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;: &#8220;You uploaded an APK with an invalid signature (learn more about signing). Error from apksigner: ERROR: MIN_SIG_SCHEME_FOR_TARGET_SDK_NOT_MET: Target SDK version 32 requires a minimum of signature scheme v2; the APK is not signed with this or a later signature scheme&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The &#8220;signature scheme v2&#8221; is explained here: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://source.android.com/security/apksigning/v2&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://source.android.com/security/apksigning/v2&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The tool to use is &#8220;apksigner&#8221; available in build-tool 24.0.3 and above.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;However I had already tried it years before and my signature uses an older SHA-1 which is now considered obsolete; I had tried to change the keyfile with no success.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Plan B: &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&#8220;Google isn&apos;t protecting the app signing key for your app. &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Opt in to use Android App Bundles&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I had to do that for Bearing and Seeds: see &#8220;\p&#596;&#641;t.na.wak\&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Learning for these:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Opt In&lt;/span&gt;&lt;span&gt;&amp;nbsp;selection in the Dev console is &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;FINAL&lt;/span&gt;&lt;span&gt;. The choices are confusing, poorly explained, and &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;there&#8217;s no way to change them later on&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;. &amp;lt;grrr&amp;gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Be &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;very careful&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;to select the option to keep using my signing key and not let the store generate a new one. This is NOT the default and it&#8217;s a PITA to use.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Need their PEPK tool to sign the release key to set it up the first time.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Need the upload key from the store.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Opt In:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;In screen &#8220;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Let Google Play manage your app signing key&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8221;:&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Use option &#8220;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Use existing app signing key from Java KeyStore&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8221;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Generated a release key based on my key using PEPK &#8658; that&#8217;s the same signature arguments as used for Bearing, so maybe keep that file around and write down where it is!&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Upload release key&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Save&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;IMPORTANT:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;My keystore has 2 aliases. Asqare uses alias 1. Bearing/Seeds used alias 2. Because history.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In the Dev Console:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Upload an AAB to the Internal Testing track.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;WAIT for an email from Firebase Test to get a health check on many devices.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Takes at least 5 hours, but less than 24 h.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Once it&#8217;s fine, convert it to a prod push.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There&#8217;s an email when it&#8217;s available.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2022-05-25T00:00:22-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Updating Android Apps</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2022-05-11_updating_android_apps.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2022-05-11_updating_android_apps.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The new google play mandate is that apps must somewhat follow the latest API level, or risk getting booted out of the store after a certain delay.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/google/play/requirements/target-sdk&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://developer.android.com/google/play/requirements/target-sdk&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&#8220;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Starting in November 2022, app updates must target API level 31 or above and adjust for behavioral changes in Android 12;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://support.google.com/googleplay/android-developer/answer/11926878&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://support.google.com/googleplay/android-developer/answer/11926878&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;New Apps: API 31 by 2022-08-01.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;App Updates: API 31 by 2022-11-01.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Existing Apps: API 31 by 2023-11-01 / API 30 by 2022-11-01.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;TL;DR&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;: So that means all apps should be API 30 by Nov 2022, but because they would be updates they need to be API 31, so we might as well bring them to API 32 right away.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The plan is to try to update apps on a rotating basis, for example one per month.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For that, I need a list, and I&#8217;ll reuse my gradle-version spreadsheet.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;List has been updated:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse:collapse;border-spacing:0;margin-right:auto&quot;&gt;
 &lt;tbody&gt;
  &lt;tr style=&quot;height:15.8pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:207.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Ralf Flashlight (done)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:83.2pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Prod v123&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;4&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;4&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:15.8pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:207.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Nerdkill (done)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:83.2pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Prod v105&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;4&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;4&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:15.8pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:207.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Mandelbrot Map 2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:83.2pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Prod v13&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;11&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;4&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;11&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:15.8pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:207.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Asqare (done)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:83.2pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Prod v102&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:15.8pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:207.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Brighteriffic&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:83.2pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Prod v103&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;4&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(207, 226, 243);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;4&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:15.8pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:207.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Cangrejo&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:83.2pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Testing v1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;29&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;18&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 234, 211);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;29&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:15.8pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:207.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Jump!&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:83.2pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Prod v4, Testing v3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;29&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;27&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 234, 211);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;29&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:15.8pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:207.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Project E&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:83.2pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Testing v1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;29&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;18&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(217, 234, 211);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;29&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr style=&quot;height:15.8pt&quot;&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:207.5pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Seeds (done)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:83.2pt&quot;&gt;&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;Prod v402005&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;height:12pt;text-align:right&quot;&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;height:12pt;text-align:right&quot;&gt;&lt;/p&gt;&lt;/td&gt;
   &lt;td colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;background-color:rgb(255, 242, 204);border-bottom-color:rgb(204, 204, 204);border-bottom-style:solid;border-bottom-width:1pt;border-left-color:rgb(204, 204, 204);border-left-style:solid;border-left-width:1pt;border-right-color:rgb(204, 204, 204);border-right-style:solid;border-right-width:1pt;border-top-color:rgb(204, 204, 204);border-top-style:solid;border-top-width:1pt;padding:2pt 2pt 2pt 2pt;vertical-align:bottom;width:59.1pt&quot;&gt;&lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:10pt;vertical-align:baseline&quot;&gt;28&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2022-05-11T00:00:22-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Google I/O 2022</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2022-05-11_google_i_o_2022.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2022-05-11_google_i_o_2022.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Things to try: &lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Jetpack Compose for Android UI (e.g. Timer app)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Flutter 3&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Google Cloud Run as an alternative to Amazon w/ React&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Nerdkill could be a good subject to try the latest &#8220;Flutter 3 Casual Game Kit&#8221; thingy.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2022-05-11T00:00:28-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Arduino Sequence Controller?</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2022-05-10_arduino_sequence_controller_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2022-05-10_arduino_sequence_controller_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&#8217;ve been thinking about how Lacan uses his Arduino for his aircraft animation.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What he needs is really a sequence controller to create time-base sequences triggered by input events.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;If I had to program this from scratch, what would I do? I&#8217;d create a &#8220;mini language&#8221; using either macro or C++ objects which represents states to change over time:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;LED timings is really just a list of (start timestamp, LED pin, LED state).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Servos: (start timestamp, servo pin, angle to reach, speed or duration)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Motors: (start timestamp, motor pin, power level, direction)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Instructions to end sequence, repeat N times, or chain to another sequence.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Depending on the specific needs:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Sequence(s) are started by an input (with either forced restart or don&#8217;t retrigger).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Need more than one concurrent sequence? Make each sequence independent. That is each sequence is started and actuates by itself on main clock.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Need to make sequences run solo? Have an instruction that stop/cancel all other sequences.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Maybe put sequences in groups (e.g. &#8220;servo groups&#8221;, &#8220;lights groups&#8221;) and make the group exclusive as in only 1 sequence runs in the group, or be able to stop any running sequence in the group.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For example for the case of the variable geometry plane:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;IR button 1 &#8658; sequence 1 = stop sequence 2, move servo N up to 60. No retrigger.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;IR button 2 &#8658; sequence 2 = stop sequence 1, move servo N down to 0. No retrigger.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;IR button N &#8658; sequence N for lights.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It seems so obvious that I would be surprised if this had not been done before and be made available as a customizable library for arduino.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For model trains, there are a couple obvious usages:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Sequencing road traffic lights, e.g. to animate a city.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;With the addition of a &#8220;random LED value&#8221; instruction, animate anything from a camp fire to a building in fire.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2022-05-10T00:00:29-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Cat Litter Box Timer</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2022-02-20_cat_litter_box_timer.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2022-02-20_cat_litter_box_timer.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Where&#8217;s the source for the current &#8220;Timer&#8221; app used for the litter box?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Device it uses: Tmo (saffire?) 3g something&#8230; running Android 2.2 (aka Froyo).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;API level &#8658; API 8&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As an exercise, it would be nice to rewrite this in Kotlin to see if it can run on Froyo. (FAQ says there&#8217;s no min sdk req).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2022-02-20T00:00:11-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor 2</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2021-12-25_conductor_2.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2021-12-25_conductor_2.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;background-color:rgb(255, 255, 0)&quot;&gt;It&apos;s time to reflect on Conductor 2 again&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The repo branch has been going nowhere lately. I moved the project to a new repo (in the randall-layout workspace) and only copied the conductor 1 part. That made me realize I&apos;d be throwing away a valuable part with the SVG map.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So first I want to salvage that part. The UI is and should be separated from the engine. This UI was going to drive a simulator, and I can likely make that happen on top of conductor 1.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The next part I want is to formalize the spec for conductor 2. Forget the syntax for now, I need to get the requirements right first: block handling, route management, and fully convert a current script. Also write some examples for eg window block handling.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(Reading between the lines, what I&#8217;m saying is that the Conductor-2-with-Groovy-DSL shows me that in fact I want more profound changes than &#8220;just a DSL&#8221;. I really want to rethink the entire way the automation scripting is done.)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Then once we have that we can figure the implementation. Maybe getting entrenched in groovy is not helpful here. There&apos;s clearly some value in not writing my own language, unless it slows me down.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The discussion &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/blog/train/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;continues in the Conductor 2 doc&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2021-12-25T00:00:41-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Status of Conductor 2</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2021-12-19_status_of_conductor_2.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2021-12-19_status_of_conductor_2.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I haven&#8217;t written one so it&#8217;s worth explaining the status of Conductor 2:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Entirely rewrote the current v44 script using an &#8220;enhanced&#8221; version of Conductor 1 syntax to explore a realistic way to describe and use the new routes concept.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Considered whether it&#8217;s worth pursuing the Groovy DSL vs extending the Conductor 1 DSL&#8230;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The decision is that the former Conductor 2 Groovy DSL is obsolete. It was premature. Part of the issue was that it was getting entrenched in bridging the functionality and implementation (at the same time) with the former Conductor 1 engine. That is not the proper way to prototype.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Instead, modularized the Conductor 1 source code to move the engine/DSL into a sub-project.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;And added a mock Conductor Groovy DSL rewritten from scratch, focusing on how the syntax would work rather than the actual implementation. There are unit tests but they only validate that the DSL can actually encode what it&#8217;s supposed to.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The goal is to later also do a mock Kotlin DSL and compare.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I still need to create a fat jar where this is invoked as Jython add-on from JMRI, to ensure there&#8217;s no library mismatch for example when running Groovy or Kotlin runtime code.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That led me to explore the fundamental issue with the current route system, namely that we must have &#8220;managers&#8221;, &#8220;active routes&#8221;, and the sequence/shuttle manager should deal with a node graph instead of a &#8220;block list&#8221;. After much back-and-forth debate, I think I finally have a system I can endorse. Now I must encode it using the Groovy DSL.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2021-12-19T00:00:54-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">&#8220;nvm&#8221; for Multiple Node Versions</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2021-11-11__nvm_for_multiple_node_versions.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2021-11-11__nvm_for_multiple_node_versions.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Right now on the laptop for RPisicine I have:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ node --version&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; v14.11.0&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ npm --version&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; 6.14.8&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;https://github.com/nvm-sh/nvm&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; install.sh&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ nvm list&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# takes a while...&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Install steps recommend to remove &#8220;-g&#8221; (global) modules that will likely break when changing version globally:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ nvm use system&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ npm uninstall -g nwb&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ npm uninstall -g serve&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ nvm install v14.11.0&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In rpiscine:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ node --version &amp;gt; .nvmrc&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ nvm use&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# in that directory, to switch to that version&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;How does changing the Node version with nvm affect the NPM version?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; The NPM version depends (and varies with) the Node version being used. E.g.:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ nvm use node&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;text-indent:36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Now using node v14.11.0 (npm v6.14.8)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ nvm install node&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;text-indent:36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Now using node v17.1.0 (npm v8.1.2)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For Windows, there&#8217;s https://github.com/coreybutler/nvm-windows &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;To fix the NVM PATH in CMD.exe: Not really an option when installed using nvm-sh since the latter does not create an &#8220;nvm.exe&#8221; or &#8220;nvm.sh&#8221; -- instead all the nvm commands are bash functions loaded in the interpreter (meh). But we can work around it:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;cygwin: $ cygpath -w $(dirname $(nvm which --silent))&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; C:\Ralf\.nvm\versions\node\v18.8.0\bin&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Copy path to a CMD.exe.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;cmd: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$ refreshenv&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8592; optional, because I have chocolatey installed.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ set PATH=C:\Ralf\.nvm\versions\node\v18.8.0\bin;%PATH%&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ echo %PATH%&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2021-11-11T00:00:50-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">RPiscine project</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2021-10-11_rpiscine_project.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2021-10-11_rpiscine_project.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;An update on Projet RPiscine aka Piscine 2:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Python service: access RPi PiFace, store data, expose data via REST JSON.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;React JS served via nginx to connect to the Python service + visualize the data.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This worked very well. The &#8220;backend vs frontend&#8221; split was good. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The setup allows for a local react dev on laptop, build on laptop, then push the build site to the RPi.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This runs on an RPi 1 B (the older kind), with Debian buster, and using systemctl services for the python wrapper. Also a reverse-ssh service wrapper is created, which works very nicely. Using the new systemctl service is a nice improvement over the old initd scripts.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2021-10-11T00:00:10-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Feature flag based Android app</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2021-09-09_feature_flag_based_android_app.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2021-09-09_feature_flag_based_android_app.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What would it take to do an Android app that is modular and where each feature is controlled by a remote server feature flag?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Would I choose something like Firebase, AWS, or a custom server like Alfray or RDRR?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The data itself would likely be json or proto. We would want to have version capabilities.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Notions that become relevant are cold vs hot config, refresh times, networks caching. Also an ETag / checksum system could be used to only send diff/update and minimize network traffic.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2021-09-09T00:00:39-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">End of Summer Project B3</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2021-09-03_end_of_summer_project_b3.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2021-09-03_end_of_summer_project_b3.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Time to end the summer project with Bearing B3. Steps needed:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Publish it!&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Check if I can update only the Installed version, without the &#8220;Instant&#8221; one.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I do realize the Installed-vs-Instant doesn&apos;t make a lot of sense in this case due to the preference storage for the Waypoints list. When updating, any waypoints created with the Instant one will be lost.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Either way I&#8217;m likely to remove the Instant version as it&#8217;s mostly pointless here. It&#8217;s only here as an exercise...&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2021-09-03T00:00:47-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Train Motion: FatJar vs ClassPath?</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2021-08-28_train_motion_fatjar_vs_classpath_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2021-08-28_train_motion_fatjar_vs_classpath_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In the Train-Motion project, I have a fat jar gradle rule to package all the dependencies in a single jar.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;To make it work, I had to create a &#8220;configuration&#8221; in gradle:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;configurations {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; runtimeCompile {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; canBeResolved = true&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; canBeConsumed = true&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; compileClasspath.extendsFrom(runtimeCompile)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; runtimeClasspath.extendsFrom(runtimeCompile)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; testCompileClasspath.extendsFrom(runtimeCompile)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; testRuntimeClasspath.extendsFrom(runtimeCompile)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Then I use this configuration to include the dependencies:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;dependencies {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; runtimeCompile project(&quot;:LibUtilsJava&quot;)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; runtimeCompile &quot;commons-cli:commons-cli:1.4&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; runtimeCompile &quot;org.bytedeco:javacv-platform:1.5.3&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; runtimeCompile &quot;org.bytedeco:javacpp-platform:1.5.3&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; runtimeCompile &quot;uk.co.caprica:vlcj:4.7.1&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; runtimeCompile &quot;com.fasterxml.jackson.core:jackson-databind:2.10.2&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; runtimeCompile &quot;com.squareup.okhttp3:okhttp:3.10.0&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; runtimeCompile &quot;org.eclipse.jetty:jetty-server:9.4.29.v20200521&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; runtimeCompile &quot;com.google.dagger:dagger:2.28&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; runtimeCompile &amp;nbsp;&quot;com.google.auto.factory:auto-factory:1.0.1&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;And finally a fatJar task collects these specific dependencies and packages them together:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;task fatJar(type: Jar) {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; manifest.from jar.manifest&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; classifier = &quot;all&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; from {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; } {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; exclude &quot;META-INF/*.SF&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; exclude &quot;META-INF/*.DSA&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; exclude &quot;META-INF/*.RSA&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; with jar&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Note that &#8220;runtimeCompile&#8221; is a superset of the &#8220;compile&#8221; configuration, and the artifacts can be found using configurations.compileClasspath.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That&#8217;s neat to create the needed single JAR. That jar is ~760 MB with all the OpenCV deps. And it takes an interminable 4 minutes to create the jar itself.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So now the question is whether I can avoid that. I don&#8217;t need to distribute the jar, so I&apos;d be fine with crafting a specific command line with the needed classpath. Or even having a &#8220;gradle run&#8221; task that does not need the fat jar first.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2021-08-28T00:00:39-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Bearing B3 Features</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2021-08-18_bearing_b3_features.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2021-08-18_bearing_b3_features.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Now that we have a basic &#8220;marked locations&#8221; list in B3, it&#8217;s time to review the UI and adjust.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The goal was to do it in Kotlin, and that&#8217;s been done. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One issue was the &#8220;Marked Locations&#8221; wording, which seems problematic. Isn&#8217;t there something better&#8230; &#8220;waypoints&#8221; seem like a better name.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So let&#8217;s do a few changes:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Vocabulary:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A &#8220;Location&#8221; is just a raw GPS location coordinate (latitude + longitude).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A &#8220;Waypoint&#8221; is a location coordinate combined with a name.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Screen &#8220;Marked Locations&#8221; &#8658; &#8220;Waypoints&#8221;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;Marked Location&#8221; &#8658; &#8220;Selected Waypoint&#8221;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;Location N&#8221; &#8658; &#8220;Waypoint N&#8221;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rename class Mark to Waypoint / Waypoints / WaypointsAdapter.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Screen &#8220;Compass&#8221;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;Marked Location&#8221; &#8658; &#8220;Target Location&#8221;&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(that should make it more obvious it&#8217;s the target of the bearing)&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Menu Recall / Edit &#8658; keep as-is for now.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;We&#8217;ll keep the wording as &#8220;Location&#8221; (Target vs GPS) in the Compass screen.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2021-08-18T00:00:34-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Android Testing : AndroidX &#8220;AndroidJUnit4&#8221; vs Robolectric</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2021-08-11_android_testing_androidx_and_7a1dff4e.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2021-08-11_android_testing_androidx_and_7a1dff4e.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I feel like a case of deja vu so I need to write this down.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Robolectric: simulating an Android runtime working on top of the JVM, local dev machine. No emulator needed.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Used to be simple and straightforward. Since Robolectric 4 and recent android gradle updates, some things have been deprecated / changed making it harder to use.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;AndroidX runner &#8220;AndroidJUnitRunner&#8221; tests which go in androidTest folder: run on device or emulator, and are essentially the modern version of the instrumentation tests.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Setup for gradle imports is highly modular. For ref:&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/training/testing/set-up-project&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://developer.android.com/training/testing/set-up-project&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;AndroidX runner &#8220;AndroidJUnit4&#8221; tests which go in androidTest folder: run on device or emulator too &#8658; the test folder name indicates which build rule is used and where the test runs.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;AndroidX runner &#8220;MockitoJUnitRunner&#8221; tests which go in the test folder: run on JVM.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This is provided by mockito-core and is basically a JUnit runner that also happens to auto-init all the @Mock instances. &#8658; Just a convenience over the usual Mock rule, no relation to Android framework.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;How much of the Android framework can be used with that? &#8658; none&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Robolectric with AndroidX tests:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://robolectric.org/androidx_test/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://robolectric.org/androidx_test/&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Use the &#8220;AndroidJUnit4&#8221; runner.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Confusing because nothing makes it clear these are Robolectric tests.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What I have done for Cab v2:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Build.gradle &amp;gt; defaultConfig &amp;gt; testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;ServersActivityTest:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;@RunWith(AndroidJUnit4.class)&lt;br&gt;@Config(application = TestMainApp.class)&lt;br&gt;ApplicationProvider.getApplicationContext()&lt;br&gt;ActivityScenario.launch(MainActivity.class)&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The cabv2 TestMainApp derives from the LegacyMainApp and replaces the IAppComponent by the ITestAppComponent for testing. That&#8217;s how test modules are injected in the app.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Since updating B3, I was getting errors:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;robolectric RuntimeException Method not mocked&#8221;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;They are &#8220;solved&#8221; by adding this to app gradle:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;testOptions &amp;gt; unitTests &amp;gt; &amp;nbsp;returnDefaultValues = true&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Which in turn creates another error: &#8220;java.lang.ClassNotFoundException: android.content.res.ApkAssets&#8221;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Real solution: following &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/robolectric/robolectric/issues/4740&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/robolectric/robolectric/issues/4740&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The dumb solution is to remove the m2 robolectric cache so that it gets downloaded again.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2021-08-11T00:00:16-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Gradle Wrapper + Maven Repo Offline caching</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2021-08-08_gradle_wrapper_maven_repo_of_72ce091b.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2021-08-08_gradle_wrapper_maven_repo_of_72ce091b.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://softwareengineering.stackexchange.com/questions/331817/self-contained-projects-gradle-maven-dependencies-offline&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://softwareengineering.stackexchange.com/questions/331817/self-contained-projects-gradle-maven-dependencies-offline&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This explains:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;How to use an offline version of the Gradle wrapper.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;How to use an offline version of a project&#8217;s Maven repo dependencies (cached once).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2021-08-08T00:00:04-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Summer Project: Bearing + Kotlin</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2021-08-05_summer_project_bearing_kotlin.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2021-08-05_summer_project_bearing_kotlin.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Kotlin / rig4k is a good potential idea but really a project based around GDoc downloads &amp;amp; APIs sounds like a painful thing to do in PA. It requires internet connection (duh). But also GDoc APIs are notorious to change each time I look at them, requiring even more research -- that is there&#8217;s the issue that I&#8217;d have to learn the &#8220;idiomatic kotlin&#8221; and the &#8220;idiomatic gdoc API&#8221; at the same time.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So instead, what about Bearing? It could be a good Kotlin candidate:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;No new API learning curve. The usual Android stuff, just done as Kotlin.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Can focus on Kotlin syntax &amp;amp; such.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One option would be to rewrite the whole app in Kotlin, however&#8230; what&#8217;s the benefit?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Can just mix with the current version and add new stuff in Kotlin.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That is the addition would be a new fragment or activity for a mark list management, which is neatly self-contained.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2021-08-05T00:00:49-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Looking back at Bearing B3</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2021-08-05_looking_back_at_bearing_b3.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2021-08-05_looking_back_at_bearing_b3.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When I (re)created Bearing B3, I tried a few things:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The &#8220;new&#8221; ABB (Android Bundle) mode.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Not a big fan but this is the way to go since Play will eventually make AAB mandatory in 2021 or 2022.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It was a good test and useful, and I shall keep it that way for distrib.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The new &#8220;instant vs installed&#8221; modes. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That was good learning to realize that instant creates some limitations, e.g. can&#8217;t bundle analytics stats with it.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Other than that, it makes the build config a bit more complicated by having 2 variants.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Overall it doesn&#8217;t bring much in terms of visibility. E.g. how many apps are installed vs run as instant? &lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;FirebaseAnalytics instead of GA.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Same difference?&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Need to constantly update the library&#8230; it&#8217;s obsolete again IIRC.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Work suggestions:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Remove the &#8220;instant&#8221; variant. Only keep the installed one.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What about google play? Can I remove the instant version there too?&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; update the &#8220;installed&#8221; version first and check if the &#8220;instant&#8221; can be removed from Play. If it does, then cleanup the &#8220;instant&#8221; build script + code.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Check updating of the Firebase library.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; That&#8217;s enough update needed to create the new installed variant.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2021-08-05T00:00:18-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Summer Project: Bearing</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2021-08-02_summer_project_bearing.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2021-08-02_summer_project_bearing.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Guess what&#8230; I&#8217;m in PA and I already want to add a couple features to Bearing:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Create a marked location list + auto save/load.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When marking a location:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Add it to the list. Names a &#8220;Location 1&#8230;&#8221; + auto-inc (use list length).&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;TBD later &#8658; dialog to edit name before adding it + cancel.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;But to get started, generate name automatically.&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Display name in small font below marked location.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Add a little &#8220;3-dot menu&#8221; on the &#8220;Marked Loc&#8221; line. Popup a menu:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Recall / Edit&#8230; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; goes to marked loc fragment (see below). &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[done]&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Share&#8230; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; share location as text/etc&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[done]&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;V2: Rename&#8230; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; dialog with one text edit field&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;V2: Save &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#8658; enabled/visible if marked loc is not in current list (e.g. upgrade or deleted)&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Share bearing (as text, to google maps).&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[done]&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Marked locs fragment:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Reuse the current pattern (fragments in a single activity).&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[done]&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Simple text list. Select an item : [Delete] / [Recall] / [Rename (v2)].&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[done]&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;List items: GPS loc + date/time + name on 2nd line.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[done]&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;V1: Not listing the time&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Delete with confirmation &#8658; does not remove current marked loc. &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[done]&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Recall: honor the pref setting &#8220;ask before override marked loc&#8221;.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[done]&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Recall would erase the current mark loc,&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Then go directly to the compass view.&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;V2: Share selected mark.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;V2: Export all marks as text.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;V2 or +: reorder, rename.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Consider renaming &#8220;marked locations&#8221; to &#8220;waypoints&#8221;?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Split screen:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Bottom is list view&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;V2: top is map view of selected list item.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;V2: top is detail info for item. Name edit field to rename. Trash icon for delete with confirmation. Eye or compass icon to make it the mark in compass.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2021-08-02T00:00:25-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">ESP32 Learning: MQTT</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2021-02-17_esp32_learning_mqtt.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2021-02-17_esp32_learning_mqtt.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This is something I need to look into at some point: MQTT to send messages between ESP32 nodes on a local network. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There&#8217;s a group (MQTT4MR) that uses that to control sensors via JMRI (instead of C/MRI over RS485 wires).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;MQTT is also used typically with LoRa and such for larger distance networks, I believe using brokers/hubs. However that&#8217;s not really my first usage.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.adafruit.com/mqtt-adafruit-io-and-you?view=all&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://learn.adafruit.com/mqtt-adafruit-io-and-you?view=all&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;MQTT very high overview:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Designed for sensors &#8230; small payloads, infrequent data, not heavy streams.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Which is why it works well with LoRa (bandwidth vs distance, pick one).&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s a N-to-1 design: one server somewhere, multiple clients.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Either one device acts as a server, or a &#8220;broker&#8221; app/script runs on a network computer.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;JMRI uses the latter design for obvious reasons.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There are internet-wide brokers like adafruit.io&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;To connect to a broker, need server/ip, port, username, and a key.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The whole concept is a pub-sub:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Devices publish to the server.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Devices subscribe to the server.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Subscribers need to send a ping (e.g. every 5 minutes).&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Failing to ping disconnects the device.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Adafruit_MQTT is such a lib for arduino.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;They warn it&#8217;s single-duplex: a subscription message would be lost if the device is transmitting (ping or publication) at the same time.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Quality-of-service:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;QOS 0 = send publication message without checking they arrived.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;QOS 1 = send publication message with an OK / ack.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A &#8220;will&#8221; is a message defined such that the broker sends it when the client disconnects.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2021-02-17T00:00:58-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Conductor2&#8230; Kotlin vs Groovy again</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2021-02-07_conductor2_kotlin_vs_groovy_again.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2021-02-07_conductor2_kotlin_vs_groovy_again.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s been 2 years now that I started the rewrite of Conductor 2. Back then I chose Groovy, after trying Kotlin and deciding it wasn&#8217;t mature enough. In between, Kotlin usage has expanded a lot, so time to revisit.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(N.D.L.R.: the goal of the Conductor 2 project is to replace the custom language from Conductor 1 by a new DSL based on top of Groovy, or Kotlin. That would allow the script to have more flexibility.)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Overall Conductor2 with Groovy would work. Although the engine isn&#8217;t 100% operational, I rewrote most of the main automation script using Groovy and I updated it to a few new concepts that I miss in my current custom language. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The Conductor 2 design doc has more details on the new syntax.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Through the implementation, I evolved the syntax.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In conductor 1, we have basically a &#8220;global&#8221; namespace of &#8220;conditions --&amp;gt; actions&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;These can be expressed in the Groovy script using:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;On { closure expression return a boolean } --&amp;gt; { actions block }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;However I later rewrote the script to be more oriented for each route / block.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A route is defined as a sequence of blocks that must be traversed, and there are actions for each block. This avoids the soup of global state variables that must be maintained in Conductor 1 to achieve the same thing (e.g. &#8220;passenger train on this block going forward&#8221;). The new syntax looks like this:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Name = route {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Route = [&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;BlockNumber.forward {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;onStart { actions }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;onEnter { actions } then_after delay { actions }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;after delay { actions } then_after delay { actions }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;} ] }&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This scheme basically encodes most of the complexity in Conductor 1&#8217;s script, which is using timers and global state to limit actions to certain routes/blocks/directions.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;background-color:rgb(255, 255, 0)&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There are only 3 limitations from using Groovy in the script:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Symbols declared using &#8220;def&#8221; are local to the script. That goes for variables and functions.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Keywords cannot be overloaded (which is OK I guess).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;&#8220;--&amp;gt;&#8221; cannot be used as a method name. In Conductor 1, &#8220;--&amp;gt;&#8221; is a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;keyword&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;in the language. I couldn&#8217;t have that in a DSL based on Groovy.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;To circumvent the &#8220;--&amp;gt;&#8221; issue, when the script is loaded I am currently doing a string replacement from &#8220;--&amp;gt;&#8221; into &#8220;then&#8221;. The action &#8220;on { event } --&amp;gt; { action }&#8221; thus invokes the action.then(block) method. Both are interchangeable. That&#8217;s the real definition of syntactic sugar.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The &#8220;def variable&#8221; is a different issue. In the original Conductor 1 script, variables are defined as such:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Name = Type Parameter&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;E.g.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;B320 = sensor NS784&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;While using &#8220;def B320 = Block NS784&#8221; works in Groovy too, it makes the identified B320 local to the script and not readable by my engine. Consequently I can&#8217;t e.g. debug or display the variable. Although I can register all the block variables being created in a map, I would not have the name without repeating it as an argument. F.ex.&#8220;def B320 = Block B320 NS784&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A variation would be to forgo creating variables in the script and let the engine register them in the context. E.g. the definition could simply be:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Block B320 NS784&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;which would automatically create a variable named B320.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Finally the last issue with Groovy are the exception stack traces. They are incredibly kilometer-long, verbose, yet ironically totally meaningless -- I can&#8217;t figure out where an error is in the script based on the stack trace. So what&#8217;s the point, really?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One word on the groovy implementation. One thing I&#8217;m proud of is that all the engine is in &#8220;plain old boring Java&#8221; and not Groovy. All Groovy DSL examples use a Groovy source, but it turns out not to be a requirement. For each class exposed in the script, there are 2 Java classes:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The script&#8217;s top class a CScript.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The engine has a dagger autofactory &#8220;Script&#8221; matching that one CScript instance.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It provides for example a method block(name), which returns a &#8220;CBlock&#8221; type.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A script block is a &#8220;CBlock&#8221; class in the script, and a &#8220;Block&#8221; class in the engine.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The script CBlock only provides the API needed for the script and links to the engine underlying implementation Block instance to actually set and get state.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Thus the question is can all this be done using Kotlin. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Questions:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Do I want a &#8220;kotlin class&#8221; or a &#8220;kotlin script&#8221; or &#8220;kotlin as a DSL&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Am I forced to implement the DSL in kotlin?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Can &#8220;--&amp;gt;&#8221; be a method name?&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Note that if I&#8217;m rewriting Conductor from scratch (essentially what Conductor 2 does), it&#8217;s not out of the question to rewrite it fully in Kotlin as an exercise -- after all I&#8217;ve been wanting to do a Kotlin project for a while. It&#8217;s a bit orthogonal though, which is why the question is whether I am *forced* to implement the DSL in Kotlin. In the Groovy case, all the DSL examples are in Groovy yet it turned out to be trivial to use regular Java for the implementation.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Update: Bottom line is that Conductor 2 will remain using Groovy due to:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Kotlin DSL syntax does require parentheses and string quotation marks. Only Groovy has a special sugar syntax to avoid them (known as Groovy&#8217;s &#8220;command chain&#8221;)..&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There is no way to find the variables declared in a kotlin DSL script (not without some ugly reflection at least), which is something I want to rely on here.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I believe I would be forced to implement the DSL in kotlin; which I did not see as a problem per se. The implementation was indeed syntactically more compact in Kotlin than Groovy, yet the structure was the same and would result in the same code basically.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2021-02-07T00:00:48-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Kotlin and Rust</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-12-18_kotlin_and_rust.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-12-18_kotlin_and_rust.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I keep circling back to these and I think it&#8217;s time I consider some &#8220;real&#8221; project for it.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I tried Rust for rig4, and I wasn&#8217;t impressed. I think of C and Rust as &#8220;embedded&#8221; development languages, not server ones.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In fact the main reason I&#8217;ve never been impressed by neither Kotlin nor Rust is the debilitating amount of hype around them. Rust, like Go, has a lot of idiosyncrasies, not to mention arbitrary conventions on what should go where. It seems to be the new trend to endocrine the structure at the compiler level.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I see Kotlin as pure hype. There&#8217;s nothing Kotlin seems to add that can&#8217;t be done in plain ol&#8217; Java. Software engineers are kids, they always look at shiny new toys and disregard the perfectly valid ones they already have.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So anyhow, are there serious projects I can try to slowly accomplish on both? Ideally they would not be long-term projects, quick yet good enough to get some real sense of the languages and move on?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Wannabe projects I have around:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;ESP32 grade crossing. Would be ideal for Rust, except I don&#8217;t see good ESP32 support.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Conductor 2&#8230; Currently Groovy + Java. Could use Kotlin as a DSL instead of Groovy.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I did try Kotlin back then but its DSL was not enough for my needs.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rig4&#8230; Currently Java, with a (failed?) attempt at Rust. Could be using Kotlin.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One of the new directions for Rig4 is to have 2 tools (fetch + produce) so it&#8217;s possible for each to be in their own language. Seems a bit messy and quite undesirable though. If anything, it means dealing with two toolchains.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;On the Android side, I have no immediate small project. Otherwise Kotlin would be a good choice there. I have some small game idea, and those would be in Godot / GDScript likely.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There seems to be something for ESP32 with Rust:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;https://github.com/esp-rs&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;https://github.com/MabezDev/rust-xtensa &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;But one thing to remember is that I don&#8217;t just want &#8220;Rust on ESP32&#8221; (via llvmc, why not). What I really want is the Espressif SDK w/ &amp;nbsp;FreeRTOS API, and e.g. access to the camera, hardware, etc. As the project author says &#8220;I&apos;ve laid the compiler ground work, it&apos;s simply a case of writing the drivers and HAL&apos;s for it&#8221;, but really that&#8217;s the most important part of the project, there&#8217;s nothing of a &#8220;simple case&#8221; here. Without that, there&#8217;s an obvious chicken-and-egg problem.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The other side of the coin is that the whole point of the grade crossing project is to use OpenCV, which means I need OpenCV Rust bindings. There are some, but who knows how good they are &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;on ESP32&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;(I don&#8217;t care if Rust + OpenCV works on desktop).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So conclusion:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rust: No candidate.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Kotlin: Maybe Rig 4.3 reboot or Conductor 2.1 ?&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-12-18T00:00:52-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Blinking LED - PIR approach</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-11-30_blinking_led_-_pir_approach.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-11-30_blinking_led_-_pir_approach.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So here&#8217;s yet another approach: use a small PIR module, like the tiny &#8220;arduino&#8221; ones I use at Randall. This thing has a 1k &#8486; resistor on the output, and we can already trigger repeats &amp;amp; duration, so it&#8217;s essentially mirroring what a 555 timer would do and at the same time it would only blink the LED when presence is detected in the garage. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That would save on the battery by not blinking it when there&#8217;s no one around.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The sensor still needs to be powered.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Links from when I used that kind of sensor at Randall:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Sensor is a HC-SR501. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.mpja.com/download/31227sc.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Datasheet link via Aliexpress&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The SR501 uses a 7133 voltage regulator. We can feed it with the 5V from the AIU&#8217;s 7805.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The BISS001 drives the OUT pin directly via a 1k&#8486; resistor.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Main component is a BISS0001, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.ladyada.net/media/sensors/BISS0001.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;datasheet link from Ladyada&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Of note:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Input voltage: 5-20 V; and on another page it says 4.5-20 V..&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Power consumption: 65 mA.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Quiescent current: &amp;lt; 50 uA.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Output TTL 3.3 V.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Jumper L = single trigger, H = repeat trigger.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pot on the jumper side = sensitivity.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pot farther from the jumper = time delay (5-300 s).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Must be mounted horizontal for a variation left/right (e.g. pins at top or bottom).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One thing I had noticed at Randall is that these do not work when powered by 3 V. The unit &#8220;blinks&#8221; the output repeatedly. My guess is it fails to initialize (they go through a 1-min stabilization phase when first powered).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In my case, that means I need a 3-AA battery holder instead of my current 2-AA battery holder. It does work well with a 3-AAA holder.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;On the output side, I got the illumination I want using a 1k &#8486; resistor on the output and a green LED. Red one was a bit weak for the value, although I could remove the extra 1k&#8486;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I installed that and it works nicely as I want.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Update: I got about 1-2 years out of 3 AAA batteries powering this with moderate daily usage.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-11-30T00:00:59-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Blinking LED - Astable transistor/555 approach</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-11-25_blinking_led_-_astable_trans_c141203b.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-11-25_blinking_led_-_astable_trans_c141203b.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Another surely doomed attempt using an RC and a transistor. As expected, it did not work.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Although it is inherently flawed, I&#8217;ll put it here:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:266.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:407.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_52f52efd68160ca33dc64e8304a812b6f2d2d3b48034e6b0d18dc224b4b59df2i.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Transistor is a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.onsemi.com/pub/Collateral/2N3903-D.PDF&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;2N3904&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This obviously does create a delay starting the LED. Then there&#8217;s nothing to stop it. The futile idea was to add a second transistor between &#8220;ground&#8221; and the battery minus side to cut the circuit. Problem is that there&#8217;s nothing here that would generate something suitable to trigger it. Something like this:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;background-color:rgb(255, 255, 0)&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:293.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:402.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_ada9f29123ced05afc3358dcb1219bb93f7e3bfcd1ef34d88d8800744e6fae9bi.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Closer but obviously very wrong. That top Q3 transistor has to be at the &#8220;ground&#8221; level and mirror Q2, which I tried in the simulator but I screwed it up and didn&#8217;t want to get the embarrassingly bad schema. Anyhow, two Q2/Q3 in symmetry&#8230; &amp;nbsp;which seems familiar&#8230; if only that had been solved...&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;What I want is an &#8220;astable multivibrator&#8221;: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.electronics-tutorials.ws/waveforms/astable.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.electronics-tutorials.ws/waveforms/astable.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:202.18px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:378.50px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_eec0b66f5649f6a15e286b9f6819b6d3927f8786ad96f8bf770545fb01fb3b69i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:221.50px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:142.84px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_50ddce57274030c0c4446af06de32deb174028582e7b82c29ac48ec783fad4d4i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Let&#8217;s compute some values.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Desired: t1=0.5s, t2=2s (just making that up).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;T1 = 0.69 C1 R3&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;T2 = 0.69 C2 R2&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;C1 = 10u &#8658; R3 = 0.5 / 0.69 / 10e-6 = 72.4k &#8486;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rounding up: R3 = 100k &#8486; &#8658; t1 = 0.69 s&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;C2 = 10u &#8658; R2 = 2 / 0.69 / 10e-6 = 188k &#8486;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rounding up: R2 = 220k &#8486; &#8658; t2 = 2.2s&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Of note, to control the LED, we need a 3rd transistor on the emitter of TR1/TR2 as shown above. That&#8217;s interesting as I&#8217;d have driven it out of the Q output using a high value resistor.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:164.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:624.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_898fef18a25da19aa62de914a588316b5d22ecd0109719b02dbc2289e895145fi.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;So I built that circuit using 3 transistors &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.onsemi.com/pub/Collateral/2N3903-D.PDF&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;2N3904&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;. R1 = R4 = 10k &#8486;, R2 = 220k &#8486;, R3 = 100k &#8486;, C1 = C2 = 10uF. For the LED part, I have a 1.88 Vf red LED with a 470 &#8486; resistor.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For a better timing, I changed R2 to 1M &#8486; &#8658; t2 = 6.9 s.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That would bring t1+t2 to around 8 seconds. I measured around 8~9 s for t1+t2.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Duty cycle is t1 / t1+t2 = 9.1% LED on.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I am failing to measure actual current usage with a multimeter.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;With the simulator in National Instruments Multisim:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:292.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:624.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_98644137b548dd32953b71467de1514e8c820e5ce2090a8a594a12583d5361a7i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I have no idea what kind of transistor they are modeling here. Doesn&#8217;t look like a 2N3904.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This gives me A=5 mA when the LED is on, and 0.3 mA when the LED is off.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:121.33px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:624.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_b354d355cf6d64f7cde8140a959c14bfa2a717bb4ee7a696975209d2e2b5a403i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Combined with the duty cycle: (0.69s*5mA + 6.9s*0.3mA) / 7.59s = 0.72 mA/s = 2618 mA/h.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Technically a bit lower as the LED is not fully at 5 mA while on; it turns on progressively. But even if the on cycle was half current at 2.5 mA, it would be (0.69s*2.5mA + 6.9s*0.3mA) / 7.59s * 3600 = 1800 mA/h.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A typical AA alkaline battery has a capacity of 2500 mAh. Since I use 2 of them, I&#8217;d expect this to last 2~3 hours before the batteries are depleted.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Update: Tried this and it lasted at least 3 days with little impact on battery. That 300 uA quiescent current seems like a lot.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt;font-weight:700&quot;&gt;555 timer&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The obvious choice is to go with a 555 timer. I realize I don&#8217;t have any around.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Now there are plenty of schematics built around the 555. What I want is one giving me a configurable square wave. Like this one: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.electronics-tutorials.ws/waveforms/555_oscillator.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.electronics-tutorials.ws/waveforms/555_oscillator.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So let&#8217;s compute the RC values needed.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Desired: t2=0.5s, t1=2s (just making that up).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;T1 = 0.693 (R1 + R2) &amp;nbsp;C1&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;T2 = 0.693 R2 C&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;C=10u &#8658; R2=0.5 / 0.693 / 10e-6 = 72k &#8486;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rounding up: R2 = 100k &#8486; &#8658; t2 = 0.693 s&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;R1= 2 / 0.693 / 10e-6 - 100k = 188.6k &#8486;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rounding up: R1 = 220k &#8486; &#8658; t1 = 2.2 s&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Duty cycle is (R1+R2)/(R1+2 R2) = 76%&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There are variations to improve on the duty cycle using diodes.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As a demonstration, that was successful using the transistor version of the astable.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&#8217;d see some value in having a few 555s around, as it makes this kind of project a breeze, so that&#8217;s something to look into.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I do realize I do not know how to estimate battery longevity.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Side note: There are cheap &#8220;10x 555&#8221; deals for $1 on ebay from China of course.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;There are also packages with e.g. &#8220;120 pcs&#8221; of &#8220;IC assorted&#8221; components on Amazon. Not sure they are interesting. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3mb3AX9&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Let&#8217;s take one listing&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;and understand what the &#8220;ICs&#8221; are:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;LM324&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.mouser.com/datasheet/2/149/LM324-195664.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Quad AmOp&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;, up to 32 V, 1.3 W.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;LM339&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.ti.com/lit/ds/symlink/lm339.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Quad Differential Voltage Comparator&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;, up to 30 V, 20 mA out.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;ULN2003AN&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.ti.com/lit/ds/symlink/uln2003a.pdf?HQS=TI-null-null-digikeymode-df-pf-null-wwe&amp;amp;ts=1606439103966&amp;amp;ref_url=http%253A%252F%252Fwww.ti.com%252Fgeneral%252Fdocs%252Fsuppproductinfo.tsp%253FdistId%253D10%2526gotoUrl%253Dhttp%25253A%25252F%25252Fwww.ti.com%25252Flit%25252Fgpn%25252Fuln2003a&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Darlington Array&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;(aka 8x 500 mA output drivers). I have 4x, never used.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;ULN2803APG&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Same, from &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://cdn-shop.adafruit.com/datasheets/ULN2803A.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Toshiba&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;LM358P&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.ti.com/lit/ds/symlink/lm358.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Dual AmOp&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;,up to 30 V, 20 mA out.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;LM386&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.ti.com/lit/ds/symlink/lm393.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Low Voltage Audio Amp&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;, in 4-12 V, gain 20-200. 300 mA out.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;LM393&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.ti.com/lit/ds/symlink/lm393.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Dual Comparators&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;, up to 30 V.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;NE5532P&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.ti.com/lit/ds/symlink/ne5532.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Dual Low-Noise AmOp&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;NE555P&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.ti.com/lit/ds/symlink/ne555.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;&#8220;Precision&#8221; Timer&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;UA741CN&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.ti.com/lit/ds/symlink/ua741.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;General Purpose AmOp&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;, the typical 741...&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;JRC4558D&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- Aka RC4558, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.ti.com/lit/ds/symlink/rc4558.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;General Purpose AmpOp&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;PC817&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.farnell.com/datasheets/73758.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;General Purpose Photocoupler&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;. I have a set of 10x of similar ones.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So bottom line here we have 1 type of timer, 1 type of optocoupler, 6 types of AmOp, 2 types of comparators, and 2 types of darlington drivers. I don&#8217;t see myself using many of these. I have so far used 1 of the optos I have (and just for testing, although I was supposed to need 10x for a Randall project), and I never used the 2003 drivers I got (that was to drive mechanical relays for the sprinkler project which I never started), and here I would be using maybe 1x 555 timer for a quick test (for a project I already decided I&#8217;m unlikely to finalize using a 555).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-11-25T00:00:48-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Blinking LED -- Arduino/ESP32 approach</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-11-24_blinking_led_--_arduino_esp3_ae4e30a8.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-11-24_blinking_led_--_arduino_esp3_ae4e30a8.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;An even easier way to blink a LED is to not use a LED. An ESP32 or an Arduino Nano both have a LED onboard. All I need is the smallest program that would turn on the onboard LED on a timer/interrupt, and ideally keep the CPU sleeping/idle/suspended the rest of the time.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Some ESP32 dev boards come with a connector designed to power them from a battery, like the &#8220;Heltec Wifi Kit 32&#8221; ones I have.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The Arduino Nano dev boards have 4 leds (RX, TX, PowerOn, IO). The Power-On is always one when the device is powered. The trace leading to the LED can be cut. A quick online search indicates it can be powered by 3xAA (~ 6V) using the last 2 pins (GND / VIN). However the same research indicates on a Nano board, the FTDI/USB chip will use about 30-40 mA all the time, rendering the effort quite moot.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Another choice is the Digistump Digispark 1. It also has a green Power-On LED as well as an IO LED.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What about the Arduino? How do you &#8220;suspend&#8221; the Atmega328P in a Nano or the ATTiny?&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;From this thread: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://thekurks.net/blog/2018/1/24/guide-to-arduino-sleep-mode&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://thekurks.net/blog/2018/1/24/guide-to-arduino-sleep-mode&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;avr/sleep.h defines a sleep_enable() + set_sleep_mode(SLEEP_MODE_PWR_DOWN).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It also indicates the only way to wake it up is using an external RTC timer on an interrupt (for example an Adafruit DS3231 Precision RTC controlled via I2C).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The ESP32 for sure has APIs to put it in deep-sleep mode. It&#8217;s designed for that: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/system/sleep_modes.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/system/sleep_modes.html&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;esp_bluedroid_disable(), esp_bt_controller_disable(), esp_wifi_stop().&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;rtc_gpio_isolate(pins...) to disable pullups/pulldowns on IOs.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;esp_light_sleep_start() or esp_deep_sleep_start().&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;esp_sleep_enable_timer_wakeup() &#8658; wake up from deep sleep using timer.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Can the ULP Processor be used to trigger the LED directly?&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-guides/ulp.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-guides/ulp.html&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;No, it won&#8217;t drive IOs but it can wake up the processor.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-11-24T00:00:20-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Blinking LED -- Naive RC approach</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-11-17_blinking_led_--_naive_rc_approach.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-11-17_blinking_led_--_naive_rc_approach.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Goal: blinking led in the garage when the side bolt is closed. Ideally battery powered.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Idea is to have it blink to save energy and work longer in battery.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What is the simplest way to blink a led, or more exactly the less current usage?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;How much can I expect of e.g. an AA battery? Or a couple add I have a holder for that.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Random idea: use a led forward voltage, resistor slowly charging a cap and when above the led voltage it would discharge.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.digikey.com/en/resources/conversion-calculators/conversion-calculator-time-constant&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Resistor-Capacitor (RC) Time Constant Calculator | DigiKey Electronics&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;To compute a RC time:&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Tau = R.C = 63% of final charge time.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;This does not work, as tried in N&lt;/span&gt;&lt;span&gt;ational Instruments Multisim&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:251.00px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:466.00px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_693beb7f72ccf4ee5ca77dfcfb7f372a859f5c0bba36ee07e649f4920b415610i.png&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-transform:rotate(0.00rad) translateZ(0px);border:0.00px solid #000000;display:inline-block;height:375.50px;margin:0.00px 0.00px;overflow:hidden;transform:rotate(0.00rad) translateZ(0px);width:385.30px&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;img_bb24cad6604c86c231cc5b0431790869ba6c4c7fef5894fb122eb4dc61c9d4f2i.jpg&quot; style=&quot;margin-left:0.00px;margin-top:0.00px&quot; title=&quot;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-11-17T00:00:40-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Remote plug + motion</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-11-12_remote_plug_motion.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-11-12_remote_plug_motion.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For the daily Xmas lights, what I&#8217;d like is to have:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Person detection, likely using an existing PIR.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Light detection, to turn it on when it gets dark.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Server/wifi control so that I could rifle it from the phone.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One option is to take the existing timer plug and control it from an ESP32. Doesn&apos;t even have to be a cam one, using a PIR in max range could work.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&apos;d like to have a second ESP+PIR across the room for more coverage. Whenever any of these detect motion, light would stay on for e.g. 15 minutes. The second ESP can send an ESP-NOW data packet to the first one.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A local button toggle would be ideal.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The other option would be to use a dedicated wifi plug like the sonoff. I do want something absolutely local that does not use any cloud.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-11-12T00:00:50-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Remote Plug Control</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-10-11_remote_plug_control.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-10-11_remote_plug_control.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;8 Channel Smartphone Relay WiFi Remote Control Kit: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3VZSvw1&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/3VZSvw1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Note: Not a SainSmart, seems like &#8220;TOSR08&#8221; but really looks like the former&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;More description in the kit here: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.tinyosshop.com/8-channel-wifi-relay-module-remote-control-kit&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.tinyosshop.com/8-channel-wifi-relay-module-remote-control-kit&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;[$88 !!]&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;TOSR0x module has a FT232RL USB-to-UART input + 5V barrel DC&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Control done by sending one byte.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Module has a switch: USB or separate &#8220;extension port&#8221; (not both)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;And the kit provides:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;WifiBee wireless module&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;XBee USB adapter&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(so wait, do they mean phone &amp;gt; wifi &amp;gt; wifi-to-xbee &amp;gt; xbee-to-usb &amp;gt; usb-to-uart? Very likely.)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A better option is to get the TOSROx module and plug that on an arduino / ESP32.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;But that $88 cost is definitely a non-starter.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Sonoff 4-channel &#8220;R2&#8221; wifi w/ Android app [$28]: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/3VXmuVf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/3VXmuVf&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Is &#8220;R2&#8221; a &#8220;revision 2&#8221;? It must be as there&#8217;s a &#8220;4CHR3&#8221; for about the same price.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Described as &#8220;is an ESP8285 WiFi module based 4 channel (4-way) WiFi wireless switch.&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Somehow &#8220;Sonoff&#8221; and &#8220;ITEAD&#8221; are the same thing/company/something related?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.itead.cc/wiki/Sonoff_4CH&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.itead.cc/wiki/Sonoff_4CH&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; Question: is there an API to use that without their app? &#8658; Not the 4CH one.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://developers.sonoff.tech/sonoff-diy-mode-api-protocol.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://developers.sonoff.tech/sonoff-diy-mode-api-protocol.html&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&#8220;The DIY Mode is designed for IoT home automation users and developers who would like to control the SONOFF device via existing home automation open-source platform or local HTTP client instead of eWeLink App.&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Supported: &#8220;BasicR3&#8221;, &#8220;RFR3&#8221;, &#8220;MINI&#8221;, &#8220;D1&#8221; (dimmer) (these only toggle 1 output)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One direct application would be control of the xmas lights from server -- time based and/or image based. Ideal detection would be &#8220;any kind of motion detection&#8221; in living room, kitchen, and hallway leaving the lights on for 10+ minutes.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;An ESP32-CAM with the widest lens possible would be ideal, or even 2 of them (one by chimney).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Options on how to control the lights:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;DYI:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Add a 3-to-5V converter.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Add a 250V 2-channel relay (to switch both L1+N).&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Use something like a Sonoff or a more &#8220;serious&#8221; option for the plug control.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Modify an existing timer switch. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The one I&#8217;m using right now is essentially a relay switching the hot wire (small prong of the polarized plug).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It has 2 boards: power + relay vs control board.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Connector with 3 wires: Vss, Vcc, On. (voltages?)&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-10-11T00:00:30-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Of the Importance of Unit Tests for Server-side Projects</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-10-06_of_the_importance_of_unit_te_e8767268.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-10-06_of_the_importance_of_unit_te_e8767268.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rig4j has some unit tests. As with other unit tests, I&#8217;m always dubious of their quality, coverage, or usefulness. Writing these tests takes a lot of time, and maintaining them is a PITA.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;However, I did a change in Rig3. I was glad to see this old project had some tests. Lots of verbose warnings when running them, but at least they gave me a baseline for the one change I had to make&#8230; it showed me how my own code was running, since I had largely forgotten. And I was able to break the tests as expected with my change, then adjust the tests. Thus they served their role in a TDD scenario.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Now I&#8217;m looking at Inkblot2 and I skipped the testing part for all the React code. After all it&#8217;s just presentation, right? I have only a couple unit test methods for computational functions.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A decade ago, I wrote a little backend for Timeriffic to enable themes per user. It&#8217;s just a simple REST API served by a Go app-engine with a CRUD admin frontend. And it&#8217;s written in Go 1.1 (IIRC), and now I need to update to Go 1.9. I seriously hope I wrote some tests, and here&#8217;s what I expect of these tests:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;First run them ideally with a Go 1.1 runtime (assuming I still have that), and validate they work.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Next run them with a Go 1.9 runtime, and if the app builds, see which part of the test works or breaks. In essence, I just want a baseline of what&#8217;s broken by the change.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Which parts do I expect to be covered?&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;On the backend REST API side, a get without a valid auth, and a get with a valid auth. That last one should also cover reading from a mock db.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;On the admin frontend, render the page without login, with login, and validate a simple CRUD usage (create an entry, see it listed, remote it, see it gone).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;These tests are not designed to do 100% coverage, yet they should cover the basic usage scenarios. Even if a full CRUD cycle is not exercised, the viewing part should be tested, e.g. login and display an empty list, login and display a list with known data.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I want to emphasize this is not the TDD philosophy here. We&#8217;re not using tests to validate every single inch of the app, every single little possible case. At the contrary, the tests should cover large strokes, making sure the obvious is not broken.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Thus Inkblot2 really needs something like that.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I do remember that my little dabbing in Go did not show great ways to mock whole components such as database or logging auth. That&#8217;s one of the reasons I went back to liking Java all because of Dagger and how it enables that trivially, all at compile time. I&#8217;m curious what React JS has to offer in that regard.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-10-06T00:00:38-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Rig4j, and an update on Rig4r</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-09-29_rig4j_and_an_update_on_rig4r.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-09-29_rig4j_and_an_update_on_rig4r.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In my perpetual reshuffling of home projects, I need to bump up rig4j, and abandon rig4r.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rig4r: It was somewhat useful to learn Rust lang. However I really don&#8217;t care much about it. That language does not solve any problem that I don&#8217;t really have.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That said, it wasn&#8217;t a complete loss. The rig4r project showed me there&#8217;s some value in splitting rig4 in a gdoc-downloader vs a generator. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In the current train site+blog, a simple blog update results in a 6-7 minutes rig4j run time. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;90% of that time is in checking images/graphics have not changed -- it takes about forever to pull them off gdoc using the current gdoc API&#8230; this will get addressed whenever I focus on rig4j again and implement the caching I specified from the start yet never fully implemented yet.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s also worth noting that the current rig4j is really &#8220;0.1-exp&#8221;. &amp;nbsp;There would be some value in taking the learnings from that experiment -- what worked well, what did not work --, cross-reference that with the initial spec, and maybe re-implement from there.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The main pain point is looking up all these gdoc images instead of relying on cached blobs.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The second pain point is the HTML exported by gdoc. I have it &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;somewhat&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;cleaned up, yet I think even more could be done. On one hand I&#8217;d like to strip it down as much as I can to the level of what is/was supported by izumi&#8217;s syntax, and on the other hand I&#8217;d like to retain some complex elements such as tables.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-09-29T00:00:41-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Java 11</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-09-28_java_11.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-09-28_java_11.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The latest Debian Busty offers Java 11 via OpenJDK. There&#8217;s also a comment on the OpenJDK web site that from now on all official Java releases are done via the OpenJDK (site/framework)... does that mean one no longer has to wonder about Java vs OpenJDK compatibility? That would be nice.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Of note: Debian has an openjdk-11-headless&#8230; no more need to drag X libs pointlessly.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It also begs the question of &#8220;what&#8217;s new in Java 11&#8221;... and what can be used on Android.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://simply-how.com/getting-started-with-java-11&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://simply-how.com/getting-started-with-java-11&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Java 9:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A new concept of &#8220;modules&#8221;, a &#8220;self describing collection of code and data&#8221;.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Jlink, a tool with a link time phase vs compile time phase, using modules.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Jshell, a REPL &#8230; that can come in handy.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Multi-release JAR files: version-specific of classes in the same JAR.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Private methods on interfaces, which can be used by default methods.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rx compliant Flow API.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Factory/collections methods: Set.of, List.of&#8230;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Stuff I don&#8217;t care, e.g. garbage collector changed. (skipping those below).&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Java 10:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;Var&#8221; keyword for local type inference.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Optional.orElseThrow.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Unmodifiable collections: List.copyOf, etc.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Java 11:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;HTTP Client API (do I care?)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;Singe-file source-code programs&#8221;... sounds like scripting to me.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;Var&#8221; keyword can be used in lambda parameters.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Java 12:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;More garbage collector whatever this or that.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Mostly nothing except some *preview* of a condensed switch/case/break syntax (e.g. the &#8220;break&#8221; also acts as a &#8220;return&#8221;, and can be further condensed to an -&amp;gt; arrow syntax)... meh.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Bottom line: mostly nothing to see here.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So overall a fairly incremental update to the language. The most notable useful thing is the &#8220;var&#8221; keyword. Since it is type-inference, I expect it can generate backward-compatible bytecode running fine with older JREs. New APIs like collections would obviously require the latest JRE to run.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;We still don&#8217;t have support for &#8220;safe-dereference&#8221; (?. which was proposed for Java 7!) and folks horrendously suggest using Optional instead.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For gradle, the usual:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;targetCompatibility = 11&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;sourceCompatibility = 11&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Or&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;compileOptions {&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; targetCompatibility JavaVersion.VERSION_12&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &amp;nbsp; sourceCompatibility JavaVersion.VERSION_12&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Thus it seems to me overall I&#8217;d want something along the lines of &#8220;target 8&#8230; source 11&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-09-28T00:00:33-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">AWS vs Firebase&#8230; Seeds?</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-09-22_aws_vs_firebase_seeds_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-09-22_aws_vs_firebase_seeds_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Currently working on Inkblot v2 Scoring Web App.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The suggestion was to evaluate AWS vs Firebase (nodejs based, not Android as I usually do).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;AWS is working really well work Inkblot v2 right now, so there&#8217;s little incentive to also do a Firebase version.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&#8217;d still like to do a web app using Firebase to have a comparison with AWS, and Seeds seems like a good candidate for this. I have the Android app working fine, however my old Chrome extension does not work anymore since the AppScript-based apps have been deprecated.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rebuilding it using Firebase would be a good target:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rely on their free tier, and measure cold latency (one of the big drawbacks of app engine in their free tier, which I do not see in AWS).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Nodejs + React + Bootstrap, similar to what&#8217;s used in Inkblot v2.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Google-only auth&#8230; how well do they integrate that in Firebase?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Backend storage&#8230; how does it compare with GraphQL + DynamoDB?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Note: the only thing I really need is to store the GDrive doc id.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Deployment/hosting&#8230; this one would likely go on something like &#8220;seeds.alfray.com&#8221;.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Updated 2020-09-24: That project could also be a candidate to look again at Angular. I remember looking at Angular before React and couldn&#8217;t figure out the model&#8230; However now that I&#8217;m familiar with React (non native), looking at Angular a second time would be worth it, for a good comparison. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-09-22T00:00:10-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Current Project List</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-09-09_current_project_list.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-09-09_current_project_list.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Current projects, either actually ongoing or started/pending:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Conductor 2, the rewrite using a Groovy DSL. Want to continue. Perpetual hold.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Low interest as the current version is &#8220;working fine&#8221; (with its limitations).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I would have some renewed interest combined with home usage.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Timeriffic 3&#8230; &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;2019 attempt did not work, it crippled most of the functionality, the impl was borked, it didn&#8217;t even really work well for basic stuff.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That needs a full reboot if it&#8217;s going to go anywhere.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This could be a candidate to do an app using RxJava + Kotlin.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Jump Godot game.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This is mostly a &#8220;technology&#8221; demo for Godot 3d to understand limitations.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Got initial MVP (without the IAB part) on Play.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There is no interest in making it a full blown complex play.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I should take the MVP down, e.g. keep it alpha instead of public.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Asqare.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A reboot using Godot 2d.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Sudoku&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;May have some limited interest if it were to be a Kotlin + RxJava test bed.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Risks having the usual issue of not going past the MVP.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Dcc Cab:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Current version is on Play. Not advertised much. Does what I need from it.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rig4r:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Limited interest in Rust itself, however I can see how it is appropriate here.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;May continue&#8230; slowly?&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;ESP32 vision.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The 2 initial targets for this are crossing signal and virtual block detection.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Starting one and exploring a tech is easy and fun. Jump/Godot is an example where I had fun starting it. It fell a bit flat once I had the premise of a working version. I lack a push to complete these, and once the novelty wears off, there&#8217;s little incentive to continue adding to it instead of focusing on another idea.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For Rig4r, the initial objective was to spend a long week-end learning what Rust is all about. I&#8217;ve done that. I have no specific love for the new language, but neither did I for any other new language I&#8217;ve tried recently (Haskell, Go, Kotlin,... and now Rust). That&#8217;s because these languages do not fill any need that I don&#8217;t really have -- they really do not do anything Java can&#8217;t already do, no matter what the fanboys say. For example I&#8217;m not really happy with the current implementation of Rig4j, and that&#8217;s really not a Java/Dagger issue at all. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;No amount of language hype is going to magically fix an implementation.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The other realization I made with Rig4j, the Java version, is that external libraries are what matters. In this case, the availability of a G Drive API and the HTML jsoup parsers were keys. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-09-09T00:00:25-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Rig4 Rust?</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-08-30_rig4_rust_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-08-30_rig4_rust_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Would a rig4 reboot be a good target for Rust?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Rust and Google drive api: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.rs/google-drive3/1.0.14+20200618/google_drive3/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.rs/google-drive3/1.0.14+20200618/google_drive3/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Rust and html soup parsing: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.rs/scraper/0.12.0/scraper/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.rs/scraper/0.12.0/scraper/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;and some more references.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A real reboot needs to focus on 2 different issues:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The GDrive api to fetch docs is slow as molasses. It would make sense to separate this process, e.g. download and cache locally. The obvious issue is that fetching a doc requires parsing it to find its dependencies.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;More robust sanitizing of that drive html into rig 3 syntax.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The tree parser and generator.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The focus here should be on caching to avoid fetching from drive as much as possible.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The other focus is on parsing that html and stripping it even more than I do now.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There could be 2 tools:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rig4 docs downloader that takes drive docs, the index, the blogs, and generates local rig4 files, updating assets when needed.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rig4 generator that only works locally.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-08-30T00:00:11-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Asqare</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-08-30_asqare.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-08-30_asqare.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Currently Asqare is totally off Google Play due to an injection vulnerability in the SQL code handling the score saves. The issue is rather irrelevant, but the automated Play tools don&#8217;t care and backlisted the app years ago.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rebuilding it is possible&#8230; One reasoning a while ago was to do a reboot.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Today if I had to do Asqare again, I&#8217;d do it in Godot.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-08-30T00:00:21-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">GodotLib</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-08-29_godotlib.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-08-29_godotlib.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When a &#8220;custom Android build&#8221; gets created from the Godot android export, the generated GodotApp contains references to a GodotLib, which is provided as an AAR in the project.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A quick look at it in Studio shows references to a lot of stuff like event management, but also Payments classes, etc. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So let&#8217;s look at what Godot has that is linked to Android:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.godotengine.org/en/stable/tutorials/plugins/android/android_plugin.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.godotengine.org/en/stable/tutorials/plugins/android/android_plugin.html&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A &#8220;Godot Android plugin&#8221; is an independent AAR that one can add to a Godot project, and then use from the GDScript.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;For example there&#8217;s a plugin for Oculus VR, and an official one for &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/godotengine/godot-google-play-billing&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Google Play Billing&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;compatible starting with Godot 3.2.2.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.godotengine.org/en/stable/tutorials/platform/android_in_app_purchases.html#migrating-from-godot-3-2-1-and-lower-godotpaymentsv3&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;GodotPaymentsV3&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;is an older library that is superseded by the above Play billing plugin.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-08-29T00:00:23-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Godot and 3d</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-08-21_godot_and_3d.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-08-21_godot_and_3d.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Now it&apos;s time to take [...] and understand Godot with 3d. &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Link to blender 2 godot exporter:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://gamefromscratch.com/blender2godot-add-on-released/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://gamefromscratch.com/blender2godot-add-on-released/&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Points to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.zammedev.com/home/wip_projects/blender2godot&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.zammedev.com/home/wip_projects/blender2godot&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Points to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://gitlab.com/Zamme/blender2godot&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://gitlab.com/Zamme/blender2godot&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This seems like a good way to get started. Create something in Blender and convert it to Godot.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One obvious teaching from some games is that a 3D game can basically be just a 2d game with a 3d rendering. That is probably the easiest way to get started.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-08-21T00:00:17-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Rust Language?</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-08-13_rust_language_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-08-13_rust_language_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Here&#8217;s an interesting topic to look into: Rust language, which presents itself as a Go / C++ alternative. But more importantly, how would it far in the content of:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;ESP32 or Arduin dev&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Integration with current libraries for Arduino.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Integration with &#8220;generic&#8221; libraries such as OpenCV.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;There&#8217;s something here for ESP32: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/MabezDev/xtensa-rust-quickstart&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/MabezDev/xtensa-rust-quickstart&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Several comments indicate that the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;rustc&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;compiler can target ARM CPUs; and while not stated I&#8217;m guessing that would exclude all the AT-based Arduinos.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;OpenCV bindings for Rust: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.rs/opencv/0.45.0/opencv/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.rs/opencv/0.45.0/opencv/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So that seems like it is a choice.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Apparently Rust stuff is packaged in &#8220;crates&#8221; and using a tool named &#8220;cargo&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;This &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.reddit.com/r/rust/comments/3lhygu/rustfacedetect_a_nontrivial_example_using_opencv/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;reddit post&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;indicates that &#8220;The only complete binding to the C++ API is &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/kali/opencv-rust&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;opencv-rust&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, not to be confused with &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/woxtu/rust-opencv&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;rust-opencv&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/renato-zannon/rust-opencv-sys&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;rust-opencv-sys&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;, which bind the C API.&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Here&#8217;s a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.sheshbabu.com/posts/rust-wasm-yew-single-page-application/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;random post&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;on doing a React-like single page web application. One keyword I see often is &#8220;documentation is sparse&#8221;. One thing a lot of people misunderstand with new languages is that doxygen-style or javadoc-style API documentation is not a developer usage guide.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Apart from that, code examples seem fairly Go-like in spirit. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(Future self comment: I&#8217;ve made 2 attempts at jumping on the Rust hype bandwagon so far, one for server and one for ESP32, and these efforts didn&#8217;t go anywhere. I wasn&#8217;t exactly impressed.)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-08-13T00:00:17-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Embedded Arduino-likes and exchanging data</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-07-22_embedded_arduino-likes_and_e_598b7c4c.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-07-22_embedded_arduino-likes_and_e_598b7c4c.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Interesting comment &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.adafruit.com/how-to-choose-a-microcontroller?view=all#the-nrf52-feather-2990400-7&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;here in an Adafruit guide&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&#8220;If you&apos;re new to wireless communication and want to use BLE to make a group of microcontrollers talk to each other, we recommend you &lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;STOP RIGHT NOW AND GO LOOK AT THE PACKET RADIO FEATHERS&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;What they call &#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.adafruit.com/how-to-choose-a-microcontroller?view=all#step-2990377&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Packet Radio Boards&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221;, namely &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://cdn.sparkfun.com/datasheets/Wireless/General/RFM69HCW-V1.1.pdf&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;RFM69&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;modules or RFM95 Lora (19 kpbs at 100m / 500m line of sight respectively) in either 433 MHz or 900 MHz.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.adafruit.com/adafruit-feather-32u4-radio-with-rfm69hcw-module/overview&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Feather&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8221; is the Adafruit name for an ATmega32u4 that has an RFM69 module directly on it. The RFM module uses the 3 SPI pins (SCK/MOSI/MISO).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.adafruit.com/adafruit-feather-32u4-radio-with-rfm69hcw-module/antenna-options&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;antenna&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;for the US 915 MHz is simply a 3 inch long wire.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Guides:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.adafruit.com/adafruit-rfm69hcw-and-rfm96-rfm95-rfm98-lora-packet-padio-breakouts&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Adafruit RFM69HCW and RFM9X LoRa Packet Radio Breakouts&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://learn.adafruit.com/adafruit-feather-32u4-radio-with-rfm69hcw-module/using-the-rfm69-radio&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Using the RFM69 Radio&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;with &#8220;RadioHead RFM69 library&#8221; example. That library has a simple send/receive for a binary blob buffer.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(Future self comment: this, of course, is a bit Adafruit selling their own stuff&#8230; Although there&#8217;s merit in the suggestion above especially for people who feel stuck on Arduino for some reason, yet there&#8217;s an alternative to consider here: ESP-NOW on any ESP32).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-07-22T00:00:20-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Projects Status</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-07-18_projects_status.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-07-18_projects_status.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Current projects, in no particular order:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Non-started un-ended research with OpenCV / ESP32-CAM.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Interested in treating these as pages / research articles on the train site.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Start with one such page for the &#8220;Layout Vision / Cam Proxy&#8221; one.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Cab Engineer:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Basic version was released on Play.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Was not able to get Wear part distributed via Play.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Turnout card does not scale well with many turnouts.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Publicly available but not advertising it right now.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Should list it on the train site.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Quote Otter:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Stuck in whatever-land.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Randall:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Nothing going on right now. Completed my &#8220;cam proxy&#8221; prototype.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Conductor 2&#8230; limbo state. Want it. Tons of work to get there.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Of interest:&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Circuit breaker for the Stockton Station&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One more LED for T150.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Myriad more options like more block detectors, more turnout controls, and the whole Fairfield idea.&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rig4j&#8230;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Some gaming project.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So from all of that, what do I want to start with?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&#8217;d say start with Godot and do something with it. It&#8217;s summer time. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Speaking of Godot, there are options: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://defold.com/about/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://defold.com/about/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;Defold, a &#8220;turn key game engine&#8230; Lua or C++&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-07-18T00:00:39-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Track Detection &amp; OpenCV</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-07-15_track_detection_opencv.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-07-15_track_detection_opencv.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Although this should be in its own research doc, here&#8217;s a summary of two separate things I&#8217;d like to get done with model trains image detection. There&#8217;s some overlap yet they are different.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The first research subject is automated mapping: given a static image, find all tracks in the image, and create a visual schematic map of the network. There are two possible representations:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Tracks form single paths (both lines and curves) with node intersections matching the frog of turnouts.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Track segments -- lines, curves, and turnouts.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The first part of the problem is finding tracks in an image. &lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A track is defined as two parallel rails with perpendicular ties in the middle. An additional constraint is that rails always have the same distance. Some obvious complications arise when we have parallel tracks. Outlier cases such as heavily weathered tracks where ties are invisible could be omitted. The outlier case of road crossings should be optionally treated though.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Turnouts may be more difficult to detect. One approach is consider them the intersection of tracks, using a pure path/node approach. Turnouts geometry can be complex (e.g. double slip, X crossings). A first approach could just detect the &#8220;typical&#8221; simple turnout cases -- yard ladders, single sidings, and simple crossovers.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Elevation is expected to be a problem, as detailed below.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The second part of the problem is to be able to map a layout by taking a series of &#8220;aerial&#8221; pictures, mapping track on each picture, and then merging them by detecting the edge overlaps.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One simplification is to get images that are as much &#8220;from the top&#8221; as possible. Some kind of perspective should be expected and corrected. However this erases elevation and would make it nearly impossible to detect.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Eye-level images would not be ideal as perspective is distorted and can make tract analysis a lot more difficult. There might be some compromise e.g. 45 degree view that would make the track still visible yet elevation possible to account for.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The second research is detecting trains on the track. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;background-color:rgb(255, 255, 0)&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There are two axes for this: simplified for block detection, or fully automated.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Simplified mode:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;User draws / manually places markers on the image delineating block limits. Can include both linear track and curved portions. Interactive/visual confirmation is needed.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Some level of automated calibration is desired e.g. if camera/track moves (specific to my home segment test tracks).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Block detection can use a simple image diff algorithm detecting motion on the specified blocks.Stopped trains become invisible.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Block detection can rely on a diff algorithm by comparing the track vs an &#8220;idle&#8221; state registered e.g. when the system starts.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In all cases, we should be able to detect start/end parts of a train with respect to the defined block.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Fully automated mode:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Relies on the previous research to detect track in the image.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;User still needs to map block boundaries, but this time against the schematic track.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Assuming we have an algorithm that detects tracks by detecting parallel rails and ties in between, block detection can be done by running the algorithm again on known block boundaries and checking where track cannot be detected because a train hides the track.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;We should be able to detect start/end parts of a train with respect to the defined block.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Latency and analysis time become interesting. The automation goal is to be able to not only detect when blocks are occupied, but also to stop trains. For example, detect a train is arriving in a station block, slow it down, and then use the start/end occupancy feedback to stop it where desired.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Related CV keywords:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Background segmentation.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.pyimagesearch.com/2015/01/19/find-distance-camera-objectmarker-using-python-opencv/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Distance finding via the &#8220;triangle&#8221; algorithm&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A third potential research is being able to identify trains. That part is a lot more open ended:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Track-level camera and reading text of cars/engines going by. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Obvious question of speed making the image fuzzy.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Aerial view and color/pattern matching known cars/engines top views.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This would be more of a fuzzy detection / only detecting classes.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The idea here is to have dedicated &#8220;detection&#8221; hotspots (e.g. entrance/exit of yards) that can detect some engine numbers. Then some semantic model associates the presence of a track somewhere to that detected number based on continuity as the sole logic predicament. This only fails if e.g. trains are added/moved manually.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-07-15T00:00:36-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Android dark mode</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-07-13_android_dark_mode.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-07-13_android_dark_mode.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Android development: what is needed to do a theme changer that supports light, dark, and system dynamic theming?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;A good candidate is &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;Seeds&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-07-13T00:00:13-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">OpenCV and JavaCV</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-06-05_opencv_and_javacv.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-06-05_opencv_and_javacv.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;JavaCV&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;: Used in Randall&#8217;s camera proxy app to capture data from an RTSP h264 / MJPEG feed, and produce jpeg images or publish an MJPEG web (via a Jetty web server).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;OpenCV&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;: for the Randall camera proxy project, need basic motion detection.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Some good tutorials here: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_video/py_bg_subtraction/py_bg_subtraction.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_video/py_bg_subtraction/py_bg_subtraction.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Example in Python. Java API available here: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.opencv.org/master/javadoc/org/opencv/video/package-summary.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.opencv.org/master/javadoc/org/opencv/video/package-summary.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;And in &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/bytedeco/javacv&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;JavaCV&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;it shows how to convert frames between the FFMPEG input and what&#8217;s needed by the OpenCV library using &#8220;Mat&#8221; and an OpenCV converter.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-style:italic&quot;&gt;Update 2020-06-09&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;: The &#8220;cam-proxy&#8221; project is working nicely.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One realisation: I picked up the JavaCV approach as it seemed easier to get started, and that paid off. However it&#8217;s worth pointing out that the generated fatJar is an impressive 760 MB!&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That is quite a feat.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Looking at the APIs, do I need all of JavaCV, or could I use only OpenCV with its Java bindings? Let&#8217;s see which APIs I&#8217;m using here:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;JavaCV.FFMpegFrameGrabber &#8658; there&#8217;s an OpenCV specific one.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;JavaCV.FFMpegFrameRecorder &#8658; to generate the MJPEG stream. Alternative?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;JavaCV.2dFrameConverters + CanvasFrame &#8658; there&#8217;s an OpenCV one.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;OpenCV core: IplImage, Size, Rect, Mat&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;OpenCV imgproc: resize&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;OpenCV video: cvCreateImage, mediamBlur, createBackgroundSubstractorMOG2.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Thus one question is whether it&#8217;s possible to generate the output stream (MJPEG or h264) using OpenCV and its Java wrappers, or is FFMpeg needed for that?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Uncompressed fatJar size: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2,762,758,664 bytes&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;org/ part of the jar: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;2,227,823,156 bytes&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Opencv:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1,065,264,936 bytes&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;lib/ part of the jar:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;629,358,581 bytes&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Ffmpeg:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;371,946,457 bytes&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Javacpp:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; 10,261,365 bytes&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Javacv:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;921,733 bytes&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Jetty part: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;318,8118 bytes&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So essentially trying to only use OpenCV would likely not save that much. A huge part of the JavaCV package is indeed OpenCV and a quick look at the final Jar shows that it contains not only java wrappers but also hpp headers, some xml, and most important the jni+si native libs for a lot of architectures (e.g. armhf, armeabi-v7, arm64-v8a, x86, x86_64). If an effort was needed to trim the jar file, it could be by avoiding packaging these in the first place by removing all the arm ones (3 out of 5 archs).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-06-05T00:00:42-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Dagger and Libraries</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-05-02_dagger_and_libraries.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-05-02_dagger_and_libraries.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Here&#8217;s an interesting problem in Cab v2:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Main app: Main app component.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;WiThrottle library: Lib component.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The design I want is for the library to be an extension to the main app. The library provides components/modules that the main app can use and inject. The library itself cannot use anything from the app (since it is app-agnostic).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In terms of components/scopes: the library is the outer component, and the app is a sub-component of the library. The app can use elements provided by the library.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When using component dependencies, which one depends on which?&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://proandroiddev.com/dagger-2-part-ii-custom-scopes-component-dependencies-subcomponents-697c1fa1cfc&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://proandroiddev.com/dagger-2-part-ii-custom-scopes-component-dependencies-subcomponents-697c1fa1cfc&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://proandroiddev.com/dagger-component-dependencies-for-library-development-e2df7ce68233&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://proandroiddev.com/dagger-component-dependencies-for-library-development-e2df7ce68233&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I think that means the app component has a dependency on the lib component.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This seems to work with some caveats:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;@Singleton @Component AppComponent // dependencies = { LibComponent.class }&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Issue:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;At build time &#8220;dagger AppComponent scoped may not reference bindings with different scopes&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; Two ways to fix that: either remove all scoping info from the dependencies component and everything provided; Can&#8217;t even be in the same @Singleton. Obviously that&#8217;s not right.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; Both components can have and likely should have different scopes. However the &#8220;root&#8221; component must provide everything explicitly by using getters in the component.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;E.g.:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;@Component LibComponent {&lt;br&gt; &amp;nbsp;ExportedType1 getExportedType1();&lt;br&gt; &amp;nbsp;ExportedType2 getExportedType2();&lt;br&gt;}&lt;br&gt;Etc&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Module providers in the LibComponent are not exported to the dependent component unless explicitly stated that way. If something needs an explicit module provider, it also needs an &#8220;exporter&#8221; declaration in the component. If something is not explicitly exported by the root component, dagger will try to use the type as-is, notice the scope discrepancy and basically ask for either a different scope or an explicit provider if the object has no scope.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-05-02T00:00:14-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Jadx: APK to gradle project</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-04-29_jadx_apk_to_gradle_project.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-04-29_jadx_apk_to_gradle_project.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;[win] d: t/dev/jadx &#8230; jadx-gui&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;select apk&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;prefs select deobfuscation&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;save gradle project in e: temp android apk&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-04-29T00:00:07-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">3D Games</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-04-20_3d_games.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-04-20_3d_games.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In the &#8220;game with train themes&#8221; department, it would be interesting to find an engine with actual already available resources to make one demo sample of either. One thing I could learn is the interaction model.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As far as 3D engines go, Godot seems like a viable choice for my needs. That or a full &#8220;do it yourself&#8221; LibGDX-based approach like I was trying for Tracks.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Eventually it all boils down to assets. That&#8217;s the key thing, and the one weakness I strongly have. Looking at both above: The train shunting puzzle is within my reach; except I&#8217;m not keen on the end result and thus consider not worth the effort going there; and the large popular game is out of my reach, the number of 3d assets being way beyond my abilities.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s also the same usual problem: I&#8217;m looking at a bunch of game demos, and realize I don&#8217;t really want to spend that much time to get that level of result (the usual 80/80 rule applies here). And I don&#8217;t want a me-too result either.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-04-20T00:00:29-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Cab Engineer &#8220;scripting&#8221;</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-04-11_cab_engineer_scripting_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-04-11_cab_engineer_scripting_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One feature I miss with trains is scripting. Back in 2014 or 2015, I wrote a very simple cab command interpreter in python for JMRI, &#8220;cab3.py&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I should add something like in Cab Engineer:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Tie it with an existing throttle (e.g. for a specific DCC address)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Or let the script change/mix engines.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Be able to save / recall scripts.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Also control turnouts.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Introduce a mini-editor with a less cryptic language, and buttons to quickly insert language keywords.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Make it line-agnostic so that the script can be one line or multi lines.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Random examples:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Label start&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Throttle 537 speed +12 for 5s until B370 then speed 0&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Reverse T330&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;F2 press&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;F5 on&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Throttle 113 speed +12 for 2s &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Speed 0&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Speed -12 for 2s&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Normal T330&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;F5 off&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Throttle 537 speed -12 for 5s until B310 then speed 0&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Loop start&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Here each command is one keyword + one value, and the &#8220;then&#8221; keyword is a no-op.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A command like &#8220;for&#8221; or &#8220;until&#8221; would simply introduce a pause.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A &#8220;function press&#8221; would toggle it for a fixed time, e.g. 300-500 ms.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A logical extension is a &#8220;record macro&#8221; mode, that records the actions, generates the script, which can then be edited, saved, recalled.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Recalling a script would open a card on the recycle view with a status/run/stop. Running would &#8220;inject&#8221; commands in controllers, but not block the user. E.g. one could try to &#8220;beat&#8221; the system, or start/stop an engine during a macro run. Useful for things like horn/bell, or prevent a collision.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-04-11T00:00:02-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Cab Engineer</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-04-07_cab_engineer.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-04-07_cab_engineer.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A follow up to 2020-04-04 Cab Throttle aka &#8220;Cab Engineer&#8221;: Importing Cab Throttle source has been done. It&#8217;s called &#8220;Cab Engineer&#8221;, and as all the source from Cab Throttle + WiThrottleLib.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The project has been changed to be compliant with Permanent Service &amp;amp; notifications required by API 26+.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Next steps are:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Add dagger support.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Use my mini RxJava instead of the event bus.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Add new features:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Toggle turnouts. [added as of 2020-04-10]&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Recall previous DCC addresses.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Recall JMRI roster.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Some less important yet desirable features for me:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Support Day vs Night modes (with a quick toggle change).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Support &#8220;soft&#8221; consisting.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I may not do it in that order. E.g. dagger/rx are less useful than core new features.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Note that when I started it, WiThrottleLib was able to support 2 modes:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;Single throttle protocol&#8221; with multiple sockets to JMRI, for JMRI &amp;lt; 2.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;Multi-throttle protocol&#8221; with a single socket to JMRI, for JMRI &amp;gt;= 2.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Now that JMRI is in v4, I think the &#8220;&amp;lt; v2&#8221; support is&#8230; useless. I won&#8217;t remove it but I won&#8217;t extend it either. Things like roster &amp;amp; turnouts are only going to be added to the more modern part.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As for the name, I&apos;m pretty sure I don&#8217;t want to tie it to the &#8220;DCC&#8221; name publicly, even though the current implementation is very DCC and JMRI centric. E.g. for addresses, only DCC specs are supported, with short vs long addresses.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-04-07T00:00:03-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">What about LibUtils?</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-04-04_what_about_libutils_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-04-04_what_about_libutils_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&#8217;m currently in the process of a full rewrite of Cab Throttle, and to make a long story short, I decided to entirely rewrite it. Cab v2 is the new project.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Somewhat of a tangent, looking back at Cab Throttle vs Cab v2 makes me wonder: is LibUtils useful anymore?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Maybe, but I think it&#8217;s time to change from android-lib-v2 to android-lib-v3&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://bitbucket.org/ralfoide/libutils/src/android-lib-v2/LibUtilsAndroid/build.gradle&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://bitbucket.org/ralfoide/libutils/src/android-lib-v2/LibUtilsAndroid/build.gradle&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One of the issues here is the cross-project dependencies. LibUtils depends on Dagger, on Mockito, on Robolectric, and on JUnit. All these versions must match together, otherwise imports get wonky. Robolectric and Dagger are the main drivers and are very opinionated.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For example that means I can&#8217;t have a lib with Robolectric v3 and a main project with v4. And even within versions, I&#8217;ve had conflicts when multiple JUnit or Mockito libs are imported.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One thought is to fix that by revisions. Lib-v2 goes up to Robolectric 3, and lib-v3 is to be used for &#8220;modern&#8221; projects with Robolectric 4.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-04-04T00:00:40-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Godot Game Engine</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-02-02_godot_game_engine.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-02-02_godot_game_engine.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Tutorials / intro / 2d game step by step:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.gamefromscratch.com/page/Godot-3-Tutorial-Series-Index.aspx&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.gamefromscratch.com/page/Godot-3-Tutorial-Series-Index.aspx&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://godotengine.org/download/windows&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://godotengine.org/download/windows&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The download is not an installer, it&#8217;s the full thing just zipped in-place.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Which means if I won&#8217;t use C#, just use the standard thing and I can always trivially change later.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;Godot&#8230; standard vs Mono C#&#8221; -- the difference is that the 2nd supports everything(?) including C#, whereas the former is limited to using GDScript (a python look-alike). I&#8217;d venture the C# one is designed to ease people coming from Unity.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The C# version requires the Mono SDK: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.mono-project.com/download/stable/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.mono-project.com/download/stable/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Or the Visual Studio Build Tools: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://visualstudio.microsoft.com/downloads/?q=build+tools&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://visualstudio.microsoft.com/downloads/?q=build+tools&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(which seem packaged separately from the full VS.Net?)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Thus going with Standard for now.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Doing what?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Either 2d or 3d (fixed perspective, toy like rendering), something with trains and tracks. First do a prototype demo to see if I can even render what I like. Game wise I&apos;d like a tower defense/attack.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-02-02T00:00:12-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Home Projects</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2020-01-24_home_projects.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2020-01-24_home_projects.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pending home projects, in that order, that I&#8217;d really like to see completed this year:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;React Otter: &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For the demo, finish learning how to do the data-server backend part.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For the MVP, implement a cron task sending tweets &amp;amp; creating images.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Conductor 2:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Finish the Groovy design. It has potential, yet right now it is in an unfinished design state.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rework the implementation with a focus on tests.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;ESP32-CAM:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Work on video track detection, with the smaller goal of doing a crossing gate controller.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The desire is for that work to be later used to control Fairfield or other automation.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2020-01-24T00:00:19-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">New Project: Litter Timer</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2019-12-10_new_project_litter_timer.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2019-12-10_new_project_litter_timer.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Specs:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Target: Froyo Android 2.2&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Keep screen on when plugged in.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Release screen lock when on battery.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Remember timer / restore after restart. Compensate for time off (if accurate).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Change timer color:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;white default.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;orange if &amp;gt; 24h&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;red if &amp;gt; 48h&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;red blink if &amp;gt; 72h&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Email updates notifications.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;And yes, the target really is Froyo Android 2.2. I like to reuse old phones as dedicated one-off appliances.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2019-12-10T00:00:27-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">ESP32-CAM Project: Grade Crossing</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2019-11-30_esp32-cam_project_grade_crossing.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2019-11-30_esp32-cam_project_grade_crossing.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One discussion on the Arduini mailing list centered about the use of Arduinos to commonly do Crossing Gates mechanisms. The projects are considered &#8220;trivial&#8221; as they involve commanding servos (to move gate arms) and blinking LEDs for the crossing lights. There are modules to do sound too. Both are ubiquitous with Arduinos and well designed for that.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Typically inputs come from photoresistor, IR leds for detection, or less commonly from existing block detection modules.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This makes me think an ESP32-CAM would be almost suitable for that. What form would it take?&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;First, I should wonder whether something like OpenCV is even needed here. I&#8217;m not familiar enough with it to know whether it would help. On a fixed camera, simple naive image detection would be enough to see if there&#8217;s any motion change on a masked area. A simple average+diff algorithm would probably be good enough.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Second, implementation wise, C or MicroPython? I&#8217;m surprised we don&#8217;t see more of the latter. It&#8217;s certainly slow yet good enough to just blink a LED or move a servo. It would not be suitable for image analysis, though.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The ESP32-CAM MicroPython fork made it clear this is done by taking a specific commit on the ESP32 repo, not all of them are suitable; then add the camera module in C as a Python module, then use it from Python as a black box. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;At that point that does mean that developing on the module is best done in a separate C sketch. And from a distribution model, an Arduino sketch is still the easiest way to deliver this to an end user who needs to tinker with it. What does using ESP IDF or even MicroPython add here? &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;MicroPython does add that it becomes trivial to talk to JMRI via a JSON client/server, but that&#8217;s not exactly hard from C either, just a bit more clunky. One of the original demo suggestions was to split both.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One does wonder why Swift or GoLang is not more popular on these. They would be good fits. Swift is probably too Apple centric. There&#8217;s a TinyGo.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There is one obvious downside to using an ESP32-CAM to do a grade crossing module, and that&#8217;s the location of components. The camera is attached to the ESP32 with a short ribbon (either 1 cm or the 10-ish cm one). This cannot be much longer. And mounting location would require a good view of the track that is to be detected. For example directly on the ceiling, or maybe 1-2 meters above. Track level would be possible but would probably be hard. Perspective/distance means that scale/precision won&#8217;t be the same in different places of the camera view. A direct view of the track is needed. That precludes having tunnels or bridges in the way, as well as potentially operators.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The connections for the LEDs and servos could be longer, using twisted wire pairs it would not be unreasonable to have 2-4 meters or more.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Another option is to use more than one module, for example an ESP32-CAM can be mounted on the ceiling, communicating to another Arduino next to the crossing with a simple RS485/RS232 link. In that case, a much longer distance can be achieved.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2019-11-30T00:00:19-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Background Foreground Demo Android App</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2019-11-29_background_foreground_demo_a_95ed3307.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2019-11-29_background_foreground_demo_a_95ed3307.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Just completed this yesterday, and it works as expected:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://bitbucket.org/ralfoide/misc-exp-public/src/master/android/bg-demo/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://bitbucket.org/ralfoide/misc-exp-public/src/master/android/bg-demo/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(In retrospect, I should have called the demo &#8220;fg-demo&#8221;).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;First off, I&#8217;d say duplicating the job-demo project was easy and the way to go: dup the folder, remove app/build as well as anything excluded by gitconfig, then do a simple grep/sed on &#8220;job.demo&#8221;. The only 2 places where it was used was in the app name.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The demo uses a &#8220;startForegroundService&#8221;, a regular Service, and a &#8220;startForeground&#8221; from the onStartCommand of the service, with a notification. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The service is started when the activity is started/resumed. The service is only stopped when the stop button in the activity is explicitly used. The service itself runs a thread that updates a counter. The activity binds to the service to give a callback, used to update the counter on screen.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As this is both a &#8220;bound&#8221; service (for the activity) and a &#8220;started&#8221; service, it keeps running until it is both stopped and unbound from the UI.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There are a few cases where the system may kill &amp;amp; restart the service immediately.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Which project make sense using that, and which do not?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In the past, I&#8217;ve been using background services for applications that:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Do some kind of system control and need to run in the background all the time.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Those that have expensive/complicated startup, for example with network connections to hold the update state.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In these cases, it&#8217;s a bit wasteful to stop everything as soon as the user switches between apps.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In a post-Android-O world, one should balance between this and using a JobService, or neither.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;How would I use these for current, former, or future projects:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;DccThrottle: Foreground service is a logical choice. User is expected to switch between apps, not lose control, and be able to change back immediately. Service only needs to be started once at least one engine is in command; stopped by asking for confirmation when trying to exit the app (or the double-back pattern).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RTAC: Background service is a logical choice, but not necessary. The app is supposed to be used in foreground. Instead it could just use an app singleton thread.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;T3: JobService + AlarmManager.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Bearing: This was using a background service before. The new version just uses an activity-centric update. State is lost/reconstructed when outside of the activity.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Follow up work:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Change on-going notification to &#8220;App Blah is Running&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Change notification setting so that it does not beep at me (lower priority).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Add 1 or 2 notification actions: &#8220;quit now&#8221; vs &#8220;open&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Open would do what the current notification click does, bring the activity.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Quite would both stop the service and kill the app (or more exactly stop the activity if it&#8217;s open).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2019-11-29T00:00:00-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Quote Otter choices</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2019-11-28_quote_otter_choices.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2019-11-28_quote_otter_choices.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One of the goals of Quote Otter is to try some &#8220;web stuff&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Choices to be made:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Use nodejs instead of PHP / Rails / GoLang. How does it fit with Apache?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Can I have scaffolding in nodejs?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Frontend: Angular vs React.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://programmingwithmosh.com/react/react-vs-angular/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://programmingwithmosh.com/react/react-vs-angular/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;React: &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;React router.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;State management: Redux or MobX.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Flutter web? &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://flutter.dev/web&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://flutter.dev/web&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There are two goals, and they are not conflicting: a/ learn something; failure is an option, and b/ if I get it working, it should be (re)usabl. So there&#8217;s some value in choosing a &#8220;common&#8221; framework and not something fully esoteric. Looking at you, Flutter.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;To be clear, I have two choices to make: backend and frontend.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Frontend:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Let&#8217;s try React.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As guides explain, React is not a full framework and needs additional libraries to do stuff. There are a myriad of choices, so let&#8217;s get some I see floating around.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Routing: React router.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;State management: Redux or MobX.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Fetching data (from backend): jQuery.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Backend:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;We already run Apache. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Let&#8217;s try nodejs for a change.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The way to &#8220;integrate&#8221; nodejs with Apache is to run both. Nodejs runs on port 8080 and setup Apache to access it using a proxy/reverse proxy config (example here).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Some people &#8220;love nodejs&#8221; (too much?)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Local Development:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;NPM / nodejs is apparently the way to go. Doesn&#8217;t matter where it gets deployed after.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The choice of nodejs means I can be server-agnostic and don&#8217;t even need to dev on a server, can be localhost on any machine.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;More links:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;React: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://daveceddia.com/test-drive-react/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://daveceddia.com/test-drive-react/&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;React: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.tutorialsteacher.com/nodejs/nodejs-tutorials&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.tutorialsteacher.com/nodejs/nodejs-tutorials&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;SQL vs NoSQL: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.thegeekstuff.com/2014/01/sql-vs-nosql-db&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.thegeekstuff.com/2014/01/sql-vs-nosql-db&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One thing that the React examples do not cover is the equivalent of an easy table-to-rest scaffolding as made popular by Rails. That&#8217;s kind of what I want here. For &#8220;trivial&#8221; tables, I want a rest setup with a typical list/add/delete/edit flow (CRUD: create, read, update, delete) + scaffolding. There&#8217;s a lot of value in that for rapid prototyping. Whereas Rails is a backend+frontend combo, I&#8217;m guessing here we&#8217;ll have to deal with a &#8220;nodejs database&#8221; backend and a matching &#8220;react frontend&#8221;. What I want is something that sort of works together. &#8658; From tutorial above, nodejs uses &#8220;drivers&#8221; which are installed. I&#8217;m going to guess they each have their own API.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Speaking of &#8220;SQL vs NoSQL&#8221;, in my simplified view:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In an SQL database, each record has defined columns, some of which are indexed. Complex SQL-based queries can be written that act on the column data. The queries inherently &#8220;understand&#8221; the meaning of each column.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In a NoSQL database, each record is merely a key/value. There are no queries, except maybe operating on a range of keys. Values are akin to opaque blobs.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;SQL is useful in an application that needs to filter the data when querying it. For example only show entries from a given camera, or sorted by username. I am going to guess that some NoSQL databases probably offer secondary index columns to do just that, where data is often duplicated from the main record into that column just for that purpose (e.g. Bigtable works like that, IIRC).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;NoSQL is ideal when the data already exists in the form of a JSON blog. Just compute some kind of unique id and that&#8217;s the key. Then retrieve it all at the same time. When the value payload grows too large, split it in 2 (e.g. list view vs detail view) and store it in the same row.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2019-11-28T00:00:59-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Android &#8220;Job Demo&#8221;</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2019-11-27_android_job_demo_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2019-11-27_android_job_demo_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Completed Android app &#8220;Job Demo&#8221;:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://bitbucket.org/ralfoide/misc-exp-public/src/master/android/job-demo/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://bitbucket.org/ralfoide/misc-exp-public/src/master/android/job-demo/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This demonstrates enough of what I want:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Using JobService and match a required time using a minimum time delay.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The &#8220;old way&#8221; of using the AlarmManager has not been used.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Handling Boot-Received intent with a receiver.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Accessorily, this also has:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Dagger properly setup with components and one prod-vs-test module. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Robolectric for the app, activity, with dagger.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RecyclerView from androidx not using the pesky ListAdapter.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Using androidx Room DAO for persistence database.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Where to go from there?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As far as a JobService demo is concerned, the current state is good enough. There are a few things that could be done better such as having more robolectric/dagger in place (for example a provider module to replace LocalTime.now() calls during tests) and the event log is a weird mix of both an in-memory list and a Room persistence database (on purpose, to showcase both options).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This is actually a good base to do a T3 rewrite. Is this really what I want?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Per the previous entry, another &#8220;small&#8221; demo app is to do one running an actual permanent background service, for the typical app case such as dcc controller and others that need to keep a permanent controller running at all times.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Upon scheduling events for many hours during the night (e.g. one per hour), it was clear from the log they did not fire at the expected time when the phone was in Battery Saver mode. Instead they were scheduled all at once after I removed the Battery Saver mode. To be clear, that&#8217;s not particularly surprising, but it would require a bit of user education to explain it.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So the next step is to try the Alarm Manager to see how it behaves with the Battery Saver mode.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2019-11-27T00:00:24-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Android Background Service</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2019-11-17_android_background_service.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2019-11-17_android_background_service.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A few of my older apps rely on a common principle of having a permanent background service. This broke with the API changes in Android O &amp;amp; P (API 26).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Trying to fix T3 &amp;amp; RTAC in-situ has been a bit of a PITA, so it&#8217;s time to do an isolated &#8220;canonical example&#8221; app to figure that out. But first I need to understand why I have a background service and how to adjust it for these API. Also to clearly list which API levels are the issues.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Existing cases:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RTAC: &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Needs to run on Hi10 tablets, Android 5.1 (API 22, Lollipop MR1).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Permanent background service.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Designed to keep the app alive at all times, even if not in foreground. Keep all the network connections active. Wakelock to make sure the tablet never sleeps.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Notification shown when main activity is in background.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;DccThrottle:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Same as RTAC. Permanent, active even when in background.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Bearing v1:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Similar to RTAC. Permanent, active even when in background.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;T2:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;T2 is API 9+, T3 is API 26+.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Job-oriented background service.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Started by &#8220;check&#8221; menu, alarm, or receiver, only for the duration of the operation.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The needs for T3 are very different and ideally we would not use a service for that if we can avoid it. The only reason a service was used here is because that was the recommended design at the time. I understand OS requirements can change, but it&#8217;s somewhat ironic an app breaks when it was following the recommended design, with undertones of &#8220;you&#8217;re doing it wrong&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The T3 case was handled in 2019-07-08.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It uses:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;JobService to schedule a task.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Still relies on an UpdateReceiver starting an actual Service.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Boot_Received triggers the UpdateReceiver.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Now the question is whether a service is even needed at all. Does the new API offer something else?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/about/versions/oreo/android-8.0-changes.html#back-all&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://developer.android.com/about/versions/oreo/android-8.0-changes.html#back-all&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;In theory that doc seems fine: start a service using &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/reference/android/content/Context#startForegroundService(android.content.Intent)&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;startForegroundService&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, then call &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.android.com/reference/android/app/Service.html#startForeground(int,%20android.app.Notification)&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;startForeground&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;with a notification &amp;nbsp;In practice that seems to fail, and the service still gets killed 5 minutes later when testing on an Android O device or emulator.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;There&#8217;s a lot of that on SO:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/questions/49637967/minimal-android-foreground-service-killed-on-high-end-phone&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://stackoverflow.com/questions/49637967/minimal-android-foreground-service-killed-on-high-end-phone&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Thus my suggestion is to create two simple samples/demo apps:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;T2 case: a &#8220;short job&#8221;, triggered by a button, an alarm (specific time), or a boot receiver.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Permanent case (e.g. RTAC, DccThrottle, etc) of a permanent &#8220;foreground&#8221; service.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;For the latter, integrate some external lib such as &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/doubledotlabs/doki&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Doki&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;that shows details from &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://dontkillmyapp.com&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;dontkillmyapp.com&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;for a specific device.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://bitbucket.org/ralfoide/misc-exp-public/src/master/android/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://bitbucket.org/ralfoide/misc-exp-public/src/master/android/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; is a good place to store these.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2019-11-17T00:00:32-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Dev State of the Union</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2019-10-22_dev_state_of_the_union.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2019-10-22_dev_state_of_the_union.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What is the dev that I want to be doing right?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I want some projects that I can demonstrate visually -- most of my stuff is often very cryptic, abstract, with little to see. By that I mean have a nice write up, maybe a video, and have a little collection of them. Experimental projects would be best for that.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;ESP32-CAM in train context. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Could be as a simple web server demo with an android viewer. For example placed in scenery, or from a top view. &lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Power from USB brick. &lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Point is to show the simplicity and versatility of this.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;ESP32-CAM with OpenCV. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That requires a bit more research.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Use integrated web server to see output.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Point is to demonstrate we can do embedded detection on the ESP32.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;ESP32-CAM as &#8220;occupancy detector&#8221; without OpenCV.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This is the simple &#8220;things move in the image&#8221; kind of demo.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Use integrated web server to see output.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;ESP32 with OLED send a JMRI JSON.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The OLED is nice because it adds a visual component. It makes it less abstract.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Point out that the OLED is a nice status/debugging tool.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This is the kind of thing to do in MicroPython as it becomes trivial.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One tutorial for later would be &#8220;hacking the NCE AIU&#8221;, for example for the EB1. This requires more thought to explain why it&#8217;s useful for. It has less appeal (lesser known hardware).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2019-10-22T00:00:34-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">ESP32 Camera Modules</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2019-08-31_esp32_camera_modules.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2019-08-31_esp32_camera_modules.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;4 x ESP32 boards compared, all with an OV2640 camera module:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=5IhhyJjjCxo&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.youtube.com/watch?v=5IhhyJjjCxo&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Possible applications? I&#8217;ve been looking at the cheapest way to add video to train layouts with at least 2 goals, if not more:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Video-based train automation.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In-car video streaming.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Single/multi view on remote monitor. E.g. monitor hidden staging yard(s) or tunnels, or display activity on a remote monitor -- any place where there&#8217;s motion.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For each of these, my concern is footprint, price, and power. Each time I operate under the expectation I can offset any processing to a local laptop or tablet or similar. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For example, for streaming the expectation is that the camera can either send a constant stream and the computer does motion detection, or the camera can do basic detection and only transmit when there are changes. A mix is possible (e.g. non-sophisticated change detection on the camera, then a better filtering at the computer level). &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In this case, the value of the ESP32 is fairly reduced. It only needs to act as a crude frame server. The benefits are a small footprint, and real 1080p or better.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The contenders are &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://ralf.alfray.com/trains/blog/train/2019-01-20_mini_wifi_camera_and_train_l_10c40469.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;mini pinhole wifi cameras like the one I tried earlier&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;. This would be an almost ideal choice if it were really a 1080p and not a marketing gimmick using a fairly old 720p @ 30 Hz.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2019-08-31T00:00:18-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Raspberry Pi 4</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2019-08-01_raspberry_pi_4.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2019-08-01_raspberry_pi_4.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In the &quot;don&apos;t need one right now, just doing my research&quot; department...&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;There&apos;s a new RPi 4 out there, announced in June, and this is a pretty good and balanced review:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.techrepublic.com/article/raspberry-pi-4-model-b-review-this-board-really-can-replace-your-pc/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.techrepublic.com/article/raspberry-pi-4-model-b-review-this-board-really-can-replace-your-pc/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Direct comparison to the previous RPi 3:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.androidcentral.com/raspberry-pi-4-vs-raspberry-pi-3&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.androidcentral.com/raspberry-pi-4-vs-raspberry-pi-3&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As always with the Pi, there&apos;s the hype and reality:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Element14 (Newark) the official distributor is waiting for stock for the 4 GB version. They sell it at the official MSRP of $55 (+ s/h) bare-bones.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Amazon: Can&apos;t find a bare-bone one, but there are kits for the 4 GB version (with power supply, etc) for $99 (also waiting for stock). (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2YCVKNe&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;example 1&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/31fWkOR&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;example 2&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;... these are good kits)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When comparing to &quot;something else&quot;, the &quot;kit&quot; price is often a better indicator in my book since we&apos;re often comparing it with another mini-PC that has a power supply, storage, and a box. In this respect, it&apos;s interesting: years ago I was expecting a full RPi 2 kit to be around $100, and here a full RPi 4 kit is still around $100.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Video review from Andreas [link?]:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Speed is only 30% marginally faster in tests.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Can get really hot during intensive computation.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Ethernet speed is now good.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Nowhere near a &#8220;desktop&#8221; computer beside claims.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Micro HDMI instead of full size HDMI.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Perf benchmark:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://core-electronics.com.au/tutorials/raspberry-pi-4-vs-3-model-b-performance-benchmark.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://core-electronics.com.au/tutorials/raspberry-pi-4-vs-3-model-b-performance-benchmark.html&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The dual HDMI output can be a good solution for building e.g. a public display.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2019-08-01T00:00:46-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Cocos2d</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2019-07-21_cocos2d.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2019-07-21_cocos2d.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In the Instant Apps for Game on the Play dev guide, I noticed they officially support a plugin for Unity as well as one for Cocos2d.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;It would be interesting to try this to see how an android game can be made using that: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://cocos2d-x.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://cocos2d-x.org/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://digitalocean.cocos2d-x.org/CocosCreator/v2.1.2/CocosCreator_v2.1.2_20190716_win.7z&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://digitalocean.cocos2d-x.org/CocosCreator/v2.1.2/CocosCreator_v2.1.2_20190716_win.7z&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;513 MB download&#8230; will skip for PA.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The quick start here:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.cocos2d-x.org/creator/manual/en/getting-started/quick-start.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.cocos2d-x.org/creator/manual/en/getting-started/quick-start.html&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Shows:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It seems to come with an editor, kinda like Unity. &amp;nbsp;Asset library, etc.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Programmed using JS, CoffeeScript, or TypeScript.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The example uses the &#8220;old&#8221; property-dict style for creating a JS class.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;Custom components&#8221; are JS classes with properties.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Creator &#8220;nodes&#8221; are manipulated.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A custom &#8220;jump action&#8221; is created by combining interpolators.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Typical key events handling.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8220;Prefabs&#8221; are used to duplicate assets.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Object collision is programmatingly done by computing asset-to-player distance.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Overall &#8220;score&#8221; audio and effects.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Overall it seems like a (suitable?) replacement for Unity in 2d, as long as JS is acceptable. Using TypeScript or CoffeeScript may make the JS a tad more palatable. Integration with Android remains to be seen, as well as runtime size.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2019-07-21T00:00:31-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">The MCVP pattern</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2019-06-28_the_mcvp_pattern.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2019-06-28_the_mcvp_pattern.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A while ago I wanted to take a consistent approach at splitting my projects into a &#8220;UI vs core&#8221; pattern. My old C# skeleton generated 2 libs upfront for that. In other android apps, I have either an android lib or at least clear packages &#8220;core vs ui&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Looking at something like Flutter, the benefits would be useful if the app and UI is using one framework and then the &#8220;core&#8221; of the app uses another framework, namely a POJO or at least an Android lib. In the case of a game, the latter could be a Unity library.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When doing a pure Android app of a limited scope, there&#8217;s little value in that separation. It becomes more useful when I try alternate frameworks, for example Flutter or Kotlin. The idea is that if I write the UI part in Flutter now and the framework falls in desuetude, I could rewrite just the UI later.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One thing I noticed is that if I do not force myself to do the split upfront using actual libraries, it will not happen easily after. Forcing to have an android app + an android lib imposes some constraints in the import/dependency structure. It forces us to make callbacks instead of direct bi-directional calls. It forces us to make the boundaries clear. Dagger would help a bit to ease using one with the other.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As far as patterns go, there&#8217;s MVP and MVC. I suggest a mix, which I&#8217;m calling MCVP:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Model: Model data/classes, in the core feature library.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Controllers: Action classes acting solely on the model, in the core feature library.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Views: Pure UI elements display model, in the app/ui library.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Presenters: Action classes managing the interaction, in the app/ui library.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The app logic would be both in controllers and presenters. The controllers are purely model-oriented and by having them in the core lib, they have no impact on the UI. The presenters on the other hand coordinate between the views, model, and controllers. They are the &#8220;business logic&#8221; that is located at the app/ui level.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As a graph, we would have:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;[model] &#8656;&#8658; [controllers] &#8656;&#8658; [presenters] &#8656;&#8658; [views] &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2019-06-28T00:00:35-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Flutter</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2019-06-27_flutter.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2019-06-27_flutter.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s time to get a look at Flutter&#8230; What would this be good for?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://flutter.dev/docs/get-started/install/windows&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://flutter.dev/docs/get-started/install/windows&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Now the question is what will be the throw-away project and the goal for it?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One thing Flutter targets is Android vs iOS and then &#8220;rescalable&#8221; app for Chrome OS.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;text-decoration:line-through;text-decoration-skip-ink:none&quot;&gt;It does not do &#8220;web apps&#8221; per se. It is not a server-side html thing&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2019-06-27T00:00:48-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Summer Project</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2019-04-08_summer_project.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2019-04-08_summer_project.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I was going to start a &#8220;Service [idea]&#8221; doc as a Summer Project, but honestly at that point it&#8217;s more like a reboot as it feels really deja-vu:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-style:italic&quot;&gt;Menerba&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;is the obvious canonical example.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-style:italic&quot;&gt;Home Monitor App&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Not every far:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-style:italic&quot;&gt;Mobile dev&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;Hint v3&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-style:italic&quot;&gt;Ikaria&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;Ikaria v2&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;And of course &#8220;\p&#596;&#641;t.na.wak\&#8221; as a meta-meta project.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Part of the motivation for Portnawak was exactly what the name says, it&#8217;s a place to put temporary projects without the pretense of ever finishing them. They can be left there and not be too visible, so it&#8217;s not an inconvenience to anyone.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2019-04-08T00:00:24-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">BBC MicroBit</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2019-01-17_bbc_microbit.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2019-01-17_bbc_microbit.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This looks worth looking into for the kids:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://microbit.org/guide/quick/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://microbit.org/guide/quick/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Should be around $17 per kit.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.adafruit.com/product/3362&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.adafruit.com/product/3362&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;(properly packaged I guess)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2Dh7Wb7&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://amzn.to/2Dh7Wb7&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;(not the full kit, see comments)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Showed that to the kids. Is it interesting? Maybe. Should I get one? Nah. OK fine I tried.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2019-01-17T00:00:51-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Any good replacements for RPi 2?</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2019-01-17_any_good_replacements_for_rpi_2_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2019-01-17_any_good_replacements_for_rpi_2_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Of note: &lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RPi 1 = 700 MHz Arm11&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RPi 2 = 900 MHz ARM Cortex-A7, 1 GB RAM (all 2 and 3 models)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RPi 2 = 900 MHz ARM Cortex-A53 &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RPi 3 = 1.2 GHz ARM Cortex-A53, arm64.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RPi 3 B+ = 1.4 GHz ARMv8, arm64, 1 GB RAM.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;USB/Eth combined with 30 MB/s max.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.zdnet.com/pictures/top-12-raspberry-pi-alternatives-2018-edition/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.zdnet.com/pictures/top-12-raspberry-pi-alternatives-2018-edition/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Similar clones:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.friendlyarm.com/index.php?route=product/product&amp;amp;product_id=241&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;NanoPi NEO4&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;, $45&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://wiki.radxa.com/Rockpi4&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Rockpi4&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Libre.Computer &#8220;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://libre.computer/products/boards/aml-s905x-cc/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Le Potato&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&#8221;, &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2FGcjhn&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;$45 on Amazon&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;with 2 GB RAM&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://shop.udoo.org/usa/quad-dual.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;UDOO&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;makes the NEO (an RPi like), an x86+arduino, and the Dual is some kind of Android/Arduino DUE mix. One has SATA.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://vocore.io/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;VoCore&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;has a super-mini linux box (1 inch square), limited RAM, etc.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Depends on needs:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For very low computing, the VoCore seems interesting. The Nano/Rock Pi are just clones with no specific advantages (cpu speed maybe?)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Le Potato looks interesting, until one reads the comments about the limits of the Linux distro with specific builds made for it.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The problem with those is the custom linux kernels. It means no &#8220;default debian&#8221; install (even with the RPi3), but at least Raspbian is well maintained (and the official way to go). For some of the other boards, the deal is more muddy, with typically a single image to deal with, no updates. For example the BeagleBoards have precompiled kernels and linux images to be installed as a whole. This is good from an IoT &#8220;fire and forget&#8221; standpoint but much less attractive to customize the distro &amp;amp; keep up-to-date with security patches.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Maybe I should take another look at &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://beagleboard.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;BeagleBone/Board&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://beagleboard.org/boards&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;board matrix&lt;/a&gt;&lt;/span&gt;&lt;span&gt;): the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://beagleboard.org/black&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Black&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a bit under an RPi 3 (1 GHz Arm A8, 512 MB RAM, $65 &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://amzn.to/2CyVmCv&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Amazon&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, $55+s/h &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.element14.com/community/docs/DOC-84108&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;e14&lt;/a&gt;&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.mouser.com/ProductDetail/BeagleBoard-by-GHI/BBB01-SC-505?qs=sGAEpiMZZMuG6%2fXKM6MUaQUPc9Y91hBEalrDTtma%2fpY%3d&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;mouser&lt;/a&gt;&lt;/span&gt;&lt;span&gt;), the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://beagleboard.org/enhanced&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;SanCloud&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;version has 1 GB RAM &amp;amp; Gigabit eth ($60-80). [Note: names were BeagleBoard before 2010, and BeagleBone after 2010].&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I happen to have a BeagleBone Black. I should use it. Which rev? What specs?&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Markings: &#8220;PCB Rev B3&#8221; (in black other side of power plug). &#8220;STM-5 94V-0 1013&#8221; next to eth, proc &#8220;XAM3359AZCZ100&#8221;, eMMC U13 &#8220;3DA18 JW896&#8221;, DDR3 U12 &#8220;2ZE12 D9PXV&#8221;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;BeagleBoard images &amp;amp; instructions: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://beagleboard.org/latest-images&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://beagleboard.org/latest-images&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;List of revision changes: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://elinux.org/Beagleboard:BeagleBoneBlack#Board_Revisions_and_Changes&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://elinux.org/Beagleboard:BeagleBoneBlack#Board_Revisions_and_Changes&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rev B has 2 GB of eMMC (Armstrong Linux pre-installed); Rev C has 4 GB of eMMC with Debian pre-installed.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The one I have appears thus to be a Rev B with 2 GB of eMMC.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Confirmed by eMMC Micron JW896 [&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.micron.com/support/tools-and-utilities/fbga?fbga=JW896#pnlFBGA&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;FBGA part search&lt;/a&gt;&lt;/span&gt;&lt;span&gt;] &#8658; Micro part MTFC2GMVEA-0M WT, and &#8220;MT FC 2G&#8221; is the Micron model code for a 2 GB NAND Flash [&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.elnec.com/en/device/Micron/JW896+%5BWFBGA153%5D/#1&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;link&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;].&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2019-01-17T00:00:34-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Dart</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2018-12-25_dart.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2018-12-25_dart.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Here&#8217;s a random idea: try Dart for a web project.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Here&#8217;s another random idea: While not rewrite Track for the web?&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Data files provided by a web server.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;User accounts and all that: Firebase.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;2d canvas editor.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;3d view in browser?&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One thing from &#8220;\p&#596;&#641;t.na.wak\&#8221; experiment is that editing in 3d is a PITA. I should focus on a 2d editor and then adapt it to 3d as it&#8217;s not my strong point.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Also I didn&#8217;t like the model I had in Track, especially the connectors. It seemed like a good idea initially but ended up troublesome. Tests were inadequate.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;If I wanted to try Dart, there are 2 other possible projects:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rewrite Wazz. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A bit moot since there&#8217;s nothing complicated nor wrong with the current version. It could be an interesting test to get a direct comparison between Dart and pure JS ES6.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Write a simple single-page web-page game. Nerdkill for example ;-)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2018-12-25T00:00:03-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Windows Linux Subsystem; Powershell</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2018-12-18_windows_linux_subsystem_powershell.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2018-12-18_windows_linux_subsystem_powershell.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Next thing to try: Windows Linux Subsystem.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Can it replace Cygwin?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Does it integrate nicely with win ntfs / apps?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;[&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/wsl/faq&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Summary from the FAQ&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;] &#8658; Provides a bash shell and /mnt access to the win fs. Does not provide GUI support. Mentions apt-get (with potential errors due to a lack of udev).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I should also (re)learn Powershell (again and/or for real) and take cheat notes on how to be proficient / use it.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2018-12-18T00:00:38-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Wyze App</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2018-10-07_wyze_app.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2018-10-07_wyze_app.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Desktop app to access Wyze cams.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The TinyCam code seems easily reversible, and could be done as a desktop app instead of android.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;To play an h264 stream, have a look at JavaCV &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/bytedeco/javacv&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/bytedeco/javacv&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(Java wrappers around OpenCV ... can be useful for a lot of other applications).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In that specific case, a C# app might be better than Java as main target is Windows (potentially cross-platform with MonoDevelop, not sure if it&#8217;s even worth bothering here).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s a throw-away prototype, so failure is an option. The simplified goals would be:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Start by simulating whatever tinycam came up with, because it&#8217;s an easy start.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;TinyCam only takes care of discovering and connecting to local live feeds.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Need to realize this is not my end goal. What I want is really:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;View remote notifications.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;View remote live feeds.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;View remote playback feeds.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Doing this would probably looking at the wyze apk with an ssl proxy to capture the json payloads.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Doing it in C# would be also a good exercise to do an UWP.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/uwp/get-started/universal-application-platform-guide&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://docs.microsoft.com/en-us/windows/uwp/get-started/universal-application-platform-guide&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;UWP:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Requires/useful if using the Windows App Store&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Can be &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://social.msdn.microsoft.com/Forums/windowsapps/en-US/aae09de5-a564-4c12-b948-e16518f24042/uwp-deploy-uwp-app-without-using-windows-store?forum=wpsubmit&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;sideloaded in Win 10&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;if device is set in dev mode.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;APIs access to Win 10 features: Tiles, badges, Cortana, bunch of other crap.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Various languages/UI combos supported: JS HTML, C# XAML, C++ DirectX.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So maybe UWP is overkill in this case. Just stick to a regular C# desktop with the old style C# gui builder. Use VS Community, and expect it to be ages behind in terms of code completion.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Why not a web app instead of a desktop app?&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Live viewing should work using any web page that can play an h264 feed. &#8220;In theory&#8221;?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In the mobile app, notifications are seen using a download + local player. A web app could use local storage and/or just stream the video feed.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So it&#8217;s worth investigating, even if it turns out to not work well.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Results (done in JS):&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Public: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://bitbucket.org/ralfoide/wyze-web-interface/overview&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://bitbucket.org/ralfoide/wyze-web-interface/overview&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2018-10-07T00:00:28-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Projects Update</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2018-10-03_projects_update.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2018-10-03_projects_update.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Track&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;: Has not changed since &#8220;\p&#596;&#641;t.na.wak\&#8221; dev in PA.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Track is part of &#8220;\p&#596;&#641;t.na.wak\&#8221; and is supposed to be a throw-away &#8220;quick&#8221; project. At that point it&#8217;s worth thinking whether there&#8217;s some real long term value in the project and in which case build a real standalone one.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What I need is a more generic way to describe track segments.&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;And import the ones from SCARM.&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Then use it on my own layout design.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The 2D view lacks precise geometry tools that I&#8217;d take as a given: &lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;rulers x/y, &lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;units (inch vs mm), &lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;ability to move something at a specific place by x/y coords, &lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;rotate by entering an angle, &lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;ability to measure distance, &lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;ability to dup/offset a track to another one (or an anchor point).&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;NCE Cab&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;: &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Wrote a &#8220;design doc&#8221; / spec / desiderata doc for it. &lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Need to do a prototype. &lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;First need to validate can use the RS485 interface on Windows/Java &amp;amp; Linux/Java (instead of Linux/Python). That first test could be a simple Java port of the existing python nce protocol decoder, without the ncurses part.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-weight:700&quot;&gt;3D Blender&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Desired goal would be to have a quick export from Tracks or for Scarm into a blender file, then play with materials there.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;&#8220;&lt;/span&gt;&lt;span style=&quot;font-weight:700&quot;&gt;Cab Engineer&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8221; Android Mobile WiThrottle:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&#8217;ve started this for my own need as part of the old JMRI / JED experiment, then made a single use app with Wear integration also as an experiment.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I had some desire last to reboot that into a formal project.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;See &#8220;Cab Engineer&#8221; below in 2017-12-18 update.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.alfray.com/trains/nce_button_board.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Randall replacement for the NCE Button Board&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Desktop app to access Wyze cams&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&#8217;s interesting to consider scopes:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Cab Engineer: For me + public app.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Value for me: mild.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Existing apps: Engine Driver.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;3D Blender: Only for me.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Track: For me + public app.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Value for me: medium/high.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Existing apps: Plenty on desktop (can&#8217;t match), none on Mobile.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Would be satisfied if I could just match desktop Scarm.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;NCE Cab: For me + public / for club.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Value for me: medium / low. Technical challenge.&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Experimental: high value.&lt;/span&gt;&lt;/li&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Finished product: low value.&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Public / club: No adoption realistically expected at all.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So of these, based on value:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Track / desktop is highest.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Track / mobile is for fun and shows some interest.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;NCE Cab for the experimental phase value.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;3D blender for some moderate value.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Based on this my order is going to be:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;NCE Cab - experimental phase aka validation prototype.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Track / desktop.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Revamp of experimental project, focusing on Scarm level.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;No mobile target at first but keep in mind for feasibility.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Track / mobile. Maybe.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2018-10-03T00:00:41-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Tracks</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2018-08-03_tracks.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2018-08-03_tracks.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Not so quick test in 3d + Java + desktop. Part of portnawak. Could be made in its own project.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What I want, for me:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Android version.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Touch UX&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Running trains.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Save online. G drive, drop box.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Doc Link from &#8220;\p&#596;&#641;t.na.wak\&#8221; in google docs.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2018-08-03T00:00:23-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Potential 3D (game) Engines</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2018-07-05_potential_3d_game_engines.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2018-07-05_potential_3d_game_engines.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Goal: something like this &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.trackplanning.com/3pi.htm&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.trackplanning.com/3pi.htm&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Candidates that should work for either JVM desktop or Android:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;jMonkeyEngine&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/jMonkeyEngine/jmonkeyengine&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/jMonkeyEngine/jmonkeyengine&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Overview: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://android-arsenal.com/details/1/1390&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://android-arsenal.com/details/1/1390&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;libGDX&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/libgdx&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/libgdx&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Overview: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://android-arsenal.com/details/1/11&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://android-arsenal.com/details/1/11&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;jPCT&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.jpct.net/about.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://www.jpct.net/about.html&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;(JVM)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.jpct.net/jpct-ae/index.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://www.jpct.net/jpct-ae/index.html&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;(Android)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Overview: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://android-arsenal.com/details/1/10&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://android-arsenal.com/details/1/10&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;SmartGL&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/smart-fun/smartGL&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/smart-fun/smartGL&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Overview: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://android-arsenal.com/details/1/4715&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://android-arsenal.com/details/1/4715&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Upfront, jMonkeyEngine describes itself as a full environment, SmartGL as just a 2d/3d view wrapper, GDX and PCT seem more in-between.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Requirements:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Fullscreen or view&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Basic physics&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;3D import&#8230; which format, from where?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Interactivity&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Looking at this:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;SmartGL seems limited to exactly what&#8217;s in the name.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;jPCT seems to have a clear distinction between desktop and Android. Can&#8217;t tell how recent it is.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;libGDX seems to have good modern support and good wiki tutorials to get started. There are also wrappers for Bullet and Box2D for physics engines and corresponding tutorials.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://xoppa.github.io/blog/using-the-libgdx-3d-physics-bullet-wrapper-part1/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://xoppa.github.io/blog/using-the-libgdx-3d-physics-bullet-wrapper-part1/&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/libgdx/libgdx/wiki/Box2d&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/libgdx/libgdx/wiki/Box2d&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So let&#8217;s start with libGDX.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2018-07-05T00:00:37-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Choices</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2018-06-26_choices.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2018-06-26_choices.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Summer travel choices:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Hint as a base for Nawak.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Nawak (editor / vm / platform).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Conductor 2.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Portnawak (quick game to learn kotlin).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Another idea to explore: &lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Read a SCARM file and generate 3D track data for blender.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Layout software for Android / mobile. Scrap existing library data to get started.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Maybe that&#8217;s what Portnawak could be: a potpourri of random mobile apps &#8220;1 day&#8221; experiments, with multiple absolutely unrelated activities in the same app.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Decided on the following plan for this summer:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;A 1-week addition to Portnawak as a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;simple&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&#8220;falling dot&#8221; game. Goal is to not focus too much on the engine part and develop some real kotlin code.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A very very short throw-away track layout experiment. How would interaction work? Consider having only 2 pieces of tracks (1 straight + 1 curve) with auto-snapping. The goal here is to put that code in a generic library + UI that is android specific.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;After these 2, consider if I want to keep using kotlin or go back to Java.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Then move on to the simulator for Conductor 2 (java app). Structure it at all in a library except UI in a java project (swing) or web rendering.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2018-06-26T00:00:56-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Wyze Cam</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2018-04-08_wyze_cam.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2018-04-08_wyze_cam.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;My main objection with the Wyze Cam is still the cloud-only and reports of outbound traffic.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Also &#8220;cell phone only, no web site&#8221;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;So, way to work around this: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://openip.cam/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://openip.cam/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The base for the Wyze is the Xiaomi XiaoFang (see &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/samtap/fang-hacks&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;fang-hacks&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;), which is not actually cheaper.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2018-04-08T00:00:32-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Rig4 ext&#8230;</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2018-02-14_rig4_ext_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2018-02-14_rig4_ext_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The next phase in Rig4 is to be able to generate a simple blog.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2018-02-14T00:00:07-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">WiThrottle connections on IPv6</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2018-01-27_withrottle_connections_on_ipv6.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2018-01-27_withrottle_connections_on_ipv6.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In Cab2 / RTAC, the mDNS discovery generally gives IPv6 addresses before IPv4.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;2 things to investigate:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Why the code always seems to fail to connect to the IPv6.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Can I programmatically convert an IPv6 into an equivalent IPv4 (at least for local networks) and try that instead?&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2018-01-27T00:00:51-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Rig4 ext&#8230;</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2018-01-27_rig4_ext_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2018-01-27_rig4_ext_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Things to look for:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;A per-page &#8220;share to FB&#8221;. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developers.facebook.com/docs/sharing/web&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://developers.facebook.com/docs/sharing/web&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;FB markup: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developers.facebook.com/docs/sharing/webmasters#markup&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://developers.facebook.com/docs/sharing/webmasters#markup&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A per-page &#8220;share to G+&#8221;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;G+ markup?&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Twitter meta-data: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/summary&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Microformats v2: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://microformats.org/wiki/microformats-2&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://microformats.org/wiki/microformats-2&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RSS feed for &#8220;blog&#8221; page?&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;From &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.kevinmarks.com/partialsilos.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://www.kevinmarks.com/partialsilos.html&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;: G+ will parse the FB &#8220;open graph&#8221;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;It links to &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://schema.org/Article&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://schema.org/Article&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which is Meh&lt;/span&gt;&lt;span style=&quot;vertical-align:super&quot;&gt;2&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&#8217;m not sure I want &#8220;share buttons&#8221;. What I&#8217;d like however is being able to tag a snippet + target image with an izu-tag and then let it generate the sickening tags automatically.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2018-01-27T00:00:30-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Status</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2017-12-18_status.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2017-12-18_status.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rig4:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Got a whole new implementation in Java. Works using gdoc, local hash cache to avoid updating content that has not changed. Aggressively trims exported HTML. Not even using Material Design Lite nor Bootstrap, keeping it super simple.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This is &#8220;good&#8221; enough for now. It is all an &#8220;exp&#8221; prototype and not per spec.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Might implement the Rig4 spec for MM later?&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Randall:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Back in business. Work on laptop, work on tablet, work on turnout control.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Software:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Cab Engineer (v2 for Cab Throttle). Next project in line.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Monitor (on hold).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Nerdkill Unity (on hold).&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2017-12-18T00:00:58-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Rig4</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2017-10-27_rig4.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2017-10-27_rig4.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rig4 was not generating drawings anymore.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Two issues:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The generated URL for drawings changed from docs.google/com/drawings/image?id=... to docs.google.com/drawings/d/&amp;lt;id&amp;gt;/image?... &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The generator was not generating an error on unprocessed docs.google.com links. That means these were exposed in the generated HTML and savvy-enough users would try to follow them, get an access denied and ask for permission to get access to the underlying doc.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Although Rig4 experimental doc generating work, it&apos;s still an ugly hack. It&apos;s very dependent on the generated html format. In essence the system is too fragile and doesn&apos;t work.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Also it regenerates every time, regardless of whether the source has changed.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So eventually I need to fix that.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The Drive.files.export API has the following formats for download:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://developers.google.com/drive/v2/web/manage-downloads&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://developers.google.com/drive/v2/web/manage-downloads&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Docs export to HTML, text, rtf, Open Office, PDF, MS Word, EPub.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Drawings export to JPEG, PNG, SVG, PDF.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The Python-based implementation is a core part of the issue, and it&#8217;s clunky.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As far as languages to use, although Go works in its own clunky way, I&apos;d like to get away from it. I&apos;d say the contenders are Java or Node.js at that point. The Drive API also offers .Net, Python, PHP and Ruby but I need to standardize on something and JS might do it for what it&apos;s worth. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2017-10-27T00:00:36-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Mesh Networks</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2017-10-27_mesh_networks.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2017-10-27_mesh_networks.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;ESP8266 (wifi / mesh, e.g. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/Coopdis/easyMesh&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;library easyMesh&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;NRF24L01 (in the 2.4 GHz band)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;RFM69 (&amp;lt; 1 Ghz, from &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://forum.mysensors.org/topic/4861/should-i-go-for-esp8266-or-may-be-nrf24l01-arduino-nano&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;last thread here&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2017-10-27T00:00:50-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">State of the Onion</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2017-09-24_state_of_the_onion.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2017-09-24_state_of_the_onion.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Current projects or ideas and their status, more or less from higher to lower priority:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Randall: Setup the linux box to auto-start with JMRI faceless and my controller script.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;High priority, EOM / EOY.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A sub-project is having a non-authenticated display on the laptop, which could be either in the form of a screen saver or a non-privileged user in auto-login running a single full screen app that can&apos;t be closed. Ideally: EOY. Useful for me.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Randall: RTAC android app for tablet. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;High Priority MVP by EOM / EOY on at least one tablet. Can be fine tuned later.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Home Monitor: &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Redo circuit board for alarm interface + box. Still want it. Low-priority because works well and kinda like the hackish look.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Current RPi setup works well.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Monitor android app using Firebase is meh &#8658; Rebuild without Firebase, direct App Engine web + Android w/ notifications.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Cab Engineer:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A v2 of Cab Throttle. Rewrite app using my RX instead of event bus.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;MVP should have server save/recall, engine save/recall, soft-consist, wear.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2017-09-24T00:00:35-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Simple Rx</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2017-08-12_simple_rx.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2017-08-12_simple_rx.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I should try to make my own little Rx clone lib.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There are a few good things in the RxJava lib but it also has these issues:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It does too much for my needs.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;On paper, and when viewing a few first tutorials, it&apos;s all good. But then it breaks down. There&apos;s RxJava 1 vs 2. The vocabulary confuses me to no end. There&apos;s too much of an initial learning curve for what looks like a simple concept on the paper.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Example of vocabulary confusion:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;An &quot;observable&quot; is actually a stream of events. Then call it a stream.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;Observers&quot; actually subscribe to a stream. Then call them subscribers.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A source or an emitter is the same thing.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A consumer is an observer (subscriber).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Then RxJava 2 adds its own confusion by having Flowable vs Observable, and their version of the Observer is now called a Subscriber (as it should).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RxStream uses even different names: Publisher, Subscriber, Subscription, Processor.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The issue with this is the same as with languages like Ruby and Go: They are &quot;almost&quot; easy to get but yet different. When I move away from one for 6 months or a year, I need to go through the ropes again to get familiar with what I wrote a year ago. A &quot;good&quot; framework is something that is intuitive for me and I can just re-read my old code without wondering what it means or why I wrote it that way.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&apos;ll use the RxStream terminology:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A Publisher is the source, emitter, generator. It takes a stream and publishes new events onto it.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A Subscriber is the reader, consumer, observer. It takes a stream and reads from it.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Schedulers (from RxJava) express which thread a publisher or subscriber runs onto.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A Stream is a pipe that sends events from the publisher(s) to the subscriber(s). It can be a 1-1 or a N-N combination.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Streams can be created empty and publishers and subscribers added to them in any order.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Streams are either open, pause or closed (aka &quot;completed&quot;).&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Closing is final. Once closed, publishing generates an error.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Subscribers can pause the stream, which blocks subscribers.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Processors are stream filters/maps. They take one or more streams and combine events &amp;nbsp;together into a new output stream.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Example: map(lambda X &#8658; Y), take(N), delay(N), merge().&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Subscribers are notified when publishers are added or removed.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Subscribers are notified when publishers pause the stream.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Publishers are notified when subscribers are added or removed.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Streams are by default asynchronous and multithreaded.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When there are multiple publishers or subscribers, they could all be on different schedulers.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Canonical examples:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S = Stream.create() &amp;nbsp;# can be exported via dagger&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Or&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Inject Stream S;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S.pause(true);&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S.addSubscriber( &#8230; ).on( Scheduler );&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S.addPublisher( &#8230; ).on( Scheduler );&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S.addProcessor( map( &#8230; ) ).on( Scheduler );&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S.pause(false);&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S.isPaused();&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S.close();&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Async task:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Stream.on( Scheduler.io() )&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;# sets default scheduler unless overridden&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.publish( fixed data, e.g. some url )&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.publishOn( Schedulers.io() ) &amp;nbsp;# affects the last added publisher&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.map( lambda worker: url &#8658; http request &#8658; body response )&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.processOn( Schedulers.io() ) &amp;nbsp;# affects the last added processor&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.subscribe( subscriber lambda )&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.subscribeOn( Schedulers.androidMainThread() ); # affects last subscriber&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;[Update 2017-08-20]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Once this is implemented, I have one issue: should users be able to publish directly on the stream, or always via subscribers?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Example:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_pub = MyCustomPublisher()&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_stream = Stream.on(Schedulers.io())&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.publishWith( _pub )&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.subscribe( SomeSubscriber() );&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_pub.publish(42);&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_stream.publish(43);&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Now we have 2 ways to inject events in the stream: via the publisher and via the stream directly.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The latter overrides whatever behavior from the publisher: we might have used a Just() publisher that only provides its constructor arguments yet we can still add more.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In essence, the publisher does not control whether the stream is &quot;read-only&quot;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So a different strategy is:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Only Publishers can publish on a stream.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Users that hold a stream can&apos;t publish directly.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Furthermore, we&apos;re reducing the scope of each objects:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Stream methods only serve to configure the stream itself.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Publishers decide if they expose a public publish method.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;When they don&apos;t, they become closed generators.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2017-08-12T00:00:54-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Cab Throttle v2</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2017-08-12_cab_throttle_v2.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2017-08-12_cab_throttle_v2.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&apos;ll reorganize the Cab Throttle project under this structure:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A WiThrottleLib repo (destined to maybe open source later).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A Cab Throttle v2 repo. The app itself.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Part of the app such as the server list and the default throttle view should go in the lib.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The app repo will keep things that are branding specific. For example if I want to extend the default view with plugins, that goes in the app. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The lib provides hooks that the app extends.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One core change is to move away from the event bus structure and go directly to daggerization.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2017-08-12T00:00:20-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Cab Throttle</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2017-08-11_cab_throttle.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2017-08-11_cab_throttle.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;App on G Play: &quot;DCC Cab Throttle&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Non-goal: Not trying to compete with Engine Driver. Invariably people will compare it to that. Let it be. Do what&apos;s useful to me. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What&#8217;s left, missing requirements for an ideal 1.0:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Server list needs startup hints.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;No JMRI server found. Automatic server discovery has started.&quot;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Plus some bullet points: Make sure one is connected to the same wifi network as the JMRI server /or/ Use the + button to enter a server address manually.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Remember recently used servers. Recall + delete.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Suggestion: &quot;star&quot; to memorize a server, or make it automatic?&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Suggestion: tie server to wifi network.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Auto-connect feature (if not connected and on same wifi network).&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Edit server button: Full page edit server &#8658; change name, IP/port, star/unstar, wifi network, auto-connect, delete entry.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Remember recently used engines. Recall + delete.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Q: Per server or across servers? Should it be an option?&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(v2) Export / import servers or engines list. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;soft&quot; consists. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;F to lead or all. &lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Replace F icons. They suck. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Replace program icons (wear, trash, wifi)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Different view modes. Look at iOS, people like its clunkiness. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Definitely consider having easily switchable views. Full-screen mode with themes. &lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(v2) user plug-in views. &lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(v2) Settings to remap F icons to different F numbers. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Create profiles and then associate profile to dcc address. &lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Provide a few default profiles (eg MTH, Athearn, Bachmann) &lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(v3) experiment with plug-ins for profiles, comm, views. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(v3) Ability to use F &amp;gt; 9&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Or instead of 1..9, select which 8 numbers to display. &lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Code wise:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Reboot project using structure from RTAC. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Separate WiThrottleLib in its own open repo. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Optional open-source cab throttle except branding? &#8658; split into an app lib. &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2017-08-11T00:00:22-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">RxJava</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2017-05-23_rxjava.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2017-05-23_rxjava.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Still trying to wrap around the basics. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Some high level vocabulary:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Observable = iterator == the stream.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Source / emitter == produce values (into an Observable) via onNext / onCompleted.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Observer = consumer == callback (onNext / onError / onCompleted).&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;Subscribe to an observable using an observer&quot;.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; This is my main grip with RxJava: the vocabulary is nonsensical and confusing. It means as soon as I stop using it I will get confused when I get back to it later.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The flow in a nutshell: &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;text-indent:36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;(emitter) &#8658; Observable &#8658; Observer[s].&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;But in fact it is implemented as such:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left;text-indent:36pt&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Observable.onSubscribe(emitter code) &#8658; Observer/Subscriber(receiving code)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;with various intermediate steps in the stream.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A Disposable/Subscription represents the link from an Observer/Subscriber to an Observable/stream.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Core to remember:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Observable.{from|create}(source) ---&amp;gt; the observable&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.subscribeOn(Schedulers.io())&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.observeOn(AndroidSchedulers.mainThread())&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.subscribe(an observer).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RxJava2 has Observable vs Flowable:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Observable = no back pressure.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Observer type: #onNext / #onComplete / #onError / #onSubscribe(Disposable).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Disposable: #dispose.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Specialized types: Single, Completable, Maybe (types of Observable)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Source: fromCallable(() -&amp;gt; return value), &lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Source: Observable.create() using a &quot;subscriber&quot; with an &quot;emitter&quot; object.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Flowable = has back pressure built-in.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Subscriber type: #onNext / #onComplete / #onError / #onSubscribe(Subscription).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Subscription: #cancel, #request.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RxStreams:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Publisher: #subscribe(Subscriber)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Subscriber: #onSubscribe(Subscription)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Subscription: #request, #cancel&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Processor&amp;lt;T, R&amp;gt;: converts a Subscriber T into a Publisher R.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A few links:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;The missing intro: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://gist.github.com/staltz/868e7e9bc2a7b8c1f754&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://gist.github.com/staltz/868e7e9bc2a7b8c1f754&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;RxJava Android tips: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://futurice.com/blog/top-7-tips-for-rxjava-on-android&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://futurice.com/blog/top-7-tips-for-rxjava-on-android&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Using it to replace an Event Bus:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://blog.kaush.co/2014/12/24/implementing-an-event-bus-with-rxjava-rxbus/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://blog.kaush.co/2014/12/24/implementing-an-event-bus-with-rxjava-rxbus/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://lorentzos.com/rxjava-as-event-bus-the-right-way-10a36bdd49ba&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://lorentzos.com/rxjava-as-event-bus-the-right-way-10a36bdd49ba&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Useful videos:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=k3D0cWyNno4&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.youtube.com/watch?v=k3D0cWyNno4&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=htIXKI5gOQU&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.youtube.com/watch?v=htIXKI5gOQU&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The most obvious pattern is to replace async tasks:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Observable.just( input data )&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.map( async lambda, transforming input to output type )&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.subscribeOn(Schedulers.io())&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.observeOn(AndroidSchedulers.mainThread())&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.subscribe( observer using the output )&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;To replace a timer task:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;subscription = Observable.timer(delay, interval, TimeUnit.unit)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.take(20) / map, etc. # for example&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;.subscribe( observer doing something at interval )&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;margin-left:36pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;subscription.unsubscribe() # equivalent to timer.cancel&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2017-05-23T00:00:07-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">RxJava / RxAndroid</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2017-04-21_rxjava_rxandroid.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2017-04-21_rxjava_rxandroid.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Looking into RxJava 2 for usage in CabThrottle and derived apps.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RxJava 2 has 2 kinds of streams: &quot;observables&quot; (no back pressure, no blocking) and &quot;flowable&quot; (back pressure, blocking). Still trying to figure the APIs correctly, but let&apos;s see where these would be needed:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Mountain throttle: stream from the hardware throttle to notify of throttle changes.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;CabThrottle:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;NSD/Discovery stream (add/remove).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Throttle UI to controller.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Throttle controller to network.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Network back to throttle controller/UI.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;KeyServer changes.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Some of these were done using the event bus and instead would map nicely in the concept of a stream with subscribers being notified. They are not pull events, mostly push events.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;All of these map on the observable (no back pressure / no blocking) pattern.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2017-04-21T00:00:44-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Event Bus</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2017-03-21_event_bus.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2017-03-21_event_bus.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;CabThrottle uses the new Event Bus design I made up in 2014.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pros and cons:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pro: The event bus implementation is simple and minimalist. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pro: There is no annotation processor to find subscribers, so no complicated build setup.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Cons: It suffers from the typical good/bad part of a disconnected sub-system. The whole point is to remove hard dependencies, but the side effect is that it hides the dependencies. They are still there, just not so visible.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pro: The &quot;user&quot; dependencies are simple enough to find. Search for code using any of the bus constants to find the users. Done.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Cons: The bus messages rely on a numeric ID and the simple naive approach used is to create &quot;namespaces&quot;, a.k.a. ID ranges. E.g. 1000 is the base for the Discovery bus messages. But it doesn&apos;t say what is the max, and there&apos;s no centralized place to look at all the usage ranges (on purpose, because decentralized). That means it&apos;s hard to place it in a library and be sure there won&apos;t be conflicts down the road with something else.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Cons: There&apos;s some inefficiency in sending messages to subscribers without knowing if they want to listen to them. The receivers can subscribe to message class types, but that&apos;s not too useful when for example sending a string notification.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So really the weakness is the ID range issue. Ideally each message would use an enum but the Java implementation of enums kind of sucks -- can&apos;t make a &quot;generic&quot; enum, and they are too heavy for serialized number sequences. Another alternative is to use a hash code as a base (e.g. NSD DiscoveryMixin.class.getHashCode() but even that is not guaranteed to not have collisions and it would prevent from making static final int IDs.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It does bring back some potential for dagger. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In usage, I mostly use the event bus for notification, obviously. E.g. NSD discovery mixing sends bus messages when a new host appears or vanishes. Well I can just register a listener and be done with it, since that&apos;s essentially what the event bus does. One point of the event bus is that the subscriber could be a view or something that does not have access to the sender object because it would require passing everything via globals or something, as I used to do before. Well that particular problem is well solved by dagger. E.g. there would be a module for the discovery client and whatever code need to use it, be it the activity to start the client or the UI to display its state, can simply access it via injection, then subscribe a listener as needed.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Same goes for throttles for example. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The other realization is that this seems to also fit the Reactive pattern of having observable streams. Each bus is essentially a stream, and users can get the stream via dagger.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Worth looking into it.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2017-03-21T00:00:57-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Dagger</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2017-03-10_dagger.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2017-03-10_dagger.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It still feels like shoe-horning to use dagger in my apps (e.g. CabThrottle).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Reactive &#8230; Potentially interesting or totally hyped:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://reactivex.io/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://reactivex.io/&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxJava&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/ReactiveX/RxJava&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;-- an observer pattern (the &quot;reverse&quot; of a subscriber pattern) to do async operations.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;It has stuff for Android (&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxAndroid&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/ReactiveX/RxAndroid&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Potential: for tasks that involve multiple AsyncTasks (e.g. google play login) or for replacing my event bus. (huh, not really?)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Unrelated:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Dokan, a user-mode file system for Windows. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dokan-dev.github.io/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://dokan-dev.github.io/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2017-03-10T00:00:08-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">CMRS Touch Panels</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2017-01-01_cmrs_touch_panels.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2017-01-01_cmrs_touch_panels.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://ralf.alfray.com/trains/blog/train/2018-01-21_turnouts_touch_panel_for_jmri_at_cmrs.html&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Proposal doc as been sent&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;: &lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Option A: use the cheaper Intel &#8220;Ubuntu&#8221; stick. Fairly good price at $39. Use it as a dumb remote and just display a web page served by the JMRI server.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Option B: use the beefier Intel Windows 10 stick. $125 or such. Run a C# or Java app that displays an SVG map and communicates with JMRI via the JSON server or the WiThrottle server.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Should look into option A, software side:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Server side, a dedicated HTTP server. Could be either IIS or a custom Java servlet. The latter is probably easier to deal with, on a custom non-80 port.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Explore what the JSON server in JMRI can and cannot do. Eg it can serve states, but does it allow performing changes? &#8658; yes, e.g. JMRI\java\src\jmri\server\json\turnout\JsonTurnoutHttpService.java doPut().&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Another option is to do a Java/Jython bridge like used with Conductor. This makes it trivial to start/shutdown at the same time as JMRI and can use the Jython interface to access turnouts.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;On the client side, we just need to display some SVG or bitmaps. Multiple maps can be trivially handled by having different query parameters.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Server side:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Jetty / JSP&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Restlet&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Swing for UI&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;JMRI Jython script dynamically linked to a Java JAR&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Client side:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;jQuery&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;SVG&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;vanilla JS&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2017-01-01T00:00:30-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Firebase Findings</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2016-07-29_firebase_findings.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2016-07-29_firebase_findings.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Part of the project goal was to explore Firebase. From what I see right now:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Firebase auth looks bolted on. I understand the main point is having different login systems (google, email, etc.) and the Firebase server generates a unique user id for new users, trying to regroup them across login system (e.g. email vs google account.)&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The pro is having a single user id regardless of the authentication method.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The obvious cons is the secondary server authentication lookup to convert the googler user id into a firebase user id.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pros: not having to implement it using my own app engine instance + db.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The &quot;realtime&quot; database seems to work as promised. However:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;User compartmentalization is done at the app level and by server-side rules. It seems fragile in the sense that a programming error or a design flaw could possibly expose all data to all users.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;All user data is visible as-is in the console, with a limit of 500 users or similar. Search can be done by user id. That seems like a potential PII issue and at the same time not sure how much it can really scale. What happens with 1 million users?&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;How much &quot;realtime&quot; is the database? I wasn&apos;t even able to sign-in on a low cell phone connection (vacation).&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pros: not having to implement it using my own app engine instance + db.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I did not try &quot;remote app settings&quot;. That seems like a generalization of the realtime db readable by all apps. Maybe that&apos;s the point and just enough.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I implemented the firebase analytics but I can&apos;t see the results yet, the console is quite unresponsive over a low cell connection.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I don&apos;t see anything obvious that is an advantage over pulling google analytics, except it&apos;s one less library and in theory it&apos;s tied to firebase user ids.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Overall I&apos;ll have to defer to see how this behaves with a better connection.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I do have my concern with the speed of the firebase requests.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The other thing not so clear is how does that scale.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Overall I guess the point of Firebase is having to avoid implementing an extra app-engine backend server. If it were used in an application that requires such a service, then the point seems rather moot.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For example I started a project with the idea of having both Firebase and App Engine. I thought I needed app engine for the storage of users ACLs, themes, and live instances but I see these could be replicated in the Firebase realtime db using denormalized storage &amp;amp; rules. The other reason I wanted app engine was to have all the processing on the server and the web site to be merely a &quot;dump&quot; presenter (using the MVP distributed pattern) .&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Using Firebase, it makes more sense to have all the logic client side, with only storage on the server side. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; It turned out to be disappointing. One issue is the login time on the Android app. It takes several seconds (10-20 s?) for the app to authenticate via google auth then via firebase before it can do any queries.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-07-29T00:00:26-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Firebase</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2016-07-15_firebase.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2016-07-15_firebase.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What I have at home is an RPi monitoring some status. The interesting properties of Firebase in this case are receiving notifications (aka GCM) and the use of the distributed &quot;realtime&quot; database. The question is how do the events get generated. Can a script running on the RPi send data to Firebase?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;Firebase Notifications&quot; are sent solely using the Firebase console web UI. Not adequate.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;Firebase Messages&quot; can be generated via an HTTP POST with an OAuth token; however this requires getting the registration tokens for each device that should receive, which doesn&apos;t seem practical.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;&quot;Firebase Database&quot; is a synchronized JSON store. There are many REST wrappers (Go, Python, or just curl) that seem appropriate for the RPi to generate data. Authentication rules are set in the database console. See &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://firebase.google.com/docs/database/rest/start&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://firebase.google.com/docs/database/rest/start&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-07-15T00:00:10-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Material Design Lite</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2016-06-21_material_design_lite.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2016-06-21_material_design_lite.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Interesting: Material Design Lite. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://getmdl.io/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://getmdl.io/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Application could be interesting on the Trains pages. Find a way to inject in the gdoc-generated pages. [done]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-06-21T00:00:18-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Firebase</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2016-06-18_firebase.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2016-06-18_firebase.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Looking at the firebase tutorials for web / android&#8230;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Web:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Uses nodes.js / npm for local testing + deployment.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Google Cloud Whatever project with console for management.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Firebase console seems to mostly cover deployment &amp;amp; database/files for web, not messaging or analytics. GA can be added separately anyway.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pros: authentication with a variety of platforms (G, Tw, FB, email).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Overall interesting.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Android:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Seems more refined with a variety of services: database, email app invite, GCM notifications, remote config values, analytics / crash reporting. And of course multiple auth providers. Also as admob support.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Seems like a good value: reduce boilerplate for a bunch of things (auth, crash, ga, db, remote config.)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Nothing about IAB, to be done separately.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-06-18T00:00:48-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Web / Javascript</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2016-06-17_web_javascript.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2016-06-17_web_javascript.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;From the Firebase tutorial, a good javascript ide is &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://atom.io/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://atom.io&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;open source, free, runs js.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;using &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://electron.atom.io/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://electron.atom.io&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;to build &quot;cross platforms apps using html+js&quot;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Javascript not-quite-replacements:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;CoffeeScript: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://coffeescript.org&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://coffeescript.org&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&#8230; compiles 1-to-1 to vanilla JS.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;TypeScript: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.typescriptlang.org&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.typescriptlang.org&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&#8230; also a compiler. More JS like, with decoration for types and access.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;- ES6: ...&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The high level summary is that CoffeeScript is Ruby/Python like and TypeScript is .Net like in their sugar-syntax addition/replacement.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;TypeScript seems to have a VS.Net add-on (confirm?)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;In terms of age: CoffeeScript &amp;lt; TypeScript &amp;lt; ES6.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Point of view: CoffeeScript is different enough that it&apos;s a new habit to learn. TypeScript is JS plus some sugar so can be used to decorate existing JS stuff. ES6 is the way to go but what about support? &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://kangax.github.io/compat-table/es6/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Compatibility chart here&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;: ES6 supported in V8 since Chrome 42 (so also in Node.js). Mostly there in recent Firefox and MS Edge.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Bottom line: don&apos;t bother with CS/TS. Go with ES6 where possible.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-06-17T00:00:20-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Firebase</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2016-05-22_firebase.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2016-05-22_firebase.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;One more thing to give a try: Firebase. &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://firebase.google.com&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;firebase.google.com&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;br&gt;What does it do, or doesn&apos;t? Why would I care?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&apos;s apparently based on top of the google cloud platform. Key features include analytics, database, storage, hosting, authentication, and cloud messaging.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Idea would be to use the central monitoring and the AP projects to test it.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Authentication: SDK has drop-in UI for auth, with several providers (G, FB, Twitter, email).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;Realtime Database&quot; is actually connected clients with a network-synchronized offline-persistent db. This is similar to one of my homebrew projects (except it&apos;s already done.)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;Remote Config&quot; seems very similar, but with values that can be fetched yet not activated. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;Storage&quot; is to be able to upload user-generated content. Files are accessible via the Google Cloud Platform SDK too e.g. for server-side operations.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;Notifications&quot; seems to be all about manually sending messages to users.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&#8658; Try the &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://codelabs.developers.google.com/codelabs/firebase-web/#0&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;web tutorial&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-05-22T00:00:35-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Polymer (web library, Google)</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2016-04-14_polymer_web_library_google_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2016-04-14_polymer_web_library_google_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.polymer-project.org/0.5/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.polymer-project.org/0.5/&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Version 0.5 with core-scaffold (generic web site template), core-toolbar.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.polymer-project.org/1.0/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://www.polymer-project.org/1.0/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;br&gt;With material design elements.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&quot;Look at &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/PolymerElements/app-layout-templates&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/PolymerElements/app-layout-templates&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;for a few simple scaffolds.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;You should be able to copy one of those templates to replace core-scaffold in your application.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;If you want a more comprehensive starting point for an app, you can also look at &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/PolymerElements/polymer-starter-kit&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/PolymerElements/polymer-starter-kit&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Example in use: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://google.github.io/dagger/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;http://google.github.io/dagger/&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;br&gt;Code behind it: &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://github.com/google/dagger/tree/gh-pages&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://github.com/google/dagger/tree/gh-pages&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Also interesting: Material Design Lite. &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://getmdl.io/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://getmdl.io/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-04-14T00:00:09-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Next Project?</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2016-04-12_next_project_.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2016-04-12_next_project_.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What should the next &quot;new&quot; project be?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Would be nice to have something with a server side component in Go and an Android part..&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A Go-based AppEngine server.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Use Google/Android user authentication.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A client/server MVP model (as much logic server side as possible.)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Lua scripting for the gameplay.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Short-range NFC exchange.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Note about JS stacks:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://angular.io/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Angular&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;--&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;v1 vs v2&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://facebook.github.io/react/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ReactJS&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;-- the cool new thing?&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://medium.freecodecamp.com/angular-2-versus-react-there-will-be-blood-66595faafd51&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;this comparison&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://www.airpair.com/angularjs/posts/angular-vs-react-the-tie-breaker&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;this one&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;for a comparison with pros and cons. Seems to indicate to go with &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://facebook.github.io/react/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;ReactJS&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;My take: looking at the source code being their respective home pages, the Angular one is impossible to read, the ReactJS is simple and natural. Go with the latter.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-04-12T00:00:04-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Distributed Thingy and Presenter Pattern</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2016-03-31_distributed_thingy_and_prese_518eed2a.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2016-03-31_distributed_thingy_and_prese_518eed2a.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So there&apos;s the usual MVP -- Model / View / Presenter pattern, exploded in a distributed fashion. A server sends data, and the client has a bunch of presenters for that data. That makes the client somewhat &quot;generic&quot; in the sense that it just presents whatever data it is given.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;MVP : model &#8594; presenter &#8594; view.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The view is &quot;dumb&quot; and only displays stuff. It&apos;s a ViewHolder essentially.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Model has all the data and no logic.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;All the logic is in the presenter. The presenter is notified of view changes and updates the model and the views.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For a distributed server-client system, we want all the logic server side.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So really what we have is:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Server model &#8594; server presenter (logic) &#8594; client proto &#8594; view renderer.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;where proto is naturally a Cap&apos;n Proto for example.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The difference between MVP and MVC: in MVC, the model has part of the logic (it dictates what gets sent to the View) and the Controller accepts the input and updates the model. In MVP, the view and the model are dumb, and the presenter embeds both the logic to go from M-to-V and the logic from the Controller (to go from V to M.)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Thinking ahead in terms of a game. Interaction cannot only be handled server side. Otherwise it would mean every user action would have a huge network delay impact. That prevents offline usage at best, and of course implies lag, at worse. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That means part of the model/presenter needs to be on the client:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[Server + Client model] &#8594; server presenter &#8594; | &#8594; [Client model] &#8594; [presenter] &#8594; View.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The client presenter handles the immediate interaction and at the same time pushes back some updates to the server.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For offline play, that&apos;s all we need. For live server-backed play, that has 2 frequent issues:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Server needs to sanitize / validate inputs from the client. They cannot be trusted. Otherwise it encourages cheating by simple MITM techniques.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Server pushes updates to client regularly which are more trusted than local updates. That can create magical warping when there&apos;s a lag.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-03-31T00:00:13-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Cap&apos;n Proto</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2016-03-31_cap_n_proto.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2016-03-31_cap_n_proto.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://capnproto.org/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://capnproto.org/&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This seems like it could be a good match for Nodes and potentially other projects.&lt;br&gt;One obvious goal is cross-platform serialization without having to reinvent it myself.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For Nodes it could be used at the inter-nodes layer, to structure packets between nodes.&lt;br&gt;Nodes server should not care about their payload, with the exception that ideally as a service nodes should provide both a byte stream and a packet/message oriented stream. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-03-31T00:00:57-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Nodes &amp; Central Monitoring</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2016-03-06_nodes_central_monitoring.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2016-03-06_nodes_central_monitoring.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There&apos;s a desire to reboot the Nodes project, but in fact that desire is somewhat unfounded.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2016-03-06T00:00:15-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Windows enumerate USB devices -- list usb: USBView</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2015-12-28_windows_enumerate_usb_device_86bb3c0d.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2015-12-28_windows_enumerate_usb_device_86bb3c0d.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Windows enumerate USB devices -- list usb: USBView&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/hardware/ff560019(v=vs.85).aspx&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://msdn.microsoft.com/en-us/library/windows/hardware/ff560019(v=vs.85).aspx&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://dev.windows.com/en-us/downloads/sdk-archive&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://dev.windows.com/en-us/downloads/sdk-archive&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;and install only the &quot;debugging tools for Windows&quot;.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Install path is &lt;br&gt;C:\Program Files (x86)\Windows Kits\8.1\Debuggers\x86\usbview.exe&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There&apos;s also an x64 one but it&apos;s still under Program Files x86:&lt;br&gt;C:\Program Files (x86)\Windows Kits\8.1\Debuggers\x64\usbview.exe&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Note on DigiX:&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://digistump.com/wiki/digix/tutorials/programming&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;https://digistump.com/wiki/digix/tutorials/programming&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&lt;br&gt;Bootloader is SAM-BA with VID/PID 03EB/6124&lt;br&gt;Native USB mode is VID/PID 2341/003E&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;However DigiX appears with VID 0x16D0 and PID 0x078A&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;From http://digistump.com/board/index.php?topic=1185.20 &lt;br&gt;VID : PID&lt;br&gt;03EB:6124 &amp;nbsp; Atmel: SAM-BA activated device&lt;br&gt;2341:003E &amp;nbsp; Arduino DUE native PORT selected, sketch is running&lt;br&gt;16d0:078a &amp;nbsp; DigiX board selected, sketch is running&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Now open Device Manager &amp;gt; Ports (COM &amp;amp; LPT).&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It shows &quot;Digistump DigiX (COM6)&quot;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;But since the Arduino IDE expects COM3, change it: device manager &amp;gt; Ports &amp;gt; DigiX (COM6) &amp;gt; Properties &amp;gt; Port Settings &amp;gt; Advanced &amp;gt; &#8230; won&apos;t do COM3 says &quot;in use&quot; (by whom). &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Nevermind, change IDE to match COM6: Arduino 1.6.5 &amp;gt; Tools &amp;gt; Port &amp;gt; COM6.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Note by default the Arduino IDE expects 9600 bauds so make sure the sketch inits with this as early as possible: &amp;nbsp;Serial.begin(9600); &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2015-12-28T00:00:36-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">How to install/build go 1.5 from source on Linux</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2015-09-10_how_to_install_build_go_1_5__8c57f07a.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2015-09-10_how_to_install_build_go_1_5__8c57f07a.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;How to currently install/build go 1.5 from source on Linux:&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ cd ~&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ git clone https://go.googlesource.com/go&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ cd go&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;# create the go 1.4 bootstrap using gcc&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ git checkout go1.4&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ ( cd src ; ./make.bash )&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ mkdir ~/go1.4&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ cp -rv bin pkg src ~/go1.4&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ (cd src ; ./clean.bash )&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;# build latest version&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ git checkout go1.5&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ ( cd src ; ./all.bash )&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;$ export GOROOT=~/go&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2015-09-10T00:00:09-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Research page for BX07</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2014-10-09_research_page_for_bx07.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2014-10-09_research_page_for_bx07.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&apos;ve added a new idea/research page for BX07.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;I just realized the scope &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;exactly&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;covers Ikaria v2 and more or less &amp;nbsp;v1:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Both are &quot;skeleton&quot; apps, destined to be reused for future projects; some kind of framework/sample to avoid re-writing the same thing all the time.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Both are supposed to be rather horizontal and cover a lot of areas, namely server-vs-app, remote sync/cloud, IAB &amp;amp; licensing.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Both are supposed to be &quot;validated&quot; by extensive testing rather than actual implementation.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Both will not happen for exactly that reason.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The realization is that I have lots of ideas and thus I&apos;ll tend to focus on the actual results rather than the theoretical ones -- which will best remain as doc write ups.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There&apos;s also the mythical idea that they don&apos;t get implementation because writing software is hard and time consuming and thus if I had a framework to work upon, it would make everything more smoother.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The former realization seems valid, the latter is a load of BS. Frameworks don&apos;t make things easier -- they canalize in one direction and make it harder to be flexible and do things outside of their scope. Since my ideas are generally quite broad and volatile, attempts at frameworks don&apos;t help -- e.g. RLib for example.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2014-10-09T00:00:31-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Too many projects going on</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2014-09-17_too_many_projects_going_on.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2014-09-17_too_many_projects_going_on.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Once again I have too many projects going on. Here&apos;s a summary of the current projects with a quick summary state, more or less in the order in which I would like to prioritize them:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The Cleaner -- ongoing. Slowly put on pause after vacation, should go back to it. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;NovaScript v1 -- pending. Taking too much time to write tests, not clear of the direction; I had realized that v1 was not what I wanted; since it&apos;s still embryonic and experimental, modifying the concept to fit my needs is part of the project goals.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Google Code cleanup -- not started. Got overall idea, need to follow through.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Train stuff -- ongoing. Several things: exploring ideas right now, nothing concrete.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Got the JMRI server part setup so I don&apos;t need to make my own.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Next step is arduino control of one turnout + integrate in JMRI.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Next step is front panel tablet / wooden console + expand to all layouts.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This is a long term overall project with many small projects.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I also need to pipeline things better. E.g. for The Cleaner I can finish the widget part and a prototypal customizable UI, then it will be waiting on DK&apos;s side. During that time I can focus on train/arduino stuff.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For NS, I need to rethink the whole thing. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The initial design was for an experimental v1 that would not be too useful yet would give me some directions. That&apos;s good and the v1 implementation proved interesting and showed some issues, which I addressed as I went, but I need to speed this up if I want to see the rest of the unforeseen issues -- it just takes too much damn time to do it properly.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Since I don&apos;t think of v1 has being ultimately so useful, should I probably not focus on &quot;doing it right&quot; and instead cut corners and implement it faster? One issue with that is once I specify a v2 as addressing all the issues found in v1, it will also take forever to do it right unless I can make it an evolution. So whilst I need to speed up v1&apos;s implementation, I should not ruin it because I might want it for later.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Another approach: scratch v1 and specify v2 directly, then rework v1 as a subset of v2. Then implement v2, with the optional parts left out at first.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The problem is that the current implementation of v1 has focused on the parser, but that&apos;s only a minor part of it. No work has been done on the runtime and the text vs graphical editor and then there&apos;s the larger cat-in-the-bag issue of which underlying language to use.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2014-09-17T00:00:06-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Google Code transition, GitHub vs BitBucket</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2014-09-09_google_code_transition_githu_94202b4b.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2014-09-09_google_code_transition_githu_94202b4b.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Google Code transition:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Google Code will close, with enough time to migrate projects.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;GitHub sounds like a logical choice.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Price model is based on number of private repos, with unlimited collaborators.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;BitBucket is the other choice.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Part of the Atlassian group.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Private repos are unlimited even in the free plan.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Price model is based on the number of users, with unlimited repos.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A users is &quot;someone with r/w access to your private repositories&quot;&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Free model is up to 5 users.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pros/cons:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;GitHub is more suited for high visibility + trivial project cloning.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;BitBucket is better for my personal stuff -- I want low visibility including private repos which I do not have right now.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I don&apos;t need users (just me, maybe an rdrrlabs repo)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;With BitBucket, I might want to try to mirror my home repos as backups.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;List of Google Code repos and migration path:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Most of my GC repos are here to &quot;reserve&quot; a namespace and project name. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Most of my GC repos are here to serve as an online backup. Many of them I do not wish to expose so I jungle around to only publish &quot;public&quot; stuff in them.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This isn&apos;t needed in the GH or BB model since each project is under the user&apos;s namespace.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&apos;d suggest going with BB because I mostly want private repos.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Most repos would go into private mode for pure archival purposes, no activity.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Check whether a repo can be changed from private to public at any time or is fixed.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Only expose a minimal set of &quot;useful&quot; repos.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2014-09-09T00:00:15-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Language design</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2014-07-04_language_design.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2014-07-04_language_design.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&apos;d like to do a parallel research document on language design.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Right now I have some ideas for Hint, which is still very vague and not well formalized. It&apos;s a bit of a catch-all. So instead I did a subset with NovaScript, whose version NS1 is really limited -- the main purpose is to remember how to implement a language and interpreter, then have a more useful NS2 version. This isn&apos;t Hint at all, although hopefully some things could be reused.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Hint discussion suffered from being both a language discussion and a platform discussion but I believe I cleared that one out, or did I?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Anyhow, the point of this snippet is to remember that, in an ideal version, Hint would have elements of:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?ActorsModel&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Actor&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;model: each &quot;class&quot; or module is independent and calls are considered RPCs. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Distributed vs non-distributed and &quot;mobile&quot; actors. There can be several VMs distributed on different hosts and then freeze/move runtime modules around.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?BehaviorDrivenDevelopment&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Behavior Driven Development&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;-- in the very very early Hint discussion one of the ideas was to make it trivial to add testing. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One way is the classic unit test where each function has its associated test, but in practice this is seldom useful and unit tests quickly turn into larger behavior tests that encompass a set of functions.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Small functions can be treated as mathematical functions, with some inputs and output automatically compared.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;More often what needs to be described is the behavior of a whole or part of a system, but it gets tricky with side effects and generally the test itself is costly and confusing to write. Not to mention that all corner cases are hard to predict and test.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Still the idea is that this is highly valuable and ideally would be part of the source and not an on-the-side after-thought.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?ContinuationExplanation&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Continuations&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;built into the language, either like a &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?CallWithCurrentContinuation&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;call/cc&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Coroutines, iterators and generators.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Various levels of implementation using extensions to a unified language. That&apos;s the point of the hint levels (0=assembly, 1=C/java like, 2=interpreted). Similarly some of the concepts like distributed actors are not mandatory.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Whenever possible I should look up definitions in &lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://c2.com/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;c2&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;and match their name patterns.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So part of this impacts both the platform and the language (e.g. BDD, mobile/distributed actors.)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Some of these are things I have absolutely no idea about them except they seem like good ideas. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I&apos;ve never used call/cc -- although goroutines and closures are familiar. I certainly have no idea how to implement them, which makes it much more interesting to even think about.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;BDD and testing are in a slightly different category -- there are many languages that have support for unit tests and such. The question is whether I can make it attractive and efficient for me to use a-priori rather than a-posteriori. My current attempts at using UT are more hindering my development style than enhancing it.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2014-07-04T00:00:15-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Gameboy emulators</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2014-06-24_gameboy_emulators.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2014-06-24_gameboy_emulators.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I have been playing Pokemon Yellow on an Android GameBoy Color emulator lately. Thoughts about these apps and their model.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;First started with this one: &quot;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.bslapps2.gbc&amp;amp;hl=en&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Gameboy Color A.D&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Simple app. Easy to use.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Free with ads in the home screen, not during play time. Ads not shown when in airplane mode.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;All features available in free mode.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One of them (Fast Forward) wants you to watch a movie before activating it &#8658; skipped in airplane mode.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Lacks a couple features (Link Mode) + crappy zoom quality (too blurry)&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;Tried this alternative: &quot;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.fastemulator.gbcfree&amp;amp;hl=en&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;My Old Boy! Free (GBC)&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Better quality game.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Unfortunately many essential features are blocked by a &quot;Only in paid version&quot;.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Load: you can save but cannot reload!&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Link Remote: only in paid.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; That was enough of a kill-it-and-uninstall. I think the pure block is not a good strategy as I could not even evaluate the feature. The ability to save without reload is a total non-sense and feels like a bad bait-and-switch.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;There are many many other Android apps for GBC emulation, most of them looking exactly like each other.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; My feeling is there are 1 or 2 engines out there and everyone is just repackaging the same thing.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;There is one open source Android version: &quot;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://sourceforge.net/projects/gameboid/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;Gameboid&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot; &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It seems the original project was open-source and then the original app went paid/closed on Android.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This uses an NDK z80/gbc emulator source + code around to handle inputs and display and stuff. &lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Doesn&apos;t seem to support the Link Cable feature which I want.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;I could rebuild an app around this, but is it worth &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;my&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;time? Probably not.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So for a second I thought about whether I could rewrite the NDK gbc emu in Java. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; But surely someone has done it, hasn&apos;t it? &lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What do I know about z80 assembly code &amp;amp; emulation? &#8658; Nothing.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What do I know about GBC hardware emulation? &#8658; Nothing.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; Again, worth my time trying? Not really.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span&gt;&quot;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;http://www.millstone.demon.co.uk/download/javaboy/&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;JavaBoy&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot; is one such emulator rewritten in Java.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Tried it and it builds and run as a Java App in IJ with no problem. &lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Source is clean and instructive.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Most interesting there&apos;s a one-file z80 emulator right in there. &lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The rest is handling peripherals and magic GBC-specific constants.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Mentions passes some kind of emulation test + a list of games compatibles.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; All this clearly shows I know little on the subject, nor do I really care.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;So bottom line:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Reading the JavaBoy source code, I did learn a couple interesting things on how ROMs &amp;amp; save files are handled (basically they are 8k or 32k memory chunks) and they all tend to load a blah.zip or blah.gb with a side blah.sav for the 32k chunk so that means pretty much all these emulators are cross-compatible if you give them the right files.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;Went with the paid version of &quot;&lt;/span&gt;&lt;span style=&quot;-webkit-text-decoration-skip:none;color:rgb(17, 85, 204);text-decoration:underline;text-decoration-skip-ink:none&quot;&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.fastemulator.gbc&amp;amp;hl=en&quot; style=&quot;color:inherit;text-decoration:inherit&quot;&gt;My Old Boy!&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&apos;s disappointing that the Free version can&apos;t properly act as good test app.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Just suck it up and use the 15-min window for trying it out.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The Link Remote feature worked over wifi + over BT. It&apos;s a bit flaky (works fine initially when it goes bad.)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The app is $4. &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&apos;s not worth my time rebuilding my own emu for that price yet I had a fun time looking at the emulator sources and their implementations.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2014-06-24T00:00:06-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">State of Nova script</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2014-06-13_state_of_nova_script.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2014-06-13_state_of_nova_script.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;State of Nova script :&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Lack of interest for spec 1 of the language &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Not convinced about antlr4 &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pro : not writing lexer myself. Simple to understand, as it just generates a lexer tree. No mixing ast instructions + code in grammar file. Visitor pattern easy to work with. &lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Cons: doesn&apos;t do much. No automatic ast generation. Lots of boring template code to generate internal ast. Lack of non-free documentation. &lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Results in unfinished project so didn&apos;t tackle the hard parts yet such as execution. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Should I continue on something I won&apos;t use for the sake of it, or redesign directly for &apos;what I want&apos; (and what) without knowing if I can really implement it? &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Logic dictates I finish v1 as a proof of concept but don&apos;t stop there. &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2014-06-13T00:00:27-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Too many projects going on</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2014-05-28_too_many_projects_going_on.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2014-05-28_too_many_projects_going_on.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Same issue again : too many projects going on. &lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Work stuff. Main project going nowhere, maintenance takes most of the time. ==&amp;gt; Cut side things. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Home focus should be NovaScript. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Got a plan, should stick to it. &lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Fixed Comics2, good. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Learning Ember JS can wait. &lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Using it for Comics3 is overkill yet a simple way to start. Can wait though. &lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;RPi + PiFace : stick to a quick test so that I can demo it. Come back to it later. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Digispark : stick to the demo. Chances are he won&apos;t use it. &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;[...]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That little hardware hack should preempt NovaScript. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2014-05-28T00:00:06-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Learning JS stuff</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2014-05-26_learning_js_stuff.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2014-05-26_learning_js_stuff.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Learning JS stuff:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Bootstrap for UI/widget/look.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Embed JS for &quot;application&quot; framework (what does it bring? How&apos;s that MVC and testing really useful?)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Kinetic for HTML5 canvas.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Ideas:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Block editor. Saves locally on server. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Dashboard showing server data / state. Think piscine enregistreur. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;[...]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Speaking of piscine enregistreur, I don&apos;t think I can support velleman&apos;s USB stuff on an RPi (never got motivated to find how to deal with the driver), so look into other venues to have voltage measurement.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2014-05-26T00:00:03-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Web IDE idea</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2014-04-07_web_ide_idea.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2014-04-07_web_ide_idea.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Web ide idea: not a full project per se, just a server side hack.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2014-04-07T00:00:25-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Music App</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2014-03-05_music_app.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2014-03-05_music_app.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Did some work on the Music App this week-end: I kind of like and hate the little script language implementation. It would be interesting to formalize its implementation into a design doc and write a standalone library for it, working on separating &quot;core&quot; language from app-specific extensions.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;[update 2014-03-09, here it is: NovaScript [idea]] &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2014-03-05T00:00:39-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Hint</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2014-02-28_hint.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2014-02-28_hint.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Follow up to the last note about the hint documents. Generally speaking I should clearly organize documents using a category system. The &apos;ideas&apos; folder is such an attempt, but maybe some large categories in the title would help:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Brainstorming or Idea or Concept: live log about a concept or idea, unstructured.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Research: structured with version, or unstructured with live log. Explores one singular topic. Similar to brainstorming but more focused on a single topic.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The separation between research and brainstorming is fuzzy. Brainstorming kind of implies the document is unfocused and quite exploratory. Research kind of implies I already know more or less what I want to talk about.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I don&apos;t like the word &quot;Brainstorming.&quot; In fact I don&apos;t like any of these qualifiers here.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Design doc: structured, not a live log. Use versions to capture evolution. Describes one specific project, in a singular version. Discussions go in another document (concept one).&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Implementation: companion details about a single design doc version. Unstructured, live log. If one topic gets too large, extract it into a research document.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Platform or Overview: large description about a given system that might encompass several projects. Structured, with versions. Ongoing discussions go into a live research or brainstorming document, the overview document captures the summary of a potential state.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Applying this to the hint thing:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&quot;Platform hint&quot; becomes Brainstorming on the ikaria platform.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Overview: Ikaria v1&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Overview: Hint language v1. --&amp;gt; design doc v1.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Research: feedback on clojure.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Research: immutable data types for closures.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Idea: Cloud Bus --&amp;gt; Design doc v1&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Brainstorming: Robot game. --&amp;gt; Design doc v1 --&amp;gt; various design doc links to subprojects.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Also go back to older documents and rename them as clearly obsolete.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;[...]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;I think I&apos;ll settle for [Idea] and [Research] for now.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Part of the goal is to have a more systematic approach. Most of my documents are merely exploring an idea for an app or a library and are often expressed as a list of &quot;specifications&quot; that combine both desired features and potential implementations. One goal would be to have a more structured and formal approach where there&apos;s first a discussion document that explores possible variations and then settle down on one particular set of features &amp;amp; implementation.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Phase 1: A project description starts with an [Idea] document.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Often I just stop there or have various iterations on the idea. That can go into the same document. &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;If at some point I decide I&apos;m taking a radically new direction, I should make a new version (so Project Foo v1 [Idea] &#8658; Project Foo v2 [Idea].) Make sure to link to the previous one for reference.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Many times a document would describe an idea along with a potential &quot;specification&quot; overview. The pattern would be to add &quot;Spec&quot; to the doc title, but it&apos;s not a category by itself, it&apos;s still an idea unless it&apos;s formally rewritten as a design doc. That&apos;s because such documents are generally live documents where the proposed spec is part of the exploration, and not necessarily final.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Phase 2: If the project starts to get serious enough, try to stabilize one version of it.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;This becomes an [Overview] document or a [Design Doc] document.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;These documents should describe the project fixed at a particular implementation. If it turns out to not be satisfactory, amend the [Idea] document with an on-going discussion and continue stabilizing the idea.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Only a minority on medium-to-long term &quot;serious&quot; projects would get that treatment.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2014-02-28T00:00:06-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Git at home</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2014-02-22_git_at_home.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2014-02-22_git_at_home.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Git?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;We have git at home.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2014-02-22T00:00:59-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Hint</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2014-02-19_hint.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2014-02-19_hint.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Looking at the various Hint documents, it&apos;s a bit of a mess: As explained in the [Hint Platform] document, the various Hint docs are mixed because some define what I want to do &quot;with Hint&quot; rather than &quot;for Hint&quot;. &lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Namely [Hint Platform] describes how the discussion should be split into different projects:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Hint documents should be purely about the language and the VM itself.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Ikaria should be the umbrella platform, the shell that _uses_ Hint.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Cloud Bus is a separate project.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;One cleanup operation is to take the old [Hint Platform] and pretty much rename/move it into an &quot;Ikaria Platform&quot; document. Then the Hint doc folder should only have Hint material focusing on the language, its syntax, and implementation.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Given that, the goals are not quite changed:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Target apps are still Black Editor, Nerdkill/Asqare on top of Hint.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Apps are networked using experimental versions of Cloud Bus.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2014-02-19T00:00:37-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Robolectric</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2014-01-14_robolectric.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2014-01-14_robolectric.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Last week, experimented with Robolectric.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2014-01-14T00:00:15-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Modernizing Asqare and Nerdkill</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2013-12-30_modernizing_asqare_and_nerdkill.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2013-12-30_modernizing_asqare_and_nerdkill.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Looking at modernizing Asqare and Nerdkill using the look and feel of Puzzle. Ideally these should be made on top of a generic app shell, customized using assets and scripting.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Step 1: This is different from a live editor. Here the script and assets would be transformed into a native android app , directly in studio.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Step 2 is the robot game idea where a game editor app is used to produce mini games.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Need to better spec those. Step 1 can be combined with Ikaria. Testing should be a first class citizen, especially to abstract all ui using some kind of MVP pattern.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2013-12-30T00:00:48-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Set Puzzle phase 1</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2013-12-07_set_puzzle_phase_1.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2013-12-07_set_puzzle_phase_1.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Finished Set Puzzle phase 1.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Created a full features MVP (phase 1), presented it.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Could make a variation of such, from the same base. Code name is &quot;taz&quot;.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Reworked LibUtils:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Googlecode main branch is the C# version Lib1+Lib2 with AndroidAppSkeleton.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Googlecode &quot;android-lib&quot; is the java lib for Studio that provides Serial + utils.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&#8658; Implement new file-storage class with possible direct access.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Idea: use Nerdkill to experiment with Google Play Game APIs.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Revamp app to have the holo-light look &amp;amp; organization from Set puzzle.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Add leaderboards.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Add ludicrous achievements (&quot;played the app for 5 minutes&quot;, &quot;launched the app&quot;.)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Multi-player.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Add ludicrous IAB items.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Want to rework on the foundation of black-editor.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pending projects that need some love&#8230;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2013-12-07T00:00:00-08:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Val</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2013-09-23_val.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2013-09-23_val.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Web App idea: Val clone&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Web based (phase 0)&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Optional android client (phase 2)&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;2 implementations strategy in mind:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As an Go or Java/GWT based AppEngine app, with AppEngine data store.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As a GDrive app using a specific Drive document as the backend.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;As a learning tool, I could do the following:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Full HTML5 (?)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A Gdrive-app&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Use Dart (which has google-drive APIs libs)&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Custom drive document type&lt;/span&gt;&lt;/li&gt;
  &lt;ul&gt;
   &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Note: gdrive API no longer provides a spreadsheet API.&lt;/span&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Offline Chrome App would be nice but seems like a security risk.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Make it a Chrome extension. No local storage, no full listing, just a little popup for keyword search =&amp;gt; result.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Random bits:&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Model is a pure key/value list: name &#8658; { password, date when set }.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;For the fun/obscure reference, call it &quot;Slowdive&#8230; because it ain&apos;t no bloody Valentine&quot;.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2013-09-23T00:00:23-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">State of the onion</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2013-09-08_state_of_the_onion.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2013-09-08_state_of_the_onion.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&apos;s time again to take a state of the union and look at my various toy projects, their scope &amp;amp; state, how they intersect and what/where to go next. I&apos;d like to take one and finalize it. But the first question is what am I trying to achieve, and how these project fulfil that?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Side note: this is a summary. I need to organize my project management too (yet another task) and maybe something like Trello or docs would be useful. Main issue to solve here is fragmentation of the info in different silos and lack of cross-linking.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Projects, in no particular order:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Timeriffic 2&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Ikaria&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Cloud Bus &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Timer2 (aka T3 the reboot)&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pixel game &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;JS chrome offline app &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Home Music &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Home monitor &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Monitor webcam proxy &lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Rig4mm&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;What I want/need, mostly in this order:&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Useful: Fix Music because I need it, not for the tech itself.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Useful: Write the webcam proxy because I need it too, although it&apos;s a P2 at most.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Only useful if I follow up with the HMon app rewrite.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Write CloudBus phase 0 as a base foundation, not much to learn here..&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;It&apos;s not clear how successful phase 0 would be, so interesting part is understand limitations &amp;amp; usage first. That is, have concrete usage scenarios for it.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Ikaria is essentially a learning project. It&apos;s all about creating a base foundation that I can reuse whilst respecting guidelines and experimenting with testing.&lt;/span&gt;&lt;/li&gt;
 &lt;ul&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Same as with CloudBus, part of the design is understanding applications of it.&lt;/span&gt;&lt;/li&gt;
  &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Pixel game is the main &quot;client&quot; of Ikaria at this point.&lt;/span&gt;&lt;/li&gt;
 &lt;/ul&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Timer2 as a T3-reboot is mostly a no-go for now.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Timeriffic2 has been closed for a while.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2013-09-08T00:00:34-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">An Update on Ikaria</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2013-08-10_an_update_on_ikaria.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2013-08-10_an_update_on_ikaria.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Ikaria should merge with Black Editor and Hint-0.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2013-08-10T00:00:55-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Current Projects</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/2013-04-30_current_projects.html"/>
<id>http://www.alfray.com/ralf/blog/dev/2013-04-30_current_projects.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Current project list, by descending priority.&lt;/span&gt;&lt;/p&gt;
&lt;ul style=&quot;margin:0&quot;&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Finish Timer2 proto as a pure demo-proto:&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;T2:&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;GeoLoc personal app.&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;LibStorage&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;HMon&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Home Music App&lt;/span&gt;&lt;/li&gt;
 &lt;li style=&quot;padding-bottom:0pt;padding-left:0pt;padding-top:0pt;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Hint: delayed again.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;</content>
<updated>2013-04-30T00:00:54-07:00</updated>
</entry>
<entry>
<author><name>Ralf</name></author>
<title type="html">Linux 0.99</title>
<link rel="alternate" type="text/html" href="http://www.alfray.com/ralf/blog/dev/1993-04-01_linux_0_99.html"/>
<id>http://www.alfray.com/ralf/blog/dev/1993-04-01_linux_0_99.html</id>
<category term="dev" label="DEV"/>
<content type="html" xml:lang="en" xml:base="http://www.alfray.com/ralf/blog/dev/">&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Linux Kernel is now in version 6.something.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;The first version of Linux I used was Kernel 0.99, which I ran on my 286 PC back then. My machine was pretty beefy -- I had a &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;full&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;1 MB of RAM, way more than the meager 640 kB needed by DOS!&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;We didn&apos;t have Internet at the dorm back then. With a friend, we used the FTP at the university to download and write the &lt;/span&gt;&lt;span style=&quot;font-style:italic&quot;&gt;30&lt;/span&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&amp;nbsp;floppy 3 1/2 disks required to install it.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;We used one of the classrooms and basically used 20 computers in parallel to fill the floppies, one copy for each of us.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Then at home I had to feed the 30 floppies back to back to install it. It was... something.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;Now that may seem unusual but back then Windows 3 was distributed on a handful of floppies, and Office required up to a dozen floppies at some point.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;That was way before we could afford CD readers.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;A few years before that, I actually got a copy and ran MINIX on my Atari 1040STF. That only booted from 2 floppies, not bad.&lt;br&gt;(MINIX was a precursor from Linux, which Torvald learned from).&lt;br&gt;It was slow like molasses to get to the shell.&lt;br&gt;It was amazing but&#8230;&lt;br&gt;Then I realized... Why the heck am I using a multi-user environment on my home 16-bit computer?&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;The idea of having the computer do more than *one* thing at a time did not even make sense to me back then.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p style=&quot;height:12pt;text-align:left&quot;&gt;&lt;/p&gt;
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;font-family:&amp;quot;Workbench&amp;quot;;font-size:12pt&quot;&gt;&lt;/span&gt;&lt;/p&gt;</content>
<updated>1993-04-01T00:00:34-08:00</updated>
</entry>
</feed>
